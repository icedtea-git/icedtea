// This file is an automatically generated file, please do not edit this file, modify the WrapperGenerator.java file instead !

package sun.awt.X11;

import sun.misc.*;

import sun.util.logging.PlatformLogger;
public class XColor extends XWrapperBase { 
	private Unsafe unsafe = XlibWrapper.unsafe; 
	private final boolean should_free_memory;
	public static int getSize() { return 16; }
	public int getDataSize() { return getSize(); }

	long pData;

	public long getPData() { return pData; }


	public XColor(long addr) {
		log.finest("Creating");
		pData=addr;
		should_free_memory = false;
	}


	public XColor() {
		log.finest("Creating");
		pData = unsafe.allocateMemory(getSize());
		should_free_memory = true;
	}


	public void dispose() {
		log.finest("Disposing");
		if (should_free_memory) {
			log.finest("freeing memory");
			unsafe.freeMemory(pData); 
	}
		}
	public long get_pixel() { log.finest("");return (Native.getLong(pData+0)); }
	public void set_pixel(long v) { log.finest(""); Native.putLong(pData+0, v); }
	public short get_red() { log.finest("");return (Native.getShort(pData+8)); }
	public void set_red(short v) { log.finest(""); Native.putShort(pData+8, v); }
	public short get_green() { log.finest("");return (Native.getShort(pData+10)); }
	public void set_green(short v) { log.finest(""); Native.putShort(pData+10, v); }
	public short get_blue() { log.finest("");return (Native.getShort(pData+12)); }
	public void set_blue(short v) { log.finest(""); Native.putShort(pData+12, v); }
	public byte get_flags() { log.finest("");return (Native.getByte(pData+14)); }
	public void set_flags(byte v) { log.finest(""); Native.putByte(pData+14, v); }
	public byte get_pad() { log.finest("");return (Native.getByte(pData+15)); }
	public void set_pad(byte v) { log.finest(""); Native.putByte(pData+15, v); }


	String getName() {
		return "XColor"; 
	}


	String getFieldsAsString() {
		StringBuilder ret = new StringBuilder(240);

		ret.append("pixel = ").append( get_pixel() ).append(", ");
		ret.append("red = ").append( get_red() ).append(", ");
		ret.append("green = ").append( get_green() ).append(", ");
		ret.append("blue = ").append( get_blue() ).append(", ");
		ret.append("flags = ").append( get_flags() ).append(", ");
		ret.append("pad = ").append( get_pad() ).append(", ");
		return ret.toString();
	}


}



