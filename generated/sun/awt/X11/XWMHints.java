// This file is an automatically generated file, please do not edit this file, modify the WrapperGenerator.java file instead !

package sun.awt.X11;

import sun.misc.*;

import sun.util.logging.PlatformLogger;
public class XWMHints extends XWrapperBase { 
	private Unsafe unsafe = XlibWrapper.unsafe; 
	private final boolean should_free_memory;
	public static int getSize() { return 56; }
	public int getDataSize() { return getSize(); }

	long pData;

	public long getPData() { return pData; }


	public XWMHints(long addr) {
		log.finest("Creating");
		pData=addr;
		should_free_memory = false;
	}


	public XWMHints() {
		log.finest("Creating");
		pData = unsafe.allocateMemory(getSize());
		should_free_memory = true;
	}


	public void dispose() {
		log.finest("Disposing");
		if (should_free_memory) {
			log.finest("freeing memory");
			unsafe.freeMemory(pData); 
	}
		}
	public long get_flags() { log.finest("");return (Native.getLong(pData+0)); }
	public void set_flags(long v) { log.finest(""); Native.putLong(pData+0, v); }
	public int get_initial_state() { log.finest("");return (Native.getInt(pData+12)); }
	public void set_initial_state(int v) { log.finest(""); Native.putInt(pData+12, v); }
	public long get_icon_pixmap(int index) { log.finest(""); return Native.getLong(pData+16)+index*Native.getLongSize(); }
	public long get_icon_pixmap() { log.finest("");return Native.getLong(pData+16); }
	public void set_icon_pixmap(long v) { log.finest(""); Native.putLong(pData + 16, v); }
	public long get_icon_window() { log.finest("");return (Native.getLong(pData+24)); }
	public void set_icon_window(long v) { log.finest(""); Native.putLong(pData+24, v); }
	public int get_icon_x() { log.finest("");return (Native.getInt(pData+32)); }
	public void set_icon_x(int v) { log.finest(""); Native.putInt(pData+32, v); }
	public int get_icon_y() { log.finest("");return (Native.getInt(pData+36)); }
	public void set_icon_y(int v) { log.finest(""); Native.putInt(pData+36, v); }
	public long get_icon_mask() { log.finest("");return (Native.getLong(pData+40)); }
	public void set_icon_mask(long v) { log.finest(""); Native.putLong(pData+40, v); }
	public boolean get_input() { log.finest("");return (Native.getBool(pData+8)); }
	public void set_input(boolean v) { log.finest(""); Native.putBool(pData+8, v); }
	public long get_window_group() { log.finest("");return (Native.getLong(pData+48)); }
	public void set_window_group(long v) { log.finest(""); Native.putLong(pData+48, v); }


	String getName() {
		return "XWMHints"; 
	}


	String getFieldsAsString() {
		StringBuilder ret = new StringBuilder(360);

		ret.append("flags = ").append( get_flags() ).append(", ");
		ret.append("initial_state = ").append( get_initial_state() ).append(", ");
		ret.append("icon_pixmap = ").append( get_icon_pixmap() ).append(", ");
		ret.append("icon_window = ").append( get_icon_window() ).append(", ");
		ret.append("icon_x = ").append( get_icon_x() ).append(", ");
		ret.append("icon_y = ").append( get_icon_y() ).append(", ");
		ret.append("icon_mask = ").append( get_icon_mask() ).append(", ");
		ret.append("input = ").append( get_input() ).append(", ");
		ret.append("window_group = ").append( get_window_group() ).append(", ");
		return ret.toString();
	}


}



