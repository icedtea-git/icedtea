// This file is an automatically generated file, please do not edit this file, modify the WrapperGenerator.java file instead !

package sun.awt.X11;

import sun.misc.*;

import sun.util.logging.PlatformLogger;
public class XStandardColormap extends XWrapperBase { 
	private Unsafe unsafe = XlibWrapper.unsafe; 
	private final boolean should_free_memory;
	public static int getSize() { return 80; }
	public int getDataSize() { return getSize(); }

	long pData;

	public long getPData() { return pData; }


	public XStandardColormap(long addr) {
		log.finest("Creating");
		pData=addr;
		should_free_memory = false;
	}


	public XStandardColormap() {
		log.finest("Creating");
		pData = unsafe.allocateMemory(getSize());
		should_free_memory = true;
	}


	public void dispose() {
		log.finest("Disposing");
		if (should_free_memory) {
			log.finest("freeing memory");
			unsafe.freeMemory(pData); 
	}
		}
	public long get_colormap() { log.finest("");return (Native.getLong(pData+0)); }
	public void set_colormap(long v) { log.finest(""); Native.putLong(pData+0, v); }
	public long get_red_max() { log.finest("");return (Native.getLong(pData+8)); }
	public void set_red_max(long v) { log.finest(""); Native.putLong(pData+8, v); }
	public long get_red_mult() { log.finest("");return (Native.getLong(pData+16)); }
	public void set_red_mult(long v) { log.finest(""); Native.putLong(pData+16, v); }
	public long get_green_max() { log.finest("");return (Native.getLong(pData+24)); }
	public void set_green_max(long v) { log.finest(""); Native.putLong(pData+24, v); }
	public long get_green_mult() { log.finest("");return (Native.getLong(pData+32)); }
	public void set_green_mult(long v) { log.finest(""); Native.putLong(pData+32, v); }
	public long get_blue_max() { log.finest("");return (Native.getLong(pData+40)); }
	public void set_blue_max(long v) { log.finest(""); Native.putLong(pData+40, v); }
	public long get_blue_mult() { log.finest("");return (Native.getLong(pData+48)); }
	public void set_blue_mult(long v) { log.finest(""); Native.putLong(pData+48, v); }
	public long get_base_pixel() { log.finest("");return (Native.getLong(pData+56)); }
	public void set_base_pixel(long v) { log.finest(""); Native.putLong(pData+56, v); }
	public long get_visualid() { log.finest("");return (Native.getLong(pData+64)); }
	public void set_visualid(long v) { log.finest(""); Native.putLong(pData+64, v); }
	public long get_killid() { log.finest("");return (Native.getLong(pData+72)); }
	public void set_killid(long v) { log.finest(""); Native.putLong(pData+72, v); }


	String getName() {
		return "XStandardColormap"; 
	}


	String getFieldsAsString() {
		StringBuilder ret = new StringBuilder(400);

		ret.append("colormap = ").append( get_colormap() ).append(", ");
		ret.append("red_max = ").append( get_red_max() ).append(", ");
		ret.append("red_mult = ").append( get_red_mult() ).append(", ");
		ret.append("green_max = ").append( get_green_max() ).append(", ");
		ret.append("green_mult = ").append( get_green_mult() ).append(", ");
		ret.append("blue_max = ").append( get_blue_max() ).append(", ");
		ret.append("blue_mult = ").append( get_blue_mult() ).append(", ");
		ret.append("base_pixel = ").append( get_base_pixel() ).append(", ");
		ret.append("visualid = ").append( get_visualid() ).append(", ");
		ret.append("killid = ").append( get_killid() ).append(", ");
		return ret.toString();
	}


}



