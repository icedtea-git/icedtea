// This file is an automatically generated file, please do not edit this file, modify the WrapperGenerator.java file instead !

package sun.awt.X11;

import sun.misc.*;

import sun.util.logging.PlatformLogger;
public class XGCValues extends XWrapperBase { 
	private Unsafe unsafe = XlibWrapper.unsafe; 
	private final boolean should_free_memory;
	public static int getSize() { return 128; }
	public int getDataSize() { return getSize(); }

	long pData;

	public long getPData() { return pData; }


	public XGCValues(long addr) {
		log.finest("Creating");
		pData=addr;
		should_free_memory = false;
	}


	public XGCValues() {
		log.finest("Creating");
		pData = unsafe.allocateMemory(getSize());
		should_free_memory = true;
	}


	public void dispose() {
		log.finest("Disposing");
		if (should_free_memory) {
			log.finest("freeing memory");
			unsafe.freeMemory(pData); 
	}
		}
	public int get_function() { log.finest("");return (Native.getInt(pData+0)); }
	public void set_function(int v) { log.finest(""); Native.putInt(pData+0, v); }
	public long get_plane_mask() { log.finest("");return (Native.getLong(pData+8)); }
	public void set_plane_mask(long v) { log.finest(""); Native.putLong(pData+8, v); }
	public long get_foreground() { log.finest("");return (Native.getLong(pData+16)); }
	public void set_foreground(long v) { log.finest(""); Native.putLong(pData+16, v); }
	public long get_background() { log.finest("");return (Native.getLong(pData+24)); }
	public void set_background(long v) { log.finest(""); Native.putLong(pData+24, v); }
	public int get_line_width() { log.finest("");return (Native.getInt(pData+32)); }
	public void set_line_width(int v) { log.finest(""); Native.putInt(pData+32, v); }
	public int get_line_style() { log.finest("");return (Native.getInt(pData+36)); }
	public void set_line_style(int v) { log.finest(""); Native.putInt(pData+36, v); }
	public int get_cap_style() { log.finest("");return (Native.getInt(pData+40)); }
	public void set_cap_style(int v) { log.finest(""); Native.putInt(pData+40, v); }
	public int get_join_style() { log.finest("");return (Native.getInt(pData+44)); }
	public void set_join_style(int v) { log.finest(""); Native.putInt(pData+44, v); }
	public int get_fill_style() { log.finest("");return (Native.getInt(pData+48)); }
	public void set_fill_style(int v) { log.finest(""); Native.putInt(pData+48, v); }
	public int get_fill_rule() { log.finest("");return (Native.getInt(pData+52)); }
	public void set_fill_rule(int v) { log.finest(""); Native.putInt(pData+52, v); }
	public int get_arc_mode() { log.finest("");return (Native.getInt(pData+56)); }
	public void set_arc_mode(int v) { log.finest(""); Native.putInt(pData+56, v); }
	public long get_tile() { log.finest("");return (Native.getLong(pData+64)); }
	public void set_tile(long v) { log.finest(""); Native.putLong(pData+64, v); }
	public long get_stipple() { log.finest("");return (Native.getLong(pData+72)); }
	public void set_stipple(long v) { log.finest(""); Native.putLong(pData+72, v); }
	public int get_ts_x_origin() { log.finest("");return (Native.getInt(pData+80)); }
	public void set_ts_x_origin(int v) { log.finest(""); Native.putInt(pData+80, v); }
	public int get_ts_y_origin() { log.finest("");return (Native.getInt(pData+84)); }
	public void set_ts_y_origin(int v) { log.finest(""); Native.putInt(pData+84, v); }
	public long get_font() { log.finest("");return (Native.getLong(pData+88)); }
	public void set_font(long v) { log.finest(""); Native.putLong(pData+88, v); }
	public int get_subwindow_mode() { log.finest("");return (Native.getInt(pData+96)); }
	public void set_subwindow_mode(int v) { log.finest(""); Native.putInt(pData+96, v); }
	public boolean get_graphics_exposures() { log.finest("");return (Native.getBool(pData+100)); }
	public void set_graphics_exposures(boolean v) { log.finest(""); Native.putBool(pData+100, v); }
	public int get_clip_x_origin() { log.finest("");return (Native.getInt(pData+104)); }
	public void set_clip_x_origin(int v) { log.finest(""); Native.putInt(pData+104, v); }
	public int get_clip_y_origin() { log.finest("");return (Native.getInt(pData+108)); }
	public void set_clip_y_origin(int v) { log.finest(""); Native.putInt(pData+108, v); }
	public long get_clip_mask() { log.finest("");return (Native.getLong(pData+112)); }
	public void set_clip_mask(long v) { log.finest(""); Native.putLong(pData+112, v); }
	public int get_dash_offset() { log.finest("");return (Native.getInt(pData+120)); }
	public void set_dash_offset(int v) { log.finest(""); Native.putInt(pData+120, v); }
	public byte get_dashes() { log.finest("");return (Native.getByte(pData+124)); }
	public void set_dashes(byte v) { log.finest(""); Native.putByte(pData+124, v); }


	String getName() {
		return "XGCValues"; 
	}


	String getFieldsAsString() {
		StringBuilder ret = new StringBuilder(920);

		ret.append("function = ").append( get_function() ).append(", ");
		ret.append("plane_mask = ").append( get_plane_mask() ).append(", ");
		ret.append("foreground = ").append( get_foreground() ).append(", ");
		ret.append("background = ").append( get_background() ).append(", ");
		ret.append("line_width = ").append( get_line_width() ).append(", ");
		ret.append("line_style = ").append( get_line_style() ).append(", ");
		ret.append("cap_style = ").append( get_cap_style() ).append(", ");
		ret.append("join_style = ").append( get_join_style() ).append(", ");
		ret.append("fill_style = ").append( get_fill_style() ).append(", ");
		ret.append("fill_rule = ").append( get_fill_rule() ).append(", ");
		ret.append("arc_mode = ").append( get_arc_mode() ).append(", ");
		ret.append("tile = ").append( get_tile() ).append(", ");
		ret.append("stipple = ").append( get_stipple() ).append(", ");
		ret.append("ts_x_origin = ").append( get_ts_x_origin() ).append(", ");
		ret.append("ts_y_origin = ").append( get_ts_y_origin() ).append(", ");
		ret.append("font = ").append( get_font() ).append(", ");
		ret.append("subwindow_mode = ").append( get_subwindow_mode() ).append(", ");
		ret.append("graphics_exposures = ").append( get_graphics_exposures() ).append(", ");
		ret.append("clip_x_origin = ").append( get_clip_x_origin() ).append(", ");
		ret.append("clip_y_origin = ").append( get_clip_y_origin() ).append(", ");
		ret.append("clip_mask = ").append( get_clip_mask() ).append(", ");
		ret.append("dash_offset = ").append( get_dash_offset() ).append(", ");
		ret.append("dashes = ").append( get_dashes() ).append(", ");
		return ret.toString();
	}


}



