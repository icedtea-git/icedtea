Key:

SX  - https://bugs.openjdk.java.net/browse/JDK-X
PRX - https://icedtea.classpath.org/bugzilla/show_bug.cgi?id=X
RHX - https://bugzilla.redhat.com/show_bug.cgi?id=X
DX  - https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=X
GX  - https://bugs.gentoo.org/show_bug.cgi?id=X
CAX - http://server.complang.tuwien.ac.at/cgi-bin/bugzilla/show_bug.cgi?id=X
LPX - https://bugs.launchpad.net/bugs/X
JDK-X  - https://bugs.openjdk.java.net/browse/JDK-X
GHX - https://github.com/icedtea-git/icedtea8/issues/X

CVE-XXXX-YYYY: https://cve.mitre.org/cgi-bin/cvename.cgi?name=XXXX-YYYY

New in release 3.31.0 (2024-04-XX):

New in release 3.30.0 (2024-02-02):

* CVEs
  - CVE-2024-20918
  - CVE-2024-20919
  - CVE-2024-20921
  - CVE-2024-20926
  - CVE-2024-20945
  - CVE-2024-20952
* Security fixes
  - JDK-8308204: Enhanced certificate processing
  - JDK-8314284: Enhance Nashorn performance
  - JDK-8314295: Enhance verification of verifier
  - JDK-8314307: Improve loop handling
  - JDK-8314468: Improve Compiler loops
  - JDK-8316976: Improve signature handling
  - JDK-8317547: Enhance TLS connection support
* Import of OpenJDK 8 u402 build 06
  - JDK-6528710: sRGB-ColorSpace to sRGB-ColorSpace Conversion
  - JDK-8029995: accept yes/no for boolean krb5.conf settings
  - JDK-8159156: [TESTBUG] ReserveMemory test is not useful on Aix.
  - JDK-8176509: Use pandoc for converting build readme to html
  - JDK-8206179: com/sun/management/OperatingSystemMXBean/GetCommittedVirtualMemorySize.java fails with Committed virtual memory size illegal value
  - JDK-8207404: MulticastSocket tests failing on AIX
  - JDK-8212677: X11 default visual support for IM status window on VNC
  - JDK-8239365: ProcessBuilder test modifications for AIX execution
  - JDK-8271838: AmazonCA.java interop test fails
  - JDK-8285398: Cache the results of constraint checks
  - JDK-8285696: AlgorithmConstraints:permits not throwing IllegalArgumentException when 'alg'  is null
  - JDK-8302017: Allocate BadPaddingException only if it will be thrown
  - JDK-8305329: [8u] Unify test libraries into single test library - step 1
  - JDK-8307837: [8u] Check step in GHA should also print errors
  - JDK-8309088: security/infra/java/security/cert/CertPathValidator/certification/AmazonCA.java fails
  - JDK-8311813: C1: Uninitialized PhiResolver::_loop field
  - JDK-8312489: Increase jdk.jar.maxSignatureFileSize default which is too low for JARs such as WhiteSource/Mend unified agent jar
  - JDK-8312535: MidiSystem.getSoundbank() throws unexpected SecurityException
  - JDK-8315280: Bump update version of OpenJDK: 8u402
  - JDK-8315506: C99 compatibility issue in LinuxNativeDispatcher
  - JDK-8317291: Missing null check for nmethod::is_native_method()
  - JDK-8317373: Add Telia Root CA v2
  - JDK-8317374: Add Let's Encrypt ISRG Root X2
  - JDK-8318759: Add four DigiCert root certificates
  - JDK-8319187: Add three eMudhra emSign roots
  - JDK-8319405: [s390] [jdk8] Increase javac default stack size for s390x zero
  - JDK-8320597: RSA signature verification fails on signed data that does not encode params correctly
* Bug fixes
  - JDK-8324184: Windows VS2010 build failed with "error C2275: 'int64_t'"

New in release 3.29.0 (2023-10-27):

* CVEs
  - CVE-2023-22067
  - CVE-2023-22081
* Security fixes
  - JDK-8286503, JDK-8312367: Enhance security classes
  - JDK-8297856: Improve handling of Bidi characters
  - JDK-8303384: Improved communication in CORBA
  - JDK-8305815, JDK-8307278: Update Libpng to 1.6.39
  - JDK-8309966: Enhanced TLS connections
* Import of OpenJDK 8 u392 build 08
  - JDK-6722928: Provide a default native GSS-API library on Windows
  - JDK-8040887: [TESTBUG] Remove test/runtime/6925573/SortMethodsTest.java
  - JDK-8042726: [TESTBUG] TEST.groups file was not updated after runtime/6925573/SortMethodsTest.java removal
  - JDK-8139348: Deprecate 3DES and RC4 in Kerberos
  - JDK-8173072: zipfs fails to handle incorrect info-zip "extended timestamp extra field"
  - JDK-8200468: Port the native GSS-API bridge to Windows
  - JDK-8202952: C2: Unexpected dead nodes after matching
  - JDK-8205399: Set node color on pinned HashMap.TreeNode deletion
  - JDK-8209115: adjust libsplashscreen linux ppc64le builds for easier libpng update
  - JDK-8214046: [macosx] Undecorated Frame does not Iconify when set to
  - JDK-8219804: java/net/MulticastSocket/Promiscuous.java fails intermittently due to NumberFormatException
  - JDK-8225687: Newly added sspi.cpp in JDK-6722928 still contains some small errors
  - JDK-8232225: Rework the fix for JDK-8071483
  - JDK-8242330: Arrays should be cloned in several JAAS Callback classes
  - JDK-8253269: The CheckCommonColors test should provide more info on failure
  - JDK-8283441: C2: segmentation fault in ciMethodBlocks::make_block_at(int)
  - JDK-8284910: Buffer clean in PasswordCallback
  - JDK-8287073: NPE from CgroupV2Subsystem.getInstance()
  - JDK-8287663: Add a regression test for JDK-8287073
  - JDK-8295685: Update Libpng to 1.6.38
  - JDK-8295894: Remove SECOM certificate that is expiring in September 2023
  - JDK-8308788: [8u] Remove duplicate HaricaCA.java test
  - JDK-8309122: Bump update version of OpenJDK: 8u392
  - JDK-8309143: [8u] fix archiving inconsistencies in GHA
  - JDK-8310026: [8u] make java_lang_String::hash_code consistent across platforms
  - JDK-8314960: Add Certigna Root CA - 2
  - JDK-8315135: Memory leak in the native implementation of Pack200.Unpacker.unpack()
  - JDK-8317040: Exclude cleaner test failing on older releases

New in release 3.28.0 (2023-07-28):

* CVEs
  - CVE-2023-22045
  - CVE-2023-22049
* Security fixes
  - JDK-8298676: Enhanced Look and Feel
  - JDK-8300596: Enhance Jar Signature validation
  - JDK-8304468: Better array usages
  - JDK-8305312: Enhanced path handling
* Import of OpenJDK 8 u382 build 05
  - JDK-8072678: Wrong exception messages in java.awt.color.ICC_ColorSpace
  - JDK-8151460: Metaspace counters can have inconsistent values
  - JDK-8152432: Implement setting jtreg @requires properties vm.flavor, vm.bits, vm.compMode
  - JDK-8185736: missing default exception handler in calls to rethrow_Stub
  - JDK-8186801: Add regression test to test mapping based charsets (generated at build time)
  - JDK-8215105: java/awt/Robot/HiDPIScreenCapture/ScreenCaptureTest.java: Wrong Pixel Color
  - JDK-8241311: Move some charset mapping tests from closed to open
  - JDK-8263059: security/infra/java/security/cert/CertPathValidator/certification/ComodoCA.java fails due to revoked cert
  - JDK-8268558: [TESTBUG] Case 2 in TestP11KeyFactoryGetRSAKeySpec is skipped
  - JDK-8271199: Mutual TLS handshake fails signing client certificate with custom sensitive PKCS11 key
  - JDK-8276841: Add support for Visual Studio 2022
  - JDK-8277881: Missing SessionID in TLS1.3 resumption in compatibility mode
  - JDK-8278851: Correct signer logic for jars signed with multiple digest algorithms
  - JDK-8282345: handle latest VS2022 in abstract_vm_version
  - JDK-8282600: SSLSocketImpl should not use user_canceled workaround when not necessary
  - JDK-8285515: (dc) DatagramChannel.disconnect fails with "Invalid argument" on macOS 12.4
  - JDK-8289301: P11Cipher should not throw out of bounds exception during padding
  - JDK-8293232: Fix race condition in pkcs11 SessionManager
  - JDK-8293815: P11PSSSignature.engineUpdate should not print debug messages during normal operation
  - JDK-8295530: Update Zlib Data Compression Library to Version 1.2.13
  - JDK-8298108: Add a regression test for JDK-8297684
  - JDK-8298271: java/security/SignedJar/spi-calendar-provider/TestSPISigned.java failing on Windows
  - JDK-8301119: Support for GB18030-2022
  - JDK-8301400: Allow additional characters for GB18030-2022 support
  - JDK-8302791: Add specific ClassLoader object to Proxy IllegalArgumentException message
  - JDK-8303028: Update system property for Java SE specification maintenance version
  - JDK-8303462: Bump update version of OpenJDK: 8u382
  - JDK-8304760: Add 2 Microsoft TLS roots
  - JDK-8305165: [8u] ServiceThread::nmethods_do is not called to keep nmethods from being zombied while in the queue
  - JDK-8305681: Allow additional characters for GB18030-2022 (Level 2) support
  - JDK-8305975: Add TWCA Global Root CA
  - JDK-8307134: Add GTS root CAs
  - JDK-8307310: Backport the tests for JDK-8058969 and JDK-8039271 to the OpenJDK8
  - JDK-8307531: [aarch64] JDK8 single-step debugging is extremely slow
  - JDK-8310947: gb18030-2000 not selectable with LANG=zh_CN.GB18030 after JDK-8301119

New in release 3.27.0 (2023-04-28):

* CVEs
  - CVE-2023-21930
  - CVE-2023-21937
  - CVE-2023-21938
  - CVE-2023-21939
  - CVE-2023-21954
  - CVE-2023-21967
  - CVE-2023-21968
* Security fixes
  - JDK-8287404: Improve ping times
  - JDK-8288436: Improve Xalan supports
  - JDK-8294474: Better AES support
  - JDK-8295304: Runtime support improvements
  - JDK-8296496, JDK-8292652: Overzealous check in sizecalc.h prevents large memory allocation
  - JDK-8296676, JDK-8296622: Improve String platform support
  - JDK-8296684: Improve String platform support
  - JDK-8296692: Improve String platform support
  - JDK-8296700: Improve String platform support
  - JDK-8296832: Improve Swing platform support
  - JDK-8297371: Improve UTF8 representation redux
  - JDK-8298191: Enhance object reclamation process
  - JDK-8298310: Enhance TLS session negotiation
  - JDK-8298667: Improved path handling
  - JDK-8299129: Enhance NameService lookups
* Import of OpenJDK 8 u372 build 07
  - JDK-6734341: REGTEST fails: SelectionAutoscrollTest.html
  - JDK-6829250: Reg test: java/awt/Toolkit/ScreenInsetsTest/ScreenInsetsTest.java fails in Windows
  - JDK-7001973: java/awt/Graphics2D/CopyAreaOOB.java fails
  - JDK-7124238: [macosx] Font in BasicHTML document is bigger than it should be
  - JDK-7124381: DragSourceListener.dragDropEnd() never been called on completion of dnd operation
  - JDK-8039888: [TEST_BUG] keyboard garbage after javax/swing/plaf/windows/WindowsRootPaneUI/WrongAltProcessing/WrongAltProcessing.java
  - JDK-8042098: [TESTBUG] Test sun/java2d/AcceleratedXORModeTest.java fails on Windows
  - JDK-8065422: Trailing dot in hostname causes TLS handshake to fail with SNI disabled
  - JDK-8072770: [TESTBUG] Some Introspector tests fail with a Java heap bigger than 4GB
  - JDK-8075964: Test java/awt/Mouse/TitleBarDoubleClick/TitleBarDoubleClick.html fails intermittently with timeout error
  - JDK-8137101: [TEST_BUG] javax/swing/plaf/basic/BasicHTML/4251579/bug4251579.java failure due to timing
  - JDK-8142540: [TEST_BUG] Test sun/awt/dnd/8024061/bug8024061.java fails on ubuntu
  - JDK-8156579: Two JavaBeans tests failed
  - JDK-8156581: Cleanup of ProblemList.txt
  - JDK-8159135: [PIT] javax/swing/JMenuItem/8152981/MenuItemIconTest.java always fail
  - JDK-8177560: @headful key can be removed from the tests for JavaSound
  - JDK-8196196: Headful tests should not be run in headless mode
  - JDK-8196467: javax/swing/JInternalFrame/Test6325652.java fails
  - JDK-8197408: Bad pointer comparison and small cleanup in os_linux.cpp
  - JDK-8203485: [freetype] text rotated on 180 degrees is too narrow
  - JDK-8205959: Do not restart close if errno is EINTR
  - JDK-8216366: Add rationale to PER_CPU_SHARES define
  - JDK-8226236: win32: gc/metaspace/TestCapacityUntilGCWrapAround.java fails
  - JDK-8228585: jdk/internal/platform/cgroup/TestCgroupMetrics.java - NumberFormatException because of large long values (memory limit_in_bytes)
  - JDK-8229182: [TESTBUG] runtime/containers/docker/TestMemoryAwareness.java test fails on SLES12
  - JDK-8229202: Docker reporting causes secondary crashes in error handling
  - JDK-8230305: Cgroups v2: Container awareness
  - JDK-8231111: Cgroups v2: Rework Metrics in java.base so as to recognize unified hierarchy
  - JDK-8232207: Linux os::available_memory re-reads cgroup configuration on every invocation
  - JDK-8233570: [TESTBUG] HTMLEditorKit test bug5043626.java is failing on macos
  - JDK-8234484: Add ability to configure third port for remote JMX
  - JDK-8237479: 8230305 causes slowdebug build failure
  - JDK-8239559: Cgroups: Incorrect detection logic on some systems
  - JDK-8239785: Cgroups: Incorrect detection logic on old systems in hotspot
  - JDK-8239827: The test OpenByUNCPathNameTest.java should be changed to be manual
  - JDK-8240189: [TESTBUG] Some cgroup tests are failing after JDK-8231111
  - JDK-8241087: Build failure with VS 2019 (16.5.0) due to C2039 and C2873
  - JDK-8242468: VS2019 build missing vcruntime140_1.dll
  - JDK-8243543: jtreg test security/infra/java/security/cert/CertPathValidator/certification/BuypassCA.java fails
  - JDK-8244500: jtreg test error in test/hotspot/jtreg/containers/docker/TestMemoryAwareness.java
  - JDK-8245543: Cgroups: Incorrect detection logic on some systems (still reproducible)
  - JDK-8245654: Add Certigna Root CA
  - JDK-8247676: vcruntime140_1.dll is not needed on 32-bit Windows
  - JDK-8248899: security/infra/java/security/cert/CertPathValidator/certification/QuoVadisCA.java fails, Certificate has been revoked
  - JDK-8252359: HotSpot Not Identifying it is Running in a Container
  - JDK-8252957: Wrong comment in CgroupV1Subsystem::cpu_quota
  - JDK-8253435: Cgroup: 'stomping of _mount_path' crash if manually mounted cpusets exist
  - JDK-8253714: [cgroups v2] Soft memory limit incorrectly using memory.high
  - JDK-8253727: [cgroups v2] Memory and swap limits reported incorrectly
  - JDK-8253797: [cgroups v2] Account for the fact that swap accounting is disabled on some systems
  - JDK-8253939: [TESTBUG] Increase coverage of the cgroups detection code
  - JDK-8254001: [Metrics] Enhance parsing of cgroup interface files for version detection
  - JDK-8254717: isAssignableFrom checks in KeyFactorySpi.engineGetKeySpec appear to be backwards
  - JDK-8254997: Remove unimplemented OSContainer::read_memory_limit_in_bytes
  - JDK-8257620: Do not use objc_msgSend_stret to get macOS version
  - JDK-8262379: Add regression test for JDK-8257746
  - JDK-8263404: RsaPrivateKeySpec is always recognized as RSAPrivateCrtKeySpec in RSAKeyFactory.engineGetKeySpec
  - JDK-8266391: Replace use of reflection in jdk.internal.platform.Metrics
  - JDK-8270317: Large Allocation in CipherSuite
  - JDK-8275535: Retrying a failed authentication on multiple LDAP servers can lead to users blocked
  - JDK-8275650: Problemlist java/io/File/createTempFile/SpecialTempFile.java for Windows 11
  - JDK-8275713: TestDockerMemoryMetrics test fails on recent runc
  - JDK-8278951: containers/cgroup/PlainRead.java fails on Ubuntu 21.10
  - JDK-8280048: Missing comma in copyright header
  - JDK-8282398: EndingDotHostname.java test fails because SSL cert expired
  - JDK-8282511: Use fixed certificate validation date in SSLExampleCert template
  - JDK-8282947: JFR: Dump on shutdown live-locks in some conditions
  - JDK-8283606: Tests may fail with zh locale on MacOS
  - JDK-8284102: [TESTBUG] [11u] Retroactively add regression test for JDK-8272124
  - JDK-8284690: [macos] VoiceOver : Getting java.lang.IllegalArgumentException: Invalid location on Editable JComboBox
  - JDK-8284756: [11u] Remove unused isUseContainerSupport in CgroupV1Subsystem
  - JDK-8284977: MetricsTesterCgroupV2.getLongValueEntryFromFile fails when named value doesn't exist
  - JDK-8286624: Regression Test CoordinateTruncationBug.java fails on OL8.3
  - JDK-8287107: CgroupSubsystemFactory.setCgroupV2Path asserts with freezer controller
  - JDK-8287109: Distrust.java failed with CertificateExpiredException
  - JDK-8287463: JFR: Disable TestDevNull.java on Windows
  - JDK-8287741: Fix of JDK-8287107 (unused cgv1 freezer controller) was incomplete
  - JDK-8289695: [TESTBUG] TestMemoryAwareness.java fails on cgroups v2 and crun
  - JDK-8291570: [TESTBUG] Part of JDK-8250984 absent from 11u
  - JDK-8292083: Detected container memory limit may exceed physical machine memory
  - JDK-8292541: [Metrics] Reported memory limit may exceed physical machine memory
  - JDK-8293472: Incorrect container resource limit detection if manual cgroup fs mounts present
  - JDK-8293540: [Metrics] Incorrectly detected resource limits with additional cgroup fs mounts
  - JDK-8293767: AWT test TestSinhalaChar.java has old SCCS markings
  - JDK-8294767: 8u contains two copies of test/../FileUtils.java, one uses JDK9+ features
  - JDK-8295322: Tests for JDK-8271459 were not backported to 11u
  - JDK-8295952: Problemlist existing compiler/rtm tests also on x86
  - JDK-8295982: Failure in sun/security/tools/keytool/WeakAlg.java - ks: The process cannot access the file because it is being used by another process
  - JDK-8296480: java/security/cert/pkix/policyChanges/TestPolicy.java is failing
  - JDK-8296485: BuildEEBasicConstraints.java test fails with SunCertPathBuilderException
  - JDK-8296632: Write a test to verify the content change of TextArea sends TextEvent
  - JDK-8296957: One more cast in SAFE_SIZE_NEW_ARRAY2
  - JDK-8297329: [8u] hotspot needs to recognise VS2019
  - JDK-8297739: Bump update version of OpenJDK: 8u372
  - JDK-8297996: [8u] generated images are broken due to renaming of MSVC runtime DLL's
  - JDK-8298027: Remove SCCS id's from awt jtreg tests
  - JDK-8298307: Enable hotspot/tier1 for 32-bit builds in GHA for 8u
  - JDK-8299445: EndingDotHostname.java fails because of compilation errors
  - JDK-8299548: Fix hotspot/test/runtime/Metaspace/MaxMetaspaceSizeTest.java in 8u
  - JDK-8299804: Fix non-portable code in hotspot shell tests in 8u
  - JDK-8300014: Some backports placed the tests in the wrong location
  - JDK-8300119: CgroupMetrics.getTotalMemorySize0() can report invalid results on 32 bit systems
  - JDK-8301122: [8u] Fix unreliable vs2010 download link
  - JDK-8301143: [TESTBUG] jfr/event/sampling/TestNative was backported to JDK8u without proper native wrapper
  - JDK-8301246: NPE in FcFontManager.getDefaultPlatformFont() on Linux without installed fontconfig
  - JDK-8301332: [8u] Fix writing of test files after the cgroups v2 backport
  - JDK-8301550: [8u] Enable additional linux build testing in GitHub
  - JDK-8301620: [8u] some shell tests are passed but have unexpected operator errors
  - JDK-8301760: Fix possible leak in SpNegoContext dispose
  - JDK-8303408: [AIX] Broken jdk8u build after JDK-8266391
  - JDK-8303828: [Solaris] Broken jdk8u build after JDK-8266391
  - JDK-8304053: Revert os specific stubs for SystemMetrics
  - JDK-8305113: (tz) Update Timezone Data to 2023c

New in release 3.26.0 (2023-02-06):

* CVEs
  - CVE-2023-21830
  - CVE-2023-21843
* Security fixes
  - JDK-8285021: Improve CORBA communication
  - JDK-8286496: Improve Thread labels
  - JDK-8288516: Enhance font creation
  - JDK-8289350: Better media supports
  - JDK-8293554: Enhanced DH Key Exchanges
  - JDK-8293598: Enhance InetAddress address handling
  - JDK-8293717: Objective view of ObjectView
  - JDK-8293734: Improve BMP image handling
  - JDK-8293742: Better Banking of Sounds
  - JDK-8295687: Better BMP bounds
* New features
  - Support for building with autoconf 2.71
* Import of OpenJDK 8 u362 build 09
  - JDK-6885993: Named Thread: introduce print() and print_on(outputStream* st) methods
  - JDK-7124218: [TEST_BUG] [macosx] Space should select cell in the JTable
  - JDK-8054066: com/sun/jdi/DoubleAgentTest.java fails with timeout
  - JDK-8067941: [TESTBUG] Fix tests for OS with 64K page size.
  - JDK-8071530: Update OS detection code to reflect Windows 10 version change
  - JDK-8073464: GC workers do not have thread names
  - JDK-8079255: [TEST_BUG] [macosx] Test closed/java/awt/Robot/RobotWheelTest/RobotWheelTest fails for Mac only
  - JDK-8129827: [TEST_BUG] Test java/awt/Robot/RobotWheelTest/RobotWheelTest.java fails
  - JDK-8148005: One byte may be corrupted by get_datetime_string()
  - JDK-8159599: [TEST_BUG] java/awt/Modal/ModalInternalFrameTest/ModalInternalFrameTest.java
  - JDK-8159720: Failure of C2 compilation with tiered prevents some C1 compilations
  - JDK-8197859: VS2017 Complains about UINTPTR_MAX definition in globalDefinitions_VisCPP.hpp
  - JDK-8206456: [TESTBUG] docker jtreg tests fail on systems without cpuset.effective_cpus / cpuset.effective_mems
  - JDK-8221529: [TESTBUG] Docker tests use old/deprecated image on AArch64
  - JDK-8224506: [TESTBUG] TestDockerMemoryMetrics.java fails with exitValue = 137
  - JDK-8233551: [TESTBUG] SelectEditTableCell.java fails on MacOS
  - JDK-8241086: Test runtime/NMT/HugeArenaTracking.java is failing on 32bit Windows
  - JDK-8253702: BigSur version number reported as 10.16, should be 11.nn
  - JDK-8255559: Leak File Descriptors Because of ResolverLocalFilesystem#engineResolveURI()
  - JDK-8265527: tools/javac/diags/CheckExamples.java fails after JDK-8078024 8u backport
  - JDK-8269039: Disable SHA-1 Signed JARs
  - JDK-8269850: Most JDK releases report macOS version 12 as 10.16 instead of 12.0
  - JDK-8270344: Session resumption errors
  - JDK-8271459: C2: Missing NegativeArraySizeException when creating StringBuilder with negative capacity
  - JDK-8273176: handle latest VS2019 in abstract_vm_version
  - JDK-8274563: jfr/event/oldobject/TestClassLoaderLeak.java fails when GC cycles are not happening
  - JDK-8274840: Update OS detection code to recognize Windows 11
  - JDK-8275887: jarsigner prints invalid digest/signature algorithm warnings if keysize is weak/disabled
  - JDK-8280890: Cannot use '-Djava.system.class.loader' with class loader in signed JAR
  - JDK-8283277: ISO 4217 Amendment 171 Update
  - JDK-8283903: GetContainerCpuLoad does not return the correct result in share mode
  - JDK-8284389: Improve stability of GHA Pre-submit testing by caching cygwin installer
  - JDK-8284622: Update versions of some Github Actions used in JDK workflow
  - JDK-8286582: Build fails on macos aarch64 when using --with-zlib=bundled
  - JDK-8288928: Incorrect GPL header in pnglibconf.h (backport of JDK-8185041)
  - JDK-8289549: ISO 4217 Amendment 172 Update
  - JDK-8292762: Remove .jcheck directories from jdk8u subcomponents
  - JDK-8293181: Bump update version of OpenJDK: 8u362
  - JDK-8293461: Add a test for JDK-8290832
  - JDK-8293828: JFR: jfr/event/oldobject/TestClassLoaderLeak.java still fails when GC cycles are not happening
  - JDK-8294307: ISO 4217 Amendment 173 Update
  - JDK-8294357: (tz) Update Timezone Data to 2022d
  - JDK-8294863: Enable partial tier1 testing in GHA for JDK8
  - JDK-8295164: JDK 8 jdi tests should not use tasklist command on Windows
  - JDK-8295173: (tz) Update Timezone Data to 2022e
  - JDK-8295288: Some vm_flags tests associate with a wrong BugID
  - JDK-8295714: GHA ::set-output is deprecated and will be removed
  - JDK-8295723: security/infra/wycheproof/RunWycheproof.java fails with Assertion Error
  - JDK-8295915: Problemlist compiler/rtm failures specific to 8u
  - JDK-8295950: Enable langtools/tier1 in GHA for 8u
  - JDK-8296108: (tz) Update Timezone Data to 2022f
  - JDK-8296239: ISO 4217 Amendment 174 Update
  - JDK-8296555: Enable hotspot/tier1 for 64-bit builds in GHA for 8u
  - JDK-8296715: CLDR v42 update for tzdata 2022f
  - JDK-8296959: Fix hotspot shell tests of 8u on multilib systems
  - JDK-8297141: Fix hotspot/test/runtime/SharedArchiveFile/DefaultUseWithClient.java for 8u
  - JDK-8297804: (tz) Update Timezone Data to 2022g
  - JDK-8299439: java/text/Format/NumberFormat/CurrencyFormat.java fails for hr_HR
  - JDK-8299483: ProblemList java/text/Format/NumberFormat/CurrencyFormat.java
  - JDK-8300178: JDK-8286496 causes build failure on older GCC
  - JDK-8300225: JDK-8288516 causes build failure on Windows + VS2010
* Bug fixes
  - Don't run check-aes on Zero builds (pointless and slow)

New in release 3.25.0 (2022-11-24):

* CVEs
  - CVE-2022-21619
  - CVE-2022-21626
  - CVE-2022-21624
  - CVE-2022-21628
* Security fixes
  - JDK-8282252: Improve BigInteger/Decimal validation
  - JDK-8285662: Better permission resolution
  - JDK-8286511: Improve macro allocation
  - JDK-8286519: Better memory handling
  - JDK-8286526: Improve NTLM support
  - JDK-8286533: Key X509 usages
  - JDK-8286910: Improve JNDI lookups
  - JDK-8286918: Better HttpServer service
  - JDK-8288508: Enhance ECDSA usage
* Import of OpenJDK 8 u352
  - JDK-7131823: bug in GIFImageReader
  - JDK-7186258: InetAddress$Cache should replace currentTimeMillis with nanoTime for more precise and accurate
  - JDK-8028265: Add legacy tz tests to OpenJDK
  - JDK-8039955: [TESTBUG] jdk/lambda/LambdaTranslationTest1 - java.lang.AssertionError: expected [d:1234.000000] but found [d:1234,000000]
  - JDK-8049228: Improve multithreaded scalability of InetAddress cache
  - JDK-8071507: (ref) Clear phantom reference as soft and weak references do
  - JDK-8087283: Add support for the XML Signature here() function to the JDK XPath implementation
  - JDK-8130895: Test javax/swing/system/6799345/TestShutdown.java fails on Solaris11 Sparcv9
  - JDK-8136354: [TEST_BUG] Test  java/awt/image/RescaleOp/RescaleAlphaTest.java with Bad action for script
  - JDK-8139668: Generate README-build.html from markdown
  - JDK-8143847: Remove REF_CLEANER reference category
  - JDK-8147862: Null check too late in sun.net.httpserver.ServerImpl
  - JDK-8150669: C1 intrinsic for Class.isPrimitive
  - JDK-8155742: [Windows] robot.keyPress(KeyEvent.VK_ALT_GRAPH) throws java.lang.IllegalArgumentException in windows
  - JDK-8173339: AArch64: Fix minimum stack size computations
  - JDK-8173361: various crashes in JvmtiExport::post_compiled_method_load
  - JDK-8175797: (ref) Reference::enqueue method should clear the reference object before enqueuing
  - JDK-8178832: (ref) jdk.lang.ref.disableClearBeforeEnqueue property is ignored
  - JDK-8183107: PKCS11 regression regarding checkKeySize
  - JDK-8193780: (ref) Remove the undocumented "jdk.lang.ref.disableClearBeforeEnqueue" system property
  - JDK-8194873: right ALT key hotkeys no longer work in Swing components
  - JDK-8201793: (ref) Reference object should not support cloning
  - JDK-8214427: probable bug in logic of ConcurrentHashMap.addCount()
  - JDK-8232950: SUNPKCS11 Provider incorrectly check key length for PSS Signatures.
  - JDK-8233019: java.lang.Class.isPrimitive() (C1) returns wrong result if Klass* is aligned to 32bit
  - JDK-8235218: Minimal VM is broken after JDK-8173361
  - JDK-8235385: Crash on aarch64 JDK due to long offset
  - JDK-8245263: Enable TLSv1.3 by default on JDK 8u for Client roles
  - JDK-8254178: Remove .hgignore
  - JDK-8254318: Remove .hgtags
  - JDK-8256722: handle VC++:1927 VS2019 in  abstract_vm_version
  - JDK-8260589: Crash in JfrTraceIdLoadBarrier::load(_jclass*)
  - JDK-8280963: Incorrect PrintFlags formatting on Windows
  - JDK-8282538: PKCS11 tests fail on CentOS Stream 9
  - JDK-8283849: AsyncGetCallTrace may crash JVM on guarantee
  - JDK-8285400: Add '@apiNote' to the APIs defined in Java SE 8 MR 3
  - JDK-8285497: Add system property for Java SE specification maintenance version
  - JDK-8287132: Retire Runtime.runFinalizersOnExit so that it always throws UOE
  - JDK-8287508: The tests added to jdk-8 by 8235385 are to be ported to jdk-11
  - JDK-8287521: Bump update version of OpenJDK: 8u352
  - JDK-8288763: Pack200 extraction failure with invalid size
  - JDK-8288865: [aarch64] LDR instructions must use legitimized addresses
  - JDK-8290000: Bump macOS GitHub actions to macOS 11
  - JDK-8292579: (tz) Update Timezone Data to 2022c
  - JDK-8292688: Support Security properties in security.testlibrary.Proc
* AArch32 port
  - JDK-8292599: [aarch32] Crash due to missed CPU specific part of 8233019

New in release 3.24.0 (2022-08-02):

* Security fixes
  - JDK-8272243: Improve DER parsing
  - JDK-8272249: Better properties of loaded Properties
  - JDK-8277608: Address IP Addressing
  - JDK-8281859, CVE-2022-21540: Improve class compilation
  - JDK-8281866, CVE-2022-21541: Enhance MethodHandle invocations
  - JDK-8283190: Improve MIDI processing
  - JDK-8284370: Improve zlib usage
  - JDK-8285407, CVE-2022-34169: Improve Xalan supports
* Import of OpenJDK 8 u342
  - JDK-8076190: Customizing the generation of a PKCS12 keystore
  - JDK-8129572: Cleanup usage of getResourceAsStream in jaxp
  - JDK-8132256: jaxp: Investigate removal of com/sun/org/apache/bcel/internal/util/ClassPath.java
  - JDK-8168926: C2: Bytecode escape analyzer crashes due to stack overflow
  - JDK-8170530: bash configure output contains a typo in a suggested library name
  - JDK-8190753: (zipfs): Accessing a large entry (> 2^31 bytes) leads to a negative initial size for ByteArrayOutputStream
  - JDK-8194154: System property user.dir should not be changed
  - JDK-8202142: jfr/event/io/TestInstrumentation is unstable
  - JDK-8209771: jdk.test.lib.Utils::runAndCheckException error
  - JDK-8221988: add possibility to build with Visual Studio 2019
  - JDK-8223396: [TESTBUG] several jfr tests do not clean up files created in /tmp
  - JDK-8230865: [TESTBUG] jdk/jfr/event/io/EvilInstrument.java fails at-run shell MakeJAR.sh target
  - JDK-8235211: serviceability/attach/RemovingUnixDomainSocketTest.java fails with AttachNotSupportedException: Unable to open socket file
  - JDK-8244973: serviceability/attach/RemovingUnixDomainSocketTest.java fails "stderr was not empty"
  - JDK-8248876: LoadObject with bad base address created for exec file on linux
  - JDK-8255239: The timezone of the hs_err_pid log file is corrupted in Japanese locale
  - JDK-8261107: ArrayIndexOutOfBoundsException in the ICC_Profile.getInstance(InputStream)
  - JDK-8266187: Memory leak in appendBootClassPath()
  - JDK-8274658: ISO 4217 Amendment 170 Update
  - JDK-8274751: Drag And Drop hangs on Windows
  - JDK-8278138: OpenJDK8 fails to start on Windows 8.1 after upgrading compiler to VS2017
  - JDK-8279669: test/jdk/com/sun/jdi/TestScaffold.java uses wrong condition
  - JDK-8281814: Debuginfo.diz contains redundant build path after backport JDK-8025936
  - JDK-8282458: Update .jcheck/conf file for 8u move to git
  - JDK-8282552: Bump update version of OpenJDK: 8u342
  - JDK-8283350: (tz) Update Timezone Data to 2022a
  - JDK-8284620: CodeBuffer may leak _overflow_arena
  - JDK-8285445: cannot open file "NUL:"
  - JDK-8285523: Improve test java/io/FileOutputStream/OpenNUL.java
  - JDK-8285591: [11] add signum checks in DSA.java engineVerify
  - JDK-8285727: [11u, 17u] Unify fix for JDK-8284920 with version from head
  - JDK-8286989: Build failure on macOS after 8281814
  - JDK-8287537: 8u JDK-8284620 backport broke AArch64 build
* Import of OpenJDK 8 u345
  - JDK-8290832: It is no longer possible to change "user.dir" in the JDK8
  - JDK-8291568: Bump update version of OpenJDK: 8u345

New in release 3.23.0 (2022-06-28):

* Security fixes
  - JDK-8269938: Enhance XML processing passes redux
  - JDK-8270504, CVE-2022-21426: Better XPath expression handling
  - JDK-8272255: Completely handle MIDI files
  - JDK-8272261: Improve JFR recording file processing
  - JDK-8272594: Better record of recordings
  - JDK-8274221: More definite BER encodings
  - JDK-8275151, CVE-2022-21443: Improved Object Identification
  - JDK-8277227: Better identification of OIDs
  - JDK-8277672, CVE-2022-21434: Better invocation handler handling
  - JDK-8278008, CVE-2022-21476: Improve Santuario processing
  - JDK-8278356: Improve file creation
  - JDK-8278449: Improve keychain support
  - JDK-8278805: Enhance BMP image loading
  - JDK-8278972, CVE-2022-21496: Improve URL supports
  - JDK-8281388: Change wrapping of EncryptedPrivateKeyInfo
* Import of OpenJDK 8 u332
  - JDK-8033980: Xerces Update: datatype XMLGregorianCalendarImpl and DurationImpl
  - JDK-8035437: Xerces Update: xml/serialize/DOMSerializerImpl
  - JDK-8035577: Xerces Update: impl/xpath/regex/RangeToken.java
  - JDK-8037259: xerces update: xpointer update
  - JDK-8041523: Xerces Update: Serializer improvements from Xalan
  - JDK-8141508: java.lang.invoke.LambdaConversionException: Invalid receiver type
  - JDK-8162572: Update License Header for all JAXP sources
  - JDK-8167014: jdeps: Missing message: warn.skipped.entry
  - JDK-8198411: [TEST_BUG] Two java2d tests are unstable in mach5
  - JDK-8202822: Add .git to .hgignore
  - JDK-8205540: test/hotspot/jtreg/vmTestbase/nsk/jdb/trace/trace001/trace001.java fails with Debuggee did not exit after 15 <cont> commands
  - JDK-8209178: Proxied HttpsURLConnection doesn't send BODY when retrying POST request
  - JDK-8210283: Support git as an SCM alternative in the build
  - JDK-8218682: [TEST_BUG] DashOffset fails in mach5
  - JDK-8225690: Multiple AttachListener threads can be created
  - JDK-8227738: jvmti/DataDumpRequest/datadumpreq001 failed due to "exit code is 134"
  - JDK-8227815: Minimal VM: set_state is not a member of AttachListener
  - JDK-8240633: Memory leaks in the implementations of FileChooserUI
  - JDK-8241768: git needs .gitattributes
  - JDK-8247766: [aarch64] guarantee(val < (1U << nbits)) failed: Field too big for insn
  - JDK-8253147: The javax/swing/JPopupMenu/7154841/bug7154841.java fail on big screens
  - JDK-8253353: Crash in C2: guarantee(n != NULL) failed: No Node
  - JDK-8266749: AArch64: Backtracing broken on PAC enabled systems
  - JDK-8270290: NTLM authentication fails if HEAD request is used
  - JDK-8273229: Update OS detection code to recognize Windows Server 2022
  - JDK-8273341: Update Siphash to version 1.0
  - JDK-8273575: memory leak in appendBootClassPath(), paths must be deallocated
  - JDK-8274524: SSLSocket.close() hangs if it is called during the ssl handshake
  - JDK-8277224: sun.security.pkcs.PKCS9Attributes.toString() throws NPE
  - JDK-8277488: Add expiry exception for Digicert (geotrustglobalca) expiring in May 2022
  - JDK-8279077: JFR crashes on Linux ppc due to missing crash protector in signal handler
  - JDK-8280060: The sun/rmi/server/Activation.java class use Thread.dumpStack()
  - JDK-8282300: Throws NamingException instead of InvalidNameException after JDK-8278972
  - JDK-8282397: createTempFile method of java.io.File is failing when called with suffix of spaces character
  - JDK-8284548: Invalid XPath expression causes StringIndexOutOfBoundsException
  - JDK-8284920: Incorrect Token type causes XPath expression to return empty result
  - JDK-8284936: Fix Java 7 bootstrap breakage due to use of Arrays.stream
* Backports
  - JDK-8031567: Better model for storing source revision information
  - JDK-8170385: JDK-8031567 broke source bundles
  - JDK-8170392: JDK-8031567 broke builds from source bundles
  - JDK-8253424: Add support for running pre-submit testing using GitHub Actions
  - JDK-8253865: Pre-submit testing using GitHub Actions does not detect failures reliably
  - JDK-8254054: Pre-submit testing using GitHub Actions should not use the deprecated set-env command
  - JDK-8254173: Add Zero, Minimal hotspot targets to submit workflow
  - JDK-8254175: Build no-pch configuration in debug mode for submit checks
  - JDK-8254282: Add Linux x86_32 builds to submit workflow
  - JDK-8255305: Add Linux x86_32 tier1 to submit workflow
  - JDK-8255352: Archive important test outputs in submit workflow
  - JDK-8255373: Submit workflow artifact name is always "test-results_.zip"
  - JDK-8255895: Submit workflow artifacts miss hs_errs/replays due to ZIP include mismatch
  - JDK-8256127: Add cross-compiled foreign architectures builds to submit workflow
  - JDK-8256277: Github Action build on macOS should define OS and Xcode versions
  - JDK-8256354: Github Action build on Windows should define OS and MSVC versions
  - JDK-8256393: Github Actions build on Linux should define OS and GCC versions
  - JDK-8256414: add optimized build to submit workflow
  - JDK-8256747: GitHub Actions: decouple the hotspot build-only jobs from Linux x64 testing
  - JDK-8257056: Submit workflow should apt-get update to avoid package installation errors
  - JDK-8259924: GitHub actions fail on Linux x86_32 with "Could not configure libc6:i386"
  - JDK-8260460: GitHub actions still fail on Linux x86_32 with "Could not configure libc6:i386"
  - JDK-8263667: Avoid running GitHub actions on branches named pr/*
  - JDK-8282225: GHA: Allow one concurrent run per PR only
  - JDK-8284772: 8u GHA: Use GCC Major Version Dependencies Only
* Bug fixes
  - GH002: Only add -Wno-unused-parameter on gcc and clang compilers.
  - GH004: Fix naming of sockaddr_in6 variable (sa6->him6) in SOCKETADDRESS union on Windows
  - GH007: Fix NetworkInterface_winXP.c variable declarations to compile on VS2010
  - GH008: Reinstate POST_STRIP_CMD empty check in Images.gmk
  - GH012: Building from tarball broken by bad backport of JDK-8210283 (#13)
* Shenandoah
  - JDK-8260632: Build failures after JDK-8253353

New in release 3.22.0 (2022-03-04):

* Security fixes
  - JDK-8264934, CVE-2022-21248: Enhance cross VM serialization
  - JDK-8268488: More valuable DerValues
  - JDK-8268494: Better inlining of inlined interfaces
  - JDK-8268512: More content for ContentInfo
  - JDK-8268795: Enhance digests of Jar files
  - JDK-8268801: Improve PKCS attribute handling
  - JDK-8268813, CVE-2022-21283: Better String matching
  - JDK-8269151: Better construction of EncryptedPrivateKeyInfo
  - JDK-8269944: Better HTTP transport redux
  - JDK-8270392, CVE-2022-21293: Improve String constructions
  - JDK-8270416, CVE-2022-21294: Enhance construction of Identity maps
  - JDK-8270492, CVE-2022-21282: Better resolution of URIs
  - JDK-8270498, CVE-2022-21296: Improve SAX Parser configuration management
  - JDK-8270646, CVE-2022-21299: Improved scanning of XML entities
  - JDK-8271962: Better TrueType font loading
  - JDK-8271968: Better canonical naming
  - JDK-8271987: Manifest improved manifest entries
  - JDK-8272014, CVE-2022-21305: Better array indexing
  - JDK-8272026, CVE-2022-21340: Verify Jar Verification
  - JDK-8272236, CVE-2022-21341: Improve serial forms for transport
  - JDK-8272272: Enhance jcmd communication
  - JDK-8272462: Enhance image handling
  - JDK-8273290: Enhance sound handling
  - JDK-8273748, CVE-2022-21349: Improve Solaris font rendering
  - JDK-8273756, CVE-2022-21360: Enhance BMP image support
  - JDK-8273838, CVE-2022-21365: Enhanced BMP processing
* Import of OpenJDK 8 u322
  - JDK-6801613: Cross-platform pageDialog and printDialog top margin entry broken
  - JDK-8011541: [TEST_BUG] closed/javax/swing/plaf/metal/MetalUtils/bug6190373.java fails NPE since 7u25b03
  - JDK-8025430: [TEST_BUG] javax/swing/JEditorPane/5076514/bug5076514.java failed since jdk8b108
  - JDK-8041928: MouseEvent.getModifiersEx gives wrong result
  - JDK-8042199: The build of J2DBench via makefile is broken after the JDK-8005402
  - JDK-8044365: (dc) MulticastSendReceiveTests.java failing with ENOMEM when joining group (OS X 10.9)
  - JDK-8048021: Remove @version tag in jaxp repo
  - JDK-8049348: compiler/intrinsics/bmi/verifycode tests on lzcnt and tzcnt use incorrect assumption about REXB prefix usage
  - JDK-8060027: Tests java/beans/XMLEncoder/Test4903007.java and java/beans/XMLEncoder/java_awt_GridBagLayout.java
  - JDK-8066588: javax/management/remote/mandatory/connection/RMIConnector_NPETest.java fails to compile
  - JDK-8066652: Default TimeZone is GMT not local if user.timezone is invalid on Mac OS
  - JDK-8069034: gc/g1/TestEagerReclaimHumongousRegionsClearMarkBits.java nightly failure
  - JDK-8077590: windows_i586_6.2-product-c2-runThese8_Xcomp_vm failing after win compiler upgrade
  - JDK-8080287: The image of BufferedImage.TYPE_INT_ARGB and BufferedImage.TYPE_INT_ARGB_PRE is blank
  - JDK-8140329: [TEST_BUG] test FullScreenAfterSplash.java failed because image was not generated
  - JDK-8140472: java/net/ipv6tests/TcpTest.java failed intermittently with java.net.BindException: Address already in use: NET_Bind
  - JDK-8147051: StaxEntityResolverWrapper should create StaxXMLInputSource with a resolver indicator
  - JDK-8148915: Intermittent failures of bug6400879.java
  - JDK-8176837: SunPKCS11 provider needs to check more details on PKCS11 Mechanism
  - JDK-8177393: Result of RescaleOp for 4BYTE_ABGR images may be 25% black
  - JDK-8177536: Avoid Apple Peer-to-Peer interfaces in networking tests
  - JDK-8182036: Load from initializing arraycopy uses wrong memory state
  - JDK-8183369: RFC unconformity of HttpURLConnection with proxy
  - JDK-8183543: Aarch64: C2 compilation often fails with "failed spill-split-recycle sanity check"
  - JDK-8187450: JNI local refs exceeds capacity warning in NetworkInterface::getAll
  - JDK-8187649: ArrayIndexOutOfBoundsException in java.util.JapaneseImperialCalendar
  - JDK-8190482: InnocuousThread creation should not require the caller to possess enableContextClassLoaderOverride
  - JDK-8190793: Httpserver does not detect truncated request body
  - JDK-8196572: Tests ColConvCCMTest.java and MTColConvTest.java fail
  - JDK-8202788: Explicitly reclaim cached thread-local direct buffers at thread exit
  - JDK-8210058: Algorithmic Italic font leans opposite angle in Printing
  - JDK-8220150: macos10.14 Mojave returns anti-aliased glyphs instead of aliased B&W glyphs
  - JDK-8225082: Remove IdenTrust certificate that is expiring in September 2021
  - JDK-8225083: Remove Google certificate that is expiring in December 2021
  - JDK-8226806: [macOS 10.14] Methods of Java Robot should be called from appropriate thread
  - JDK-8231254: (fs) Add test for macOS Catalina changes to protect system software
  - JDK-8231438: [macOS] Dark mode for the desktop is not supported
  - JDK-8232178: MacVolumesTest failed after upgrade to MacOS Catalina
  - JDK-8232226: [macos 10.15] test/jdk/java/awt/color/EqualityTest/EqualityTest.java may fail
  - JDK-8235153: [TESTBUG] [macos 10.15] java/awt/Graphics/DrawImageBG/SystemBgColorTest.java fails
  - JDK-8236897: Fix the copyright header for pkcs11gcm2.h
  - JDK-8237499: JFR: Include stack trace in the ThreadStart event
  - JDK-8239886: Minimal VM build fails after JDK-8237499
  - JDK-8261397: Try Catch Method Failing to Work When Dividing An Integer By 0
  - JDK-8262731: [macOS] Exception from "Printable.print" is swallowed during "PrinterJob.print"
  - JDK-8272342: [TEST_BUG] java/awt/print/PrinterJob/PageDialogMarginTest.java catches all exceptions
  - JDK-8273308: PatternMatchTest.java fails on CI
  - JDK-8273342: Null pointer dereference in classFileParser.cpp:2817
  - JDK-8273826: Correct Manifest file name and NPE checks
  - JDK-8273968: JCK javax_xml tests fail in CI
  - JDK-8274407: (tz) Update Timezone Data to 2021c
  - JDK-8274467: TestZoneInfo310.java fails with tzdata2021b
  - JDK-8274468: TimeZoneTest.java fails with tzdata2021b
  - JDK-8274595: DisableRMIOverHTTPTest failed: connection refused
  - JDK-8274779: HttpURLConnection: HttpClient and HttpsClient incorrectly check request method when set to POST
  - JDK-8275766: (tz) Update Timezone Data to 2021e
  - JDK-8275849: TestZoneInfo310.java fails with tzdata2021e
  - JDK-8276536: Update TimeZoneNames files to follow the changes made by JDK-8275766

New in release 3.21.0 (2021-10-31):

* Security fixes
  - JDK-8130183, CVE-2021-35588: InnerClasses: VM permits wrong Throw ClassFormatError if InnerClasses attribute's inner_class_info_index is 0
  - JDK-8161016: Strange behavior of URLConnection with proxy
  - JDK-8163326, CVE-2021-35550: Update the default enabled cipher suites preference
  - JDK-8254967, CVE-2021-35565: com.sun.net.HttpsServer spins on TLS session close
  - JDK-8263314: Enhance XML Dsig modes
  - JDK-8265167, CVE-2021-35556: Richer Text Editors
  - JDK-8265574: Improve handling of sheets
  - JDK-8265580, CVE-2021-35559: Enhanced style for RTF kit
  - JDK-8265776: Improve Stream handling for SSL
  - JDK-8266097, CVE-2021-35561: Better hashing support
  - JDK-8266103: Better specified spec values
  - JDK-8266109: More Resilient Classloading
  - JDK-8266115: More Manifest Jar Loading
  - JDK-8266137, CVE-2021-35564: Improve Keystore integrity
  - JDK-8266689, CVE-2021-35567: More Constrained Delegation
  - JDK-8267086: ArrayIndexOutOfBoundsException in java.security.KeyFactory.generatePublic
  - JDK-8267712: Better LDAP reference processing
  - JDK-8267729, CVE-2021-35578: Improve TLS client handshaking
  - JDK-8267735, CVE-2021-35586: Better BMP support
  - JDK-8268193: Improve requests of certificates
  - JDK-8268199: Correct certificate requests
  - JDK-8268506: More Manifest Digests
  - JDK-8269618, CVE-2021-35603: Better session identification
  - JDK-8269624: Enhance method selection support
  - JDK-8270398: Enhance canonicalization
  - JDK-8270404: Better canonicalization
* Import of OpenJDK 8 u312 build 01
  - JDK-7146776: deadlock between URLStreamHandler.getHostAddress and file.Handler.openconnection
  - JDK-8004148: NPE in sun.awt.SunToolkit.getWindowDeactivationTime
  - JDK-8027154: [TESTBUG] Test java/awt/Mouse/GetMousePositionTest/GetMousePositionWithPopup.java fails
  - JDK-8035001: TEST_BUG: the retry logic in RMID.start() should check that the subprocess hasn't terminated
  - JDK-8035424: (reflect) Performance problem in sun.reflect.generics.parser.SignatureParser
  - JDK-8042557: compiler/uncommontrap/TestSpecTrapClassUnloading.java fails with: GC triggered before VM initialization completed
  - JDK-8054118: java/net/ipv6tests/UdpTest.java failed intermittently
  - JDK-8065215: Print warning summary at end of configure
  - JDK-8072767: DefaultCellEditor for comboBox creates ActionEvent with wrong source object
  - JDK-8079891: Store configure log in $BUILD/configure.log
  - JDK-8080082: configure fails if you create an empty directory and then run configure from it
  - JDK-8086003: Test fails on OSX with java.lang.RuntimeException 'Narrow klass base: 0x0000000000000000, Narrow klass shift: 3' missing
  - JDK-8134989: java/net/MulticastSocket/TestInterfaces.java failed due to unexpected IP address
  - JDK-8156584: Initialization race in sun.security.x509.AlgorithmId.get
  - JDK-8166673: The new implementation of Robot.waitForIdle() may hang
  - JDK-8170467: (reflect) Optimize SignatureParser's use of StringBuilders
  - JDK-8196181: sun/java2d/GdiRendering/InsetClipping.java fails
  - JDK-8202837: PBES2 AlgorithmId encoding error in PKCS12 KeyStore
  - JDK-8206189: sun/security/pkcs12/EmptyPassword.java fails with Sequence tag error
  - JDK-8214418: half-closed SSLEngine status may cause application dead loop
  - JDK-8214513: A PKCS12 keystore from Java 8 using custom PBE parameters cannot be read in Java 11
  - JDK-8220786: Create new switch to redirect error reporting output to stdout or stderr
  - JDK-8229243: SunPKCS11-Solaris provider tests failing on Solaris 11.4
  - JDK-8231222: fix pkcs11 P11_DEBUG guarded native traces
  - JDK-8238567: SoftMainMixer.processAudioBuffers(): Wrong handling of stoppedMixers
  - JDK-8240518: Incorrect JNU_ReleaseStringPlatformChars in Windows Print
  - JDK-8241248: NullPointerException in sun.security.ssl.HKDF.extract(HKDF.java:93)
  - JDK-8248901: Signed immediate support in .../share/assembler.hpp is broken.
  - JDK-8259338: Add expiry exception for identrustdstx3 alias to VerifyCACerts.java test
  - JDK-8262000: jdk/jfr/event/gc/detailed/TestPromotionFailedEventWithParallelScavenge.java failed with "OutOfMemoryError: Java heap space"
  - JDK-8262829: Native crash in Win32PrintServiceLookup.getAllPrinterNames()
  - JDK-8263311: Watch registry changes for remote printers update instead of polling
  - JDK-8265238: [8u] [macos] build failure in OpenJDK8u after JDK-8211301 in older xcode
  - JDK-8265978: make test should look for more locations when searching for exit code
  - JDK-8269810: [8u] Update generated_configure.sh after JDK-8250876 backport
  - JDK-8269953: config.log is not in build directory after 8u backport of JDK-8079891
  - JDK-8271466: StackGap test fails on aarch64 due to "-m64"
* Import of OpenJDK 8 u312 build 02
  - JDK-8247469: getSystemCpuLoad() returns -1 on linux when some offline cpus are present and cpusets.effective_cpus is not available
  - JDK-8265836: OperatingSystemImpl.getCpuLoad() returns incorrect CPU load inside a container
* Import of OpenJDK 8 u312 build 03
  - JDK-8237495: Java MIDI fails with a dereferenced memory error when asked to send a raw 0xF7
  - JDK-8264752: SIGFPE crash with option FlightRecorderOptions:threadbuffersize=30M
  - JDK-8266206: Build failure after JDK-8264752 with older GCCs
  - JDK-8270137: Kerberos Credential Retrieval from Cache not Working in Cross-Realm Setup
  - JDK-8272214: [8u] Build failure after backport of JDK-8248901
* Import of OpenJDK 8 u312 build 04
  - JDK-6847157: java.lang.NullPointerException: HDC for component at sun.java2d.loops.Blit.Blit
  - JDK-8176837: SunPKCS11 provider needs to check more details on PKCS11 Mechanism
  - JDK-8194246: JVM crashes when calling getStackTrace if stack contains a method that is a member of a very large class
  - JDK-8244154: Update SunPKCS11 provider with PKCS11 v3.0 header files
  - JDK-8263382: java/util/logging/ParentLoggersTest.java failed with "checkLoggers: getLoggerNames() returned unexpected loggers"
  - JDK-8268103: JNI functions incorrectly return a double after JDK-8265836
  - JDK-8269594: assert(_handle_mark_nesting > 1) failed: memory leak: allocating handle outside HandleMark
  - JDK-8269859: BacktraceBuilder._cprefs needs to be accessed as unsigned short
  - JDK-8269882: stack-use-after-scope in NewObjectA
* Import of OpenJDK 8 u312 build 05
  - JDK-7188942: Remove support of pbuffers in OGL Java2d pipeline
  - JDK-8022323: [JavaSecurityScanner] review package com.sun.management.* Native methods should be private
  - JDK-8131062: aarch64: add support for GHASH acceleration
  - JDK-8134869: AARCH64: GHASH intrinsic is not optimal
  - JDK-8269851: OperatingSystemMXBean getProcessCpuLoad reports incorrect process cpu usage in containers
  - JDK-8272124: Cgroup v1 initialization causes NullPointerException when cgroup path contains colon
  - JDK-8272714: [8u] Build failure after backport of JDK-8248901 with MSVC 2013
* Import of OpenJDK 8 u312 build 06
  - JDK-8268965: TCP Connection Reset when connecting simple socket to SSL server
  - JDK-8272643: Backout JDK-8176837 from 8u312
* Import of OpenJDK 8 u312 build 07
  - JDK-8157404: Unable to read certain PKCS12 keystores from SequenceInputStream
  - JDK-8222751: closed/test/jdk/sun/security/util/DerIndefLenConverter/IndefBerPkcs12.java fail
  - JDK-8269763: The JEditorPane is blank after JDK-8265167
* Shenandoah
  - [backport] 8269661: JNI_GetStringCritical does not lock char array
  - Re-cast JNI critical strings patch to be Shenandoah-specific

New in release 3.20.0 (2021-07-27):

* Security fixes
  - JDK-8256157: Improve bytecode assembly
  - JDK-8256491: Better HTTP transport
  - JDK-8258432, CVE-2021-2341: Improve file transfers
  - JDK-8260453: Improve Font Bounding
  - JDK-8260960: Signs of jarsigner signing
  - JDK-8260967, CVE-2021-2369: Better jar file validation
  - JDK-8262380: Enhance XML processing passes
  - JDK-8262403: Enhanced data transfer
  - JDK-8262410: Enhanced rules for zones
  - JDK-8262477: Enhance String Conclusions
  - JDK-8262967: Improve Zip file support
  - JDK-8264066, CVE-2021-2388: Enhance compiler validation
  - JDK-8264079: Improve abstractions
  - JDK-8264460: Improve NTLM support
* Import of OpenJDK 8 u302 build 01
  - JDK-6878250: (so) IllegalBlockingModeException thrown when reading from a closed SocketChannel's InputStream
  - JDK-7059970: Test case: javax/imageio/plugins/png/ITXtTest.java is not closing a file
  - JDK-8030123: java/beans/Introspector/Test8027648.java fails
  - JDK-8033289: clang: clean up unused function warning
  - JDK-8036095: RMI tests using testlibrary.RMID and testlibrary.JavaVM do not pass through vmoptions
  - JDK-8042891: Format issues embedded in macros for two g1 source files
  - JDK-8055754: filemap.cpp does not compile with clang
  - JDK-8064909: FragmentMetaspace.java got OutOfMemoryError
  - JDK-8066508: JTReg tests timeout on slow devices when run using JPRT
  - JDK-8066807: langtools/test/Makefile should use -agentvm not -samevm
  - JDK-8071374: -XX:+PrintAssembly -XX:+PrintSignatureHandlers crash fastdebug VM with assert(limit == __null || limit <= nm->code_end()) in RelocIterator::initialize
  - JDK-8073446: TimeZone getOffset API does not  return a dst offset between years 2038-2137
  - JDK-8075071: [TEST_BUG] TimSortStackSize2.java: OOME: Java heap space: MaxHeap shrinked by MaxRAMFraction
  - JDK-8077364: "if( !this )" construct prevents build on Xcode 6.3
  - JDK-8130308: Too low memory usage in TestPromotionFromSurvivorToTenuredAfterMinorGC.java
  - JDK-8132148: G1 hs_err region dump legend out of sync with region values
  - JDK-8132709: [TESTBUG] gc/g1/TestHumongousShrinkHeap.java might fail on embedded
  - JDK-8134672: [TEST_BUG] Some tests should check isDisplayChangeSupported
  - JDK-8134883: C1 hard crash in range check elimination in Nashorn test262parallel
  - JDK-8136592: [TEST_BUG] Fix 2 platform-specific closed regtests for jigsaw
  - JDK-8151786: [TESTBUG] java/beans/XMLEncoder/Test4625418.java timed out intermittently
  - JDK-8159898: Negative array size in java/beans/Introspector/Test8027905.java
  - JDK-8166046: [TESTBUG] compiler/stringopts/TestStringObjectInitialization.java fails with OOME
  - JDK-8166724: gc/g1/TestHumongousShrinkHeap.java fails with OOME
  - JDK-8177809: File.lastModified() is losing milliseconds (always ends in 000)
  - JDK-8178403: DirectAudio in JavaSound may hang and leak
  - JDK-8180478: tools/launcher/MultipleJRE.sh fails on Windows because of extra-''
  - JDK-8183910: gc/arguments/TestAggressiveHeap.java fails intermittently
  - JDK-8190332: PngReader throws NegativeArraySizeException/OOM error when IHDR width is very large
  - JDK-8190679: java/util/Arrays/TimSortStackSize2.java fails with "Initial heap size set to a larger value than the maximum heap size"
  - JDK-8191955: AArch64: incorrect prefetch distance causes an internal error
  - JDK-8199265: java/util/Arrays/TimSortStackSize2.java fails with OOM
  - JDK-8200550: Xcode 9.3 produce warning -Wexpansion-to-defined
  - JDK-8203196: C1 emits incorrect code due to integer overflow in _tableswitch keys
  - JDK-8205014: com/sun/jndi/ldap/DeadSSLLdapTimeoutTest.java failed with "Read timed out"
  - JDK-8209996: [PPC64] Fix JFR profiling
  - JDK-8214345: infinite recursion while checking super class
  - JDK-8217230: assert(t == t_no_spec) failure in NodeHash::check_no_speculative_types()
  - JDK-8217348: assert(thread->is_Java_thread()) failed: just checking
  - JDK-8225081: Remove Telia Company CA certificate expiring in April 2021
  - JDK-8225116: Test OwnedWindowsLeak.java intermittently fails
  - JDK-8230428: Cleanup dead CastIP node code in formssel.cpp
  - JDK-8231631: sun/net/ftp/FtpURLConnectionLeak.java fails intermittently with NPE
  - JDK-8231841: AArch64: debug.cpp help() is missing an AArch64 line for pns
  - JDK-8231949: [PPC64, s390]: Make async profiling more reliable
  - JDK-8234011: (zipfs) Memory leak in ZipFileSystem.releaseDeflater()
  - JDK-8241649: Optimize Character.toString
  - JDK-8243559: Remove root certificates with 1024-bit keys
  - JDK-8247350: [aarch64] assert(false) failed: wrong size of mach node
  - JDK-8249278: Revert JDK-8226253 which breaks the spec of AccessibleState.SHOWING for JList
  - JDK-8255086: Update the root locale display names
  - JDK-8255734: VM should ignore SIGXFSZ on ppc64, s390 too
  - JDK-8257999: Parallel GC crash in gc/parallel/TestDynShrinkHeap.java: new region is not in covered_region
  - JDK-8258419: RSA cipher buffer cleanup
  - JDK-8258669: fastdebug jvm crashes when do event based tracing for monitor inflation
  - JDK-8258753: StartTlsResponse.close() hangs due to synchronization issues
  - JDK-8259271: gc/parallel/TestDynShrinkHeap.java still fails "assert(covered_region.contains(new_memregion)) failed: new region is not in covered_region"
  - JDK-8259619: C1: 3-arg StubAssembler::call_RT stack-use condition is incorrect
  - JDK-8259886: Improve SSL session cache performance and scalability
  - JDK-8260029: aarch64: fix typo in verify_oop_array
  - JDK-8260236: better init AnnotationCollector _contended_group
  - JDK-8260255: C1: LoopInvariantCodeMotion constructor can leave some fields uninitialized
  - JDK-8260484: CheckExamples.java / NoJavaLangTest.java fail with jtreg 4.2
  - JDK-8260704: ParallelGC: oldgen expansion needs release-store for _end
  - JDK-8261355: No data buffering in SunPKCS11 Cipher encryption when the underlying mechanism has no padding
  - JDK-8261867: Backport relevant test changes & additions from JDK-8130125
  - JDK-8262110: DST starts from incorrect time in 2038
  - JDK-8262726: AArch64: C1 StubAssembler::call_RT can corrupt stack
  - JDK-8262730: Enable jdk8u MacOS external debug symbols
  - JDK-8262864: No debug symbols in image for Windows --with-native-debug-symbols=external
  - JDK-8263061: copy wrong unpack200 debuginfo to bin directory after 8252395
  - JDK-8263504: Some OutputMachOpcodes fields are uninitialized
  - JDK-8263600: change rmidRunning to a simple lookup
  - JDK-8264509: jdk8u MacOS zipped debug symbols won't build
  - JDK-8264562: assert(verify_field_bit(1)) failed: Attempting to write an uninitialized event field: type
  - JDK-8264816: Weak handles leak causes GC to take longer
  - JDK-8265832: runtime/StackGap/testme.sh fails to compile in 8u
  - JDK-8265988: Fix sun/text/IntHashtable/Bug4170614 for JDK 8u
  - JDK-8266191: Missing aarch64 parts of JDK-8181872(C1: possible overflow when strength reducing integer multiply by constant)
* Import of OpenJDK 8 u302 build 02
  - JDK-8129511: PlatformMidi.c:83 uses malloc without malloc header
* Import of OpenJDK 8 u302 build 03
  - JDK-8019470: Changes needed to compile JDK 8 on MacOS with clang compiler
  - JDK-8138820: JDK Hotspot build fails with Xcode 7.0.1
  - JDK-8241829: Cleanup the code for PrinterJob on windows
  - JDK-8252883: AccessDeniedException caused by delayed file deletion on Windows
  - JDK-8256818: SSLSocket that is never bound or connected leaks socket resources
  - JDK-8257670: sun/security/ssl/SSLSocketImpl/SSLSocketLeak.java reports leaks
  - JDK-8257884: Re-enable sun/security/ssl/SSLSocketImpl/SSLSocketLeak.java as automatic test
  - JDK-8257997: sun/security/ssl/SSLSocketImpl/SSLSocketLeak.java again reports leaks after JDK-8257884
  - JDK-8264640: CMS ParScanClosure misses a barrier
* Import of OpenJDK 8 u302 build 04
  - JDK-8032050: Clean up for java/rmi/activation/Activatable/shutdownGracefully/ShutdownGracefully.java
  - JDK-8043264: hsdis library not picked up correctly on expected paths
  - JDK-8130430: [TEST_BUG] remove unnecessary internal calls from javax/swing/JRadioButton/8075609/bug8075609.java
  - JDK-8206243: java -XshowSettings fails if memory.limit_in_bytes overflows LONG.max
  - JDK-8206925: Support the certificate_authorities extension
  - JDK-8228757: Fail fast if the handshake type is unknown
  - JDK-8242565: Policy initialization issues when the denyAfter constraint is enabled
  - JDK-8253375: OSX build fails with Xcode 12.0 (12A7209)
  - JDK-8257039: [8u] GenericTaskQueue destructor is incorrect
  - JDK-8262446: DragAndDrop hangs on Windows
  - JDK-8265666: Enable AIX build platform to make external debug symbols
* Import of OpenJDK 8 u302 build 05
  - JDK-6990210: [TEST_BUG] EventDispatchThread/HandleExceptionOnEDT/HandleExceptionOnEDT.java fails on gnome
  - JDK-7106851: Test should not use System.exit
  - JDK-8028618: [TEST BUG] javax/swing/JScrollBar/bug4202954/bug4202954.java fails
  - JDK-8035000: clean up ActivationLibrary.DestroyThread
  - JDK-8037825: Fix warnings and enable "warnings as errors" in serviceability native libraries
  - JDK-8043646: libosxapp.dylib fails to build on Mac OS 10.9 with clang
  - JDK-8047939: [TESTBUG] Rewrite test/runtime/8001071/Test8001071.sh
  - JDK-8074835: Resolve disabled warnings for libj2gss
  - JDK-8074836: Resolve disabled warnings for libosxkrb5
  - JDK-8078855: [TEST_BUG] javax/swing/JComboBox/8032878/bug8032878.java fails in WindowsClassicLookAndFeel
  - JDK-8081764: [TEST_BUG] Test javax/swing/plaf/aqua/CustomComboBoxFocusTest.java fails on Windows, Solaris Sparcv9 and Linux but passes on MacOSX
  - JDK-8172188: JDI tests fail due to "permission denied" when creating temp file
  - JDK-8196092: javax/swing/JComboBox/8032878/bug8032878.java fails
  - JDK-8202299: Java Keystore fails to load PKCS12/PFX certificates created in WindowsServer2016
  - JDK-8239053: [8u] clean up undefined-var-template warnings
  - JDK-8239400: [8u] clean up undefined-var-template warnings
  - JDK-8249142: java/awt/FontClass/CreateFont/DeleteFont.sh is unstable
  - JDK-8250876: Fix issues with cross-compile on macos
  - JDK-8254631: Better support ALPN byte wire values in SunJSSE
  - JDK-8265462: Handle multiple slots in the NSS Internal Module from SunPKCS11's Secmod
  - JDK-8266723: JFR periodic events are causing extra allocations
  - JDK-8266929: Unable to use algorithms from 3p providers
  - JDK-8267235: [macos_aarch64] InterpreterRuntime::throw_pending_exception messing up LR results in crash
  - JDK-8267426: MonitorVmStartTerminate test timed out on Embedded VM
  - JDK-8267689: [aarch64] Crash due to bad shift in indirect addressing mode
* Import of OpenJDK 8 u302 build 06
  - JDK-8267545: [8u] Enable Xcode 12 builds on macOS
  - JDK-8268444: keytool -v -list print is incorrect after backport JDK-8141457
* Import of OpenJDK 8 u302 build 07
  - JDK-8269388: Default build of OpenJDK 8 fails on newer GCCs with warnings as errors on format-overflow
  - JDK-8269468: JDK-8269388 breaks the build on older GCCs
* Import of OpenJDK 8 u302 build 08
  - JDK-8270533: AArch64: size_fits_all_mem_uses should return false if its output is a CAS
* Shenandoah
  - [backport] 8259580: Shenandoah: uninitialized label in VerifyThreadGCState
  - [backport] 8259954: gc/shenandoah/mxbeans tests fail with -Xcomp
  - [backport] 8261251: Shenandoah: Use object size for full GC humongous
  - [backport] 8261413: Shenandoah: Disable class-unloading in I-U mode
  - [backport] 8265239: Shenandoah: Shenandoah heap region count could be off by 1
  - [backport] 8266802: Shenandoah: Round up region size to page size unconditionally
  - [backport] 8267561: Shenandoah: Reference processing not properly setup for outside of cycle degenerated GC
  - [backport] 8268127: Shenandoah: Heap size may be too small for region to align to large page size
  - [backport] 8268699: Shenandoah: Add test for JDK-8268127
  - Shenandoah: Process weak roots during class unloading cycle

New in release 3.19.0 (2021-05-13):

* Security fixes
  - JDK-8227467: Better class method invocations
  - JDK-8244473: Contextualize registration for JNDI
  - JDK-8244543: Enhanced handling of abstract classes
  - JDK-8249906, CVE-2021-2163: Enhance opening JARs
  - JDK-8250568, CVE-2021-2161: Less ambiguous processing
  - JDK-8253799: Make lists of normal filenames
* New features
  - PR3835: Populate unique SystemTap suffix from configure
* Import of OpenJDK 8 u292 build 01
  - JDK-6949753: [TEST BUG]: java/awt/print/PageFormat/PDialogTest.java needs update by removing a infinite loop
  - JDK-8031126: java/lang/management/ThreadMXBean/ThreadUserTime.java fails intermittently
  - JDK-8035166: Remove dependency on EC classes from pkcs11 provider
  - JDK-8035186: j2se_jdk/jdk/test/java/lang/invoke/lambda/LogGeneratedClassesTest.java - assertion error
  - JDK-8078450: Implement consistent process for quarantine of tests
  - JDK-8080953: [TEST_BUG]Test java/awt/FontClass/DebugFonts.java fails due to wrongly typed bugid
  - JDK-8081547: Prepare client libs regression tests for running in a concurrent, headless jtreg environment
  - JDK-8141457: keytool default cert fingerprint algorithm should be SHA-256
  - JDK-8150204: (fs) Enhance java/nio/file/Files/probeContentType/Basic.java debugging output
  - JDK-8160217: JavaSound should clean up resources better
  - JDK-8163363: AArch64: Stack size in tools/launcher/Settings.java needs to be adjusted
  - JDK-8167281: IIOMetadataNode bugs in getElementsByTagName and NodeList.item methods
  - JDK-8168996: C2 crash at postaloc.cpp:140 : assert(false) failed: unexpected yanked node
  - JDK-8185934: keytool shows "Signature algorithm: SHA1withECDSA, -1-bit key"
  - JDK-8186090: java.nio.Bits.unaligned() doesn't handle aarch64
  - JDK-8202343: Disable TLS 1.0 and 1.1
  - JDK-8211339: NPE during SSL handshake caused by HostnameChecker
  - JDK-8216987: ciMethodData::load_data() unpacks MDOs with non-atomic copy
  - JDK-8217338: [Containers] Improve systemd slice memory limit support
  - JDK-8223186: HotSpot compile warnings from GCC 9
  - JDK-8225805: Java Access Bridge does not close the logger
  - JDK-8226899: Problemlist compiler/rtm tests
  - JDK-8227642: [TESTBUG] Make docker tests podman compatible
  - JDK-8228434: jdk/net/Sockets/Test.java fails after JDK-8227642
  - JDK-8229284: jdk/internal/platform/cgroup/TestCgroupMetrics.java fails for - memory:getMemoryUsage
  - JDK-8230388: Problemlist additional compiler/rtm tests
  - JDK-8233228: Disable weak named curves by default in TLS, CertPath, and Signed JAR
  - JDK-8234727: sun/security/ssl/X509TrustManagerImpl tests support TLSv1.3
  - JDK-8234728: Some security tests should support TLSv1.3
  - JDK-8235874: The ordering of Cipher Suites is not maintained provided through jdk.tls.client.cipherSuites and jdk.tls.server.cipherSuites system property.
  - JDK-8238579: HttpsURLConnection drops the timeout and hangs forever in read
  - JDK-8242141: New System Properties to configure the TLS signature schemes
  - JDK-8244621: [macos10.15] Garbled FX printing plus CoreText warnings on Catalina when building with Xcode 11
  - JDK-8249183: JVM crash in "AwtFrame::WmSize" method
  - JDK-8249588: libwindowsaccessbridge issues on 64bit Windows
  - JDK-8250984: Memory Docker tests fail on some Linux kernels w/o cgroupv1 swap limit capabilities
  - JDK-8251397: NPE on ClassValue.ClassValueMap.cacheArray
  - JDK-8252470: java/awt/dnd/DisposeFrameOnDragCrash/DisposeFrameOnDragTest.java fails on Windows
  - JDK-8253368: TLS connection always receives close_notify exception
  - JDK-8253476: TestUseContainerSupport.java fails on some Linux kernels w/o swap limit capabilities
  - JDK-8253932: SSL debug log prints incorrect caller info
  - JDK-8254854: [cgroups v1] Metric limits not properly detected on some join controller combinations
  - JDK-8255908: ExceptionInInitializerError due to UncheckedIOException while initializing cgroupv1 subsystem
  - JDK-8255937: Better cleanup for test/jdk/javax/imageio/stream/StreamFlush.java
  - JDK-8256642: [TEST_BUG] jdk/test/javax/sound/midi/MidiSystem/DefaultProperties.java failed
  - JDK-8257192: Integrate AArch64 JIT port into 8u
  - JDK-8258079: Eliminate ParNew's use of klass_or_null()
  - JDK-8258241: [8u] Missing doPrivileged() hunks from JDK-8226575
  - JDK-8258396: SIGILL in jdk.jfr.internal.PlatformRecorder.rotateDisk()
  - JDK-8258430: 8u backport of JDK-8063107 missing test/javax/swing/JRadioButton/8041561/bug8041561.java changes
  - JDK-8258933: G1 needs klass_or_null_acquire
  - JDK-8259312: VerifyCACerts.java fails as soneraclass2ca cert will
  - JDK-8259384: CUP version wrong in THIRD_PARTY_README after JDK-8233548
  - JDK-8259568: PPC64 builds broken after JDK-8221408 8u backport
* Import of OpenJDK 8 u292 build 02
  - JDK-8078614: WindowsClassicLookAndFeel MetalComboBoxUI.getbaseLine fails with IllegalArgumentException
  - JDK-8198334: java/awt/FileDialog/8003399/bug8003399.java fails in headless mode
  - JDK-8249251: [dark_mode ubuntu 20.04] The selected menu is not highlighted in GTKLookAndFeel
  - JDK-8250582: Revert Principal Name type to NT-UNKNOWN when requesting TGS Kerberos tickets
  - JDK-8258833: Cancel multi-part cipher operations in SunPKCS11 after failures
* Import of OpenJDK 8 u292 build 03
  - JDK-8145051: Wrong parameter name in synthetic lambda method leads to verifier error
  - JDK-8172404: Tools should warn if weak algorithms are used before restricting them
  - JDK-8209333: Socket reset issue for TLS 1.3 socket close
  - JDK-8219991: New fix of the deadlock in sun.security.ssl.SSLSocketImpl
  - JDK-8239091: Reversed arguments in call to strstr in freetype "debug" code.
  - JDK-8240827: Downport SSLSocketImpl.java from "8221882: Use fiber-friendly java.util.concurrent.locks in JSSE"
  - JDK-8255880: UI of Swing components is not redrawn after their internal state changed
  - JDK-8256682: JDK-8202343 is incomplete
  - JDK-8260930: AARCH64: Invalid value passed to critical JNI function
* Import of OpenJDK 8 u292 build 04
  - JDK-8061777: (zipfs) IllegalArgumentException in ZipCoder.toString when using Shitft_JIS
  - JDK-8158525: Update a few java/net tests to use the loopback address instead of the host address
  - JDK-8171410: aarch64: long multiplyExact shifts by 31 instead of 63
  - JDK-8225435: Upgrade IANA Language Subtag Registry to the latest for JDK14
  - JDK-8235263: Revert TLS 1.3 change that wrapped IOExceptions
  - JDK-8235311: Tag mismatch may alert bad_record_mac
  - JDK-8236500: Windows ucrt.dll should be looked up in versioned WINSDK subdirectory
  - JDK-8260349: Cannot programmatically retrieve Metaspace max set via JAVA_TOOL_OPTIONS
  - JDK-8261766: [8u] hotspot needs to recognise cl.exe 19.16 to build with VS2017
  - JDK-8262075: sun/security/krb5/auto/UseCacheAndStoreKey.java timed out intermittently
* Import of OpenJDK 8 u292 build 05
  - JDK-6345095: regression test EmptyClipRenderingTest fails
  - JDK-6896810: TEST_BUG: java/lang/ref/SoftReference/Pin.java fails with OOME during System.out.println
  - JDK-7107012: sun.jvm.hostspot.code.CompressedReadStream readDouble() conversion to long mishandled
  - JDK-7112454: TEST_BUG: java/awt/Choice/PopdownGeneratesMouseEvents/PopdownGeneratesMouseEvents.html failed
  - JDK-7131835: [TEST_BUG] Test does not consider that the rounded edges of the window in Mac OS 10.7
  - JDK-7185221: [macosx] Regtest should not throw exception if a suitable display mode found
  - JDK-8041464: [TEST_BUG] CustomClassLoaderTransferTest does not support OS X
  - JDK-8078024: javac, several incorporation steps are silently failing when an error should be reported
  - JDK-8129626: G1: set_in_progress() and clear_started() needs a barrier on non-TSO platforms
  - JDK-8211301: [macos] support full window content options
  - JDK-8240353: AArch64: missing support for -XX:+ExtendedDTraceProbes in C1
  - JDK-8248336: AArch64: C2: offset overflow in BoxLockNode::emit
  - JDK-8257746: Regression introduced with JDK-8250984 - memory might be null in some machines
  - JDK-8261231: Windows IME was disabled after DnD operation
  - JDK-8262073: assert(allocates2(pc)) failed: not in CodeBuffer memory
* Import of OpenJDK 8 u292 build 06
  - JDK-8259048: (tz) Upgrade time-zone data to tzdata2020f
* Import of OpenJDK 8 u292 build 07
  - JDK-8263008: AARCH64: Add debug info for libsaproc.so
* Import of OpenJDK 8 u292 build 08
  - JDK-8191915: JCK tests produce incorrect results with C2
  - JDK-8256421: Add 2 HARICA roots to cacerts truststore
  - JDK-8260356: (tz) Upgrade time-zone data to tzdata2021a
* Import of OpenJDK 8 u292 build 09
  - JDK-8264171: Missing aarch64 parts of JDK-8236179 (C1 register allocation failure with T_ADDRESS)
* Import of OpenJDK 8 u292 build 10
  - JDK-8258247: Couple of issues in fix for JDK-8249906
  - JDK-8259428: AlgorithmId.getEncodedParams() should return copy
  - JDK-8261183: Follow on to Make lists of normal filenames
* Backports
  - JDK-8250825, PR3837: C2 crashes with assert(field != __null) failed: missing field
  - JDK-8255466, PR3837: C2 crashes at ciObject::get_oop() const+0x0
* Bug fixes
  - PR3822: Update elliptic curve patch to handle jdk.disabled.namedCurves (JDK-8233228) & file movement (JDK-8035166)
  - PR3836: Extra compiler flags not passed to adlc build
  - PR3838: Bogus -Wnonnull warning on Zero builds
  - PR3839: Make -Wnonnull warnings on ppc64 non-fatal for now
* Shenandoah
  - [backport] 8202976: Add C1 lea patching support for x86
  - [backport] 8221507: Implement JFR Events for Shenandoah
  - [backport] 8224573: Fix windows build after JDK-8221507
  - [backport] 8228369: Shenandoah: Refactor LRB C1 stubs
  - [backport] 8229474: Shenandoah: Cleanup CM::update_roots()
  - [backport] 8229709: x86_32 build and test failures after JDK-8228369 (Shenandoah: Refactor LRB C1 stubs)
  - [backport] 8231087: Shenandoah: Self-fixing load reference barriers for C1/C2
  - [backport] 8232747: Shenandoah: Concurrent GC should deactivate SATB before processing weak roots
  - [backport] 8232992: Shenandoah: Implement self-fixing interpreter LRB
  - [backport] 8233021: Shenandoah: SBSC2::is_shenandoah_lrb_call should match all LRB shapes
  - [backport] 8233165: Shenandoah:SBSA::gen_load_reference_barrier_stub() should use pointer register for address on aarch64
  - [backport] 8233574: Shenandoah: build is broken without jfr
  - [backport] 8237837: Shenandoah: assert(mem == __null) failed: only one safepoint
  - [backport] 8238153: CTW: C2 (Shenandoah) compilation fails with "Unknown node in get_load_addr: CreateEx"
  - [backport] 8238851: Shenandoah: C1: Resolve into registers of correct type
  - [backport] 8240315: Shenandoah: Rename ShLBN::get_barrier_strength()
  - [backport] 8240751: Shenandoah: fold ShenandoahTracer definition
  - [backport] 8241765: Shenandoah: AARCH64 need to save/restore call clobbered registers before calling keepalive barrier
  - [backport] 8244510: Shenandoah: invert SHC2Support::is_in_cset condition
  - [backport] 8244663: Shenandoah: C2 assertion fails in Matcher::collect_null_checks
  - [backport] 8244721: CTW: C2 (Shenandoah) compilation fails with "unexpected infinite loop graph shape"
  - [backport] 8251451: Shenandoah: Remark ObjectSynchronizer roots with I-U
  - [backport] 8252660: Shenandoah: support manageable SoftMaxHeapSize option
  - [backport] 8253224: Shenandoah: ShenandoahStrDedupQueue destructor calls virtual num_queues()
  - [backport] 8253778: ShenandoahSafepoint::is_at_shenandoah_safepoint should not access VMThread state from other threads
  - [backport] 8255457: Shenandoah: cleanup ShenandoahMarkTask
  - [backport] 8255760: Shenandoah: match constants style in ShenandoahMarkTask fallback
  - [backport] 8256806: Shenandoah: optimize shenandoah/jni/TestPinnedGarbage.java test
  - [backport] 8257641: Shenandoah: Query is_at_shenandoah_safepoint() from control thread should return false
  - Fix racy update of code roots
  - Fix register allocation for thread register is 32bit LRB
  - Fix Shenandoah bindings in ADLC formssel
  - Normalise whitespace in AArch64 sources prior to merge of upstreamed version in 8u292-b01.
  - Revert differences against upstream 8u
  - Shenandoah: Backed out weak roots cleaning during full gc
* AArch64 port
  - Normalise AArch64 sources, prior to merge of upstream version.

New in release 3.18.0 (2021-02-05):

* Security fixes
  - JDK-8247619: Improve Direct Buffering of Characters
* Import of OpenJDK 8 u282 build 01
  - JDK-6962725: Regtest javax/swing/JFileChooser/6738668/bug6738668.java fails under Linux
  - JDK-8025936: Windows .pdb and .map files does not have proper dependencies setup
  - JDK-8030350: Enable additional compiler warnings for GCC
  - JDK-8031423: Test java/awt/dnd/DisposeFrameOnDragCrash/DisposeFrameOnDragTest.java fails by Timeout on Windows
  - JDK-8036122: Fix warning 'format not a string literal'
  - JDK-8051853: new URI("x/").resolve("..").getSchemeSpecificPart() returns null!
  - JDK-8132664: closed/javax/swing/DataTransfer/DefaultNoDrop/DefaultNoDrop.java locks on Windows
  - JDK-8134632: Mark javax/sound/midi/Devices/InitializationHang.java as headful
  - JDK-8148854: Class names "SomeClass" and "LSomeClass;" treated by JVM as an equivalent
  - JDK-8148916: Mark bug6400879.java as intermittently failing
  - JDK-8148983: Fix extra comma in changes for JDK-8148916
  - JDK-8160438: javax/swing/plaf/nimbus/8057791/bug8057791.java fails
  - JDK-8165808: Add release barriers when allocating objects with concurrent collection
  - JDK-8185003: JMX: Add a version of ThreadMXBean.dumpAllThreads with a maxDepth argument
  - JDK-8202076: test/jdk/java/io/File/WinSpecialFiles.java on windows with VS2017
  - JDK-8207766: [testbug] Adapt tests for Aix.
  - JDK-8212070: Introduce diagnostic flag to abort VM on failed JIT compilation
  - JDK-8213448: [TESTBUG] enhance jfr/jvm/TestDumpOnCrash
  - JDK-8215727: Restore JFR thread sampler loop to old / previous behavior
  - JDK-8220657: JFR.dump does not work when filename is set
  - JDK-8221342: [TESTBUG] Generate Dockerfile for docker testing
  - JDK-8224502: [TESTBUG] JDK docker test TestSystemMetrics.java fails with access issues and OOM
  - JDK-8231209: [REDO] ThreadMXBean::getThreadAllocatedBytes() can be quicker for self thread
  - JDK-8231968: getCurrentThreadAllocatedBytes default implementation s/b getThreadAllocatedBytes
  - JDK-8232114: JVM crashed at imjpapi.dll in native code
  - JDK-8234270: [REDO] JDK-8204128 NMT might report incorrect numbers for Compiler area
  - JDK-8234339: replace JLI_StrTok in java_md_solinux.c
  - JDK-8238448: RSASSA-PSS signature verification fail when using certain odd key sizes
  - JDK-8242335: Additional Tests for RSASSA-PSS
  - JDK-8244225: stringop-overflow warning on strncpy call from compile_the_world_in
  - JDK-8245400: Upgrade to LittleCMS 2.11
  - JDK-8248214: Add paddings for TaskQueueSuper to reduce false-sharing cache contention
  - JDK-8249176: Update GlobalSignR6CA test certificates
  - JDK-8250665: Wrong translation for the month name of May in ar_JO,LB,SY
  - JDK-8250928: JFR: Improve hash algorithm for stack traces
  - JDK-8251469: Better cleanup for test/jdk/javax/imageio/SetOutput.java
  - JDK-8251840: Java_sun_awt_X11_XToolkit_getDefaultScreenData should not be in make/mapfiles/libawt_xawt/mapfile-vers
  - JDK-8252384: [TESTBUG] Some tests refer to COMPAT provider rather than JRE
  - JDK-8252395: [8u] --with-native-debug-symbols=external doesn't include debuginfo files for binaries
  - JDK-8252497: Incorrect numeric currency code for ROL
  - JDK-8252754: Hash code calculation of JfrStackTrace is inconsistent
  - JDK-8252904: VM crashes when JFR is used and JFR event class is transformed
  - JDK-8252975: [8u] JDK-8252395 breaks the build for --with-native-debug-symbols=internal
  - JDK-8253284: Zero OrderAccess barrier mappings are incorrect
  - JDK-8253550: [8u] JDK-8252395 breaks the build for make STRIP_POLICY=no_strip
  - JDK-8253752: test/sun/management/jmxremote/bootstrap/RmiBootstrapTest.java fails randomly
  - JDK-8254081: java/security/cert/PolicyNode/GetPolicyQualifiers.java fails due to an expired certificate
  - JDK-8254144: Non-x86 Zero builds fail with return-type warning in os_linux_zero.cpp
  - JDK-8254166: Zero: return-type warning in zeroInterpreter_zero.cpp
  - JDK-8254683: [TEST_BUG] jdk/test/sun/tools/jconsole/WorkerDeadlockTest.java fails
  - JDK-8255003: Build failures on Solaris
* Import of OpenJDK 8 u282 build 02
  - JDK-8253837: JFR 8u fix symbol and cstring hashtable equals implementaion
  - JDK-8255269: Unsigned overflow in g1Policy.cpp
* Import of OpenJDK 8 u282 build 03
  - JDK-8163161: [PIT][TEST_BUG] increase timeout in javax/swing/plaf/nimbus/8057791/bug8057791.java
  - JDK-8168292: [TESTBUG] [macosx] Test java/awt/TrayIcon/DragEventSource/DragEventSource.java fails on OS X
  - JDK-8168682: jdk/test/java/lang/ClassLoader/forNameLeak/ClassForNameLeak.java fails with -Xcomp
  - JDK-8223108: Test java/awt/EventQueue/NonComponentSourcePost.java is unstable
  - JDK-8255603: Memory/Performance regression after JDK-8210985
* Import of OpenJDK 8 u282 build 04
  - JDK-8022535: [TEST BUG] javax/swing/text/html/parser/Test8017492.java fails
  - JDK-8043899: compiler/5091921/Test7005594.java fails if specified -Xmx is less than 1600m
  - JDK-8046221: [TEST_BUG] Cleanup datatransfer tests
  - JDK-8058805: [TEST_BUG]Test java/awt/TrayIcon/SecurityCheck/NoPermissionTest/NoPermissionTest.java fails
  - JDK-8068275: Some tests failed after JDK-8063104
  - JDK-8069211: (zipfs) ZipFileSystem creates corrupted zip if entry output stream gets closed more than once
  - JDK-8130772: Util.hitMnemonics does not work: getSystemMnemonicKeyCodes() returns ALT_MASK rather than VK_ALT
  - JDK-8156803: Turn StressLCM/StressGCM flags to diagnostic
  - JDK-8160761: [TESTBUG] Several compiler tests fail with product bits
  - JDK-8166015: [PIT][TEST_BUG] stray character in java/awt/Focus/ModalDialogActivationTest/ModalDialogActivationTest.java
  - JDK-8166583: Add oopDesc::klass_or_null_acquire()
  - JDK-8166663: Simplify oops_on_card_seq_iterate_careful
  - JDK-8166862: CMS needs klass_or_null_acquire
  - JDK-8179083: Uninitialized notifier in Java Monitor Wait tracing event
  - JDK-8205507: jdk/javax/xml/crypto/dsig/GenerationTests.java timed out
  - JDK-8217362: Emergency dump does not work when disk=false is set
  - JDK-8217766: Container Support doesn't work for some Join Controllers combinations
  - JDK-8219013: Update Apache Santuario (XML Signature) to version 2.1.3
  - JDK-8219562: Line of code in osContainer_linux.cpp L102 appears unreachable
  - JDK-8220579: [Containers] SubSystem.java out of sync with osContainer_linux.cpp
  - JDK-8221340: [TESTBUG] TestCgroupMetrics.java fails after fix for JDK-8219562
  - JDK-8221710: [TESTBUG] more configurable parameters for docker testing
  - JDK-8227006: [linux] Runtime.availableProcessors execution time increased by factor of 100
  - JDK-8229868: Update Apache Santuario TPRM version
  - JDK-8233548: Update CUP to v0.11b
  - JDK-8242480: Negative value may be returned by getFreeSwapSpaceSize() in the docker
  - JDK-8246648: issue with OperatingSystemImpl getFreeSwapSpaceSize in docker after 8242480
  - JDK-8249846: Change of behavior after JDK-8237117: Better ForkJoinPool behavior
  - JDK-8250636: iso8601_time returns incorrect offset part on MacOS
  - JDK-8251365: Build failure on AIX after 8250636
  - JDK-8255717: Fix JFR crash in WriteObjectSampleStacktrace due to object not initialized
  - JDK-8256618: Zero: Linux x86_32 build still fails
  - JDK-8256671: Incorrect assignment operator used in guarantee() in genCollectedHeap
  - JDK-8256752: 8252395 incorrect copy rule for macos .dSYM folder
  - JDK-8257397: [TESTBUG] test/lib/containers/docker/Common.java refers to -Xlog:os+container=trace
* Import of OpenJDK 8 u282 build 05
  - JDK-8254982: (tz) Upgrade time-zone data to tzdata2020c
* Import of OpenJDK 8 u282 build 06
  - JDK-8255226: (tz) Upgrade time-zone data to tzdata2020d
* Import of OpenJDK 8 u282 build 07
  - JDK-8225072: Add LuxTrust certificate that is expiring in March 2021 to list of allowed but expired certs
  - JDK-8239105: Add exception for expiring Digicert root certificates to VerifyCACerts test
  - JDK-8258630: Add expiry exception for QuoVadis root certificate
* Bug fixes
  - PR3819: Installation can't handle existing tapset symlinks
* Shenandoah
  - Shenandoah: Fix racy update of code roots
* AArch32 port
  - JDK-8253036: Support building the Zero assembler port on AArch64

New in release 3.17.1 (2020-11-26):

* Import of OpenJDK 8 u275 build 01
  - JDK-8214440: ldap over a TLS connection negotiate failed with "javax.net.ssl.SSLPeerUnverifiedException: hostname of the server '' does not match the hostname in the server's certificate"
  - JDK-8223940: Private key not supported by chosen signature algorithm
  - JDK-8250861: Crash in MinINode::Ideal(PhaseGVN*, bool)
* Bug fixes
  - PR3815: Fix new s390 size_t issue in g1ConcurrentMarkObjArrayProcessor.cpp

New in release 3.17.0 (2020-10-27):

* New features
  - JDK-8245468: Add TLSv1.3 implementation classes from 11.0.7
  - PR3796: Allow the number of curves supported to be specified
* Security fixes
  - JDK-8028431, CVE-2020-14579: NullPointerException in DerValue.equals(DerValue)
  - JDK-8028591, CVE-2020-14578: NegativeArraySizeException in sun.security.util.DerInputStream.getUnalignedBitString()
  - JDK-8230613: Better ASCII conversions
  - JDK-8231800: Better listing of arrays
  - JDK-8232014: Expand DTD support
  - JDK-8233255: Better Swing Buttons
  - JDK-8233624: Enhance JNI linkage
  - JDK-8234032: Improve basic calendar services
  - JDK-8234042: Better factory production of certificates
  - JDK-8234418: Better parsing with CertificateFactory
  - JDK-8234836: Improve serialization handling
  - JDK-8236191: Enhance OID processing
  - JDK-8236196: Improve string pooling
  - JDK-8236862, CVE-2020-14779: Enhance support of Proxy class
  - JDK-8237117, CVE-2020-14556: Better ForkJoinPool behavior
  - JDK-8237592, CVE-2020-14577: Enhance certificate verification
  - JDK-8237990, CVE-2020-14781: Enhanced LDAP contexts
  - JDK-8237995, CVE-2020-14782: Enhance certificate processing
  - JDK-8238002, CVE-2020-14581: Better matrix operations
  - JDK-8238804: Enhance key handling process
  - JDK-8238842: AIOOBE in GIFImageReader.initializeStringTable
  - JDK-8238843: Enhanced font handing
  - JDK-8238920, CVE-2020-14583: Better Buffer support
  - JDK-8238925: Enhance WAV file playback
  - JDK-8240119, CVE-2020-14593: Less Affine Transformations
  - JDK-8240124: Better VM Interning
  - JDK-8240482: Improved WAV file playback
  - JDK-8241114, CVE-2020-14792: Better range handling
  - JDK-8241379: Update JCEKS support
  - JDK-8241522: Manifest improved jar headers redux
  - JDK-8242136, CVE-2020-14621: Better XML namespace handling
  - JDK-8242680, CVE-2020-14796: Improved URI Support
  - JDK-8242685, CVE-2020-14797: Better Path Validation
  - JDK-8242695, CVE-2020-14798: Enhanced buffer support
  - JDK-8243302: Advanced class supports
  - JDK-8244136, CVE-2020-14803: Improved Buffer supports
  - JDK-8244479: Further constrain certificates
  - JDK-8244955: Additional Fix for JDK-8240124
  - JDK-8245407: Enhance zoning of times
  - JDK-8245412: Better class definitions
  - JDK-8245417: Improve certificate chain handling
  - JDK-8248574: Improve jpeg processing
  - JDK-8249927: Specify limits of jdk.serialProxyInterfaceLimit
  - JDK-8253019: Enhanced JPEG decoding
* Import of OpenJDK 8 u262 build 01
  - JDK-4949105: Access Bridge lacks html tags parsing
  - JDK-8003209: JFR events for network utilization
  - JDK-8030680: 292 cleanup from default method code assessment
  - JDK-8035633: TEST_BUG: java/net/NetworkInterface/Equals.java and some tests failed on windows intermittently
  - JDK-8041626: Shutdown tracing event
  - JDK-8141056: Erroneous assignment in HeapRegionSet.cpp
  - JDK-8149338: JVM Crash caused by Marlin renderer not handling NaN coordinates
  - JDK-8151582: (ch) test java/nio/channels/AsyncCloseAndInterrupt.java failing due to "Connection succeeded"
  - JDK-8165675: Trace event for thread park has incorrect unit for timeout
  - JDK-8176182: 4 security tests are not run
  - JDK-8178910: Problemlist sample tests
  - JDK-8183925: Decouple crash protection from watcher thread
  - JDK-8191393: Random crashes during cfree+0x1c
  - JDK-8195817: JFR.stop should require name of recording
  - JDK-8195818: JFR.start should increase autogenerated name by one
  - JDK-8195819: Remove recording=x from jcmd JFR.check output
  - JDK-8199712: Flight Recorder
  - JDK-8202578: Revisit location for class unload events
  - JDK-8202835: jfr/event/os/TestSystemProcess.java fails on missing events
  - JDK-8203287: Zero fails to build after JDK-8199712 (Flight Recorder)
  - JDK-8203346: JFR: Inconsistent signature of jfr_add_string_constant
  - JDK-8203664: JFR start failure after AppCDS archive created with JFR StartFlightRecording
  - JDK-8203921: JFR thread sampling is missing fixes from JDK-8194552
  - JDK-8203929: Limit amount of data for JFR.dump
  - JDK-8205516: JFR tool
  - JDK-8207392: [PPC64] Implement JFR profiling
  - JDK-8207829: FlightRecorderMXBeanImpl is leaking the first classloader which calls it
  - JDK-8209960: -Xlog:jfr* doesn't work with the JFR
  - JDK-8210024: JFR calls virtual is_Java_thread from ~Thread()
  - JDK-8210776: Upgrade X Window System 6.8.2 to the latest XWD 1.0.7
  - JDK-8211239: Build fails without JFR: empty JFR events signatures mismatch
  - JDK-8212232: Wrong metadata for the configuration of the cutoff for old object sample events
  - JDK-8213015: Inconsistent settings between JFR.configure and -XX:FlightRecorderOptions
  - JDK-8213421: Line number information for execution samples always 0
  - JDK-8213617: JFR should record the PID of the recorded process
  - JDK-8213734: SAXParser.parse(File, ..) does not close resources when Exception occurs.
  - JDK-8213914: [TESTBUG] Several JFR VM events are not covered by tests
  - JDK-8213917: [TESTBUG] Shutdown JFR event is not covered by test
  - JDK-8213966: The ZGC JFR events should be marked as experimental
  - JDK-8214542: JFR: Old Object Sample event slow on a deep heap in debug builds
  - JDK-8214750: Unnecessary <p> tags in jfr classes
  - JDK-8214896: JFR Tool left files behind
  - JDK-8214906: [TESTBUG] jfr/event/sampling/TestNative.java fails with UnsatisfiedLinkError
  - JDK-8214925: JFR tool fails to execute
  - JDK-8215175: Inconsistencies in JFR event metadata
  - JDK-8215237: jdk.jfr.Recording javadoc does not compile
  - JDK-8215284: Reduce noise induced by periodic task getFileSize()
  - JDK-8215355: Object monitor deadlock with no threads holding the monitor (using jemalloc 5.1)
  - JDK-8215362: JFR GTest JfrTestNetworkUtilization fails
  - JDK-8215771: The jfr tool should pretty print reference chains
  - JDK-8216064: -XX:StartFlightRecording:settings= doesn't work properly
  - JDK-8216486: Possibility of integer overflow in JfrThreadSampler::run()
  - JDK-8216528: test/jdk/java/rmi/transport/runtimeThreadInheritanceLeak/RuntimeThreadInheritanceLeak.java failing with Xcomp
  - JDK-8216559: [JFR] Native libraries not correctly parsed from /proc/self/maps
  - JDK-8216578: Remove unused/obsolete method in JFR code
  - JDK-8216995: Clean up JFR command line processing
  - JDK-8217744: [TESTBUG] JFR TestShutdownEvent fails on some systems due to process surviving SIGINT
  - JDK-8217748: [TESTBUG] Exclude TestSig test case from JFR TestShutdownEvent
  - JDK-8218935: Make jfr strncpy uses GCC 8.x friendly
  - JDK-8223147: JFR Backport
  - JDK-8223689: Add JFR Thread Sampling Support
  - JDK-8223690: Add JFR BiasedLock Event Support
  - JDK-8223691: Add JFR G1 Region Type Change Event Support
  - JDK-8223692: Add JFR G1 Heap Summary Event Support
  - JDK-8224172: assert(jfr_is_event_enabled(id)) failed: invariant
  - JDK-8224475: JTextPane does not show images in HTML rendering
  - JDK-8226253: JAWS reports wrong number of radio buttons when buttons are hidden.
  - JDK-8226779: [TESTBUG] Test JFR API from Java agent
  - JDK-8226892: ActionListeners on JRadioButtons don't get notified when selection is changed with arrow keys
  - JDK-8227011: Starting a JFR recording in response to JVMTI VMInit and / or Java agent premain corrupts memory
  - JDK-8227605: Kitchensink fails "assert((((klass)->trace_id() & (JfrTraceIdEpoch::leakp_in_use_this_epoch_bit())) != 0)) failed: invariant"
  - JDK-8229366: JFR backport allows unchecked writing to memory
  - JDK-8229401: Fix JFR code cache test failures
  - JDK-8229708: JFR backport code does not initialize
  - JDK-8229873: 8229401 broke jdk8u-jfr-incubator
  - JDK-8230448: [test] JFRSecurityTestSuite.java is failing on Windows
  - JDK-8230707: JFR related tests are failing
  - JDK-8230782: Robot.createScreenCapture() fails if ?awt.robot.gtk? is set to false
  - JDK-8230856: Java_java_net_NetworkInterface_getByName0 on unix misses ReleaseStringUTFChars in early return
  - JDK-8230947: TestLookForUntestedEvents.java is failing after JDK-8230707
  - JDK-8231995: two jtreg tests failed after 8229366 is fixed
  - JDK-8233623: Add classpath exception to copyright in EventHandlerProxyCreator.java file
  - JDK-8236002: CSR for JFR backport suggests not leaving out the package-info
  - JDK-8236008: Some backup files were accidentally left in the hotspot tree
  - JDK-8236074: Missed package-info
  - JDK-8236174: Should update javadoc since tags
  - JDK-8238076: Fix OpenJDK 7 Bootstrap Broken by JFR Backport
  - JDK-8238452: Keytool generates wrong expiration date if validity is set to 2050/01/01
  - JDK-8238555: Allow Initialization of SunPKCS11 with NSS when there are external FIPS modules in the NSSDB
  - JDK-8238589: Necessary code cleanup in JFR for JDK8u
  - JDK-8238590: Enable JFR by default during compilation in 8u
  - JDK-8239055: Wrong implementation of VMState.hasListener
  - JDK-8239476: JDK-8238589 broke windows build by moving OrderedPair
  - JDK-8239479: minimal1 and zero builds are failing
  - JDK-8239867: correct over use of INCLUDE_JFR macro
  - JDK-8240375: Disable JFR by default for July 2020 release
  - JDK-8241444: Metaspace::_class_vsm not initialized if compressed class pointers are disabled
  - JDK-8241902: AIX Build broken after integration of JDK-8223147 (JFR Backport)
  - JDK-8242788: Non-PCH build is broken after JDK-8191393
* Import of OpenJDK 8 u262 build 02
  - JDK-8130737: AffineTransformOp can't handle child raster with non-zero x-offset
  - JDK-8172559: [PIT][TEST_BUG] Move @test to be 1st annotation in java/awt/image/Raster/TestChildRasterOp.java
  - JDK-8230926: [macosx] Two apostrophes are entered instead of one with "U.S. International - PC" layout
  - JDK-8240576: JVM crashes after transformation in C2 IdealLoopTree::merge_many_backedges
  - JDK-8242883: Incomplete backport of JDK-8078268: backport test part
* Import of OpenJDK 8 u262 build 03
  - JDK-8037866: Replace the Fun class in tests with lambdas
  - JDK-8146612: C2: Precedence edges specification violated
  - JDK-8150986: serviceability/sa/jmap-hprof/JMapHProfLargeHeapTest.java failing because expects HPROF JAVA PROFILE 1.0.1 file format
  - JDK-8229888: (zipfs) Updating an existing zip file does not preserve original permissions
  - JDK-8230597: Update GIFlib library to the 5.2.1
  - JDK-8230769: BufImg_SetupICM add ReleasePrimitiveArrayCritical call in early return
  - JDK-8233880, PR3798: Support compilers with multi-digit major version numbers
  - JDK-8239852: java/util/concurrent tests fail with -XX:+VerifyGraphEdges: assert(!VerifyGraphEdges) failed: verification should have failed
  - JDK-8241638: launcher time metrics always report 1 on Linux when _JAVA_LAUNCHER_DEBUG set
  - JDK-8243059: Build fails when --with-vendor-name contains a comma
  - JDK-8243474: [TESTBUG] removed three tests of 0 bytes
  - JDK-8244461: [JDK 8u] Build fails with glibc 2.32
  - JDK-8244548: JDK 8u: sun.misc.Version.jdkUpdateVersion() returns wrong result
* Import of OpenJDK 8 u262 build 04
  - JDK-8067796: (process) Process.waitFor(timeout, unit) doesn't throw NPE if timeout is less than, or equal to zero when unit == null
  - JDK-8148886: SEGV in sun.java2d.marlin.Renderer._endRendering
  - JDK-8171934: ObjectSizeCalculator.getEffectiveMemoryLayoutSpecification() does not recognize OpenJDK's HotSpot VM
  - JDK-8196969: JTreg Failure: serviceability/sa/ClhsdbJstack.java causes NPE
  - JDK-8243539: Copyright info (Year) should be updated for fix of 8241638
  - JDK-8244777: ClassLoaderStats VM Op uses constant hash value
* Import of OpenJDK 8 u262 build 05
  - JDK-7147060: com/sun/org/apache/xml/internal/security/transforms/ClassLoaderTest.java doesn't run in agentvm mode
  - JDK-8178374: Problematic ByteBuffer handling in CipherSpi.bufferCrypt method
  - JDK-8181841: A TSA server returns timestamp with precision higher than milliseconds
  - JDK-8227269: Slow class loading when running with JDWP
  - JDK-8229899: Make java.io.File.isInvalid() less racy
  - JDK-8236996: Incorrect Roboto font rendering on Windows with subpixel antialiasing
  - JDK-8241750: x86_32 build failure after JDK-8227269
  - JDK-8244407: JVM crashes after transformation in C2 IdealLoopTree::split_fall_in
  - JDK-8244843: JapanEraNameCompatTest fails
* Import of OpenJDK 8 u262 build 06
  - JDK-8246223: Windows build fails after JDK-8227269
* Import of OpenJDK 8 u262 build 07
  - JDK-8233197: Invert JvmtiExport::post_vm_initialized() and Jfr:on_vm_start() start-up order for correct option parsing
  - JDK-8243541: (tz) Upgrade time-zone data to tzdata2020a
  - JDK-8245167: Top package in method profiling shows null in JMC
  - JDK-8246703: [TESTBUG] Add test for JDK-8233197
* Import of OpenJDK 8 u262 build 08
  - JDK-8220293: Deadlock in JFR string pool
  - JDK-8225068: Remove DocuSign root certificate that is expiring in May 2020
  - JDK-8225069: Remove Comodo root certificate that is expiring in May 2020
* Import of OpenJDK 8 u262 build 09
  - JDK-8248399: Build installs jfr binary when JFR is disabled
* Import of OpenJDK 8 u262 build 10
  - JDK-8248715: New JavaTimeSupplementary localisation for 'in' installed in wrong package
* Import of OpenJDK 8 u265 build 01
  - JDK-8249677: Regression in 8u after JDK-8237117: Better ForkJoinPool behavior
  - JDK-8250546: Expect changed behaviour reported in JDK-8249846
* Import of OpenJDK 8 u272 build 01
  - JDK-8006205: [TESTBUG] NEED_TEST: please JTREGIFY test/compiler/7177917/Test7177917.java
  - JDK-8035493: JVMTI PopFrame capability must instruct compilers not to prune locals
  - JDK-8036088: Replace strtok() with its safe equivalent strtok_s() in DefaultProxySelector.c
  - JDK-8039082: [TEST_BUG] Test java/awt/dnd/BadSerializationTest/BadSerializationTest.java fails
  - JDK-8075774: Small readability and performance improvements for zipfs
  - JDK-8132206: move ScanTest.java into OpenJDK
  - JDK-8132376: Add @requires os.family to the client tests with access to internal OS-specific API
  - JDK-8132745: minor cleanup of java/util/Scanner/ScanTest.java
  - JDK-8137087: [TEST_BUG] Cygwin failure of java/awt/appletviewer/IOExceptionIfEncodedURLTest/IOExceptionIfEncodedURLTest.sh
  - JDK-8145808: java/awt/Graphics2D/MTGraphicsAccessTest/MTGraphicsAccessTest.java hangs on Win. 8
  - JDK-8151788: NullPointerException from ntlm.Client.type3
  - JDK-8151834: Test SmallPrimeExponentP.java times out intermittently
  - JDK-8153430: jdk regression test MletParserLocaleTest, ParserInfiniteLoopTest reduce default timeout
  - JDK-8153583: Make OutputAnalyzer.reportDiagnosticSummary public
  - JDK-8156169: Some sound tests rarely hangs because of incorrect synchronization
  - JDK-8165936: Potential Heap buffer overflow when seaching timezone info files
  - JDK-8166148: Fix for JDK-8165936 broke solaris builds
  - JDK-8167300: Scheduling failures during gcm should be fatal
  - JDK-8167615: Opensource unit/regression tests for JavaSound
  - JDK-8172012: [TEST_BUG] delays needed in javax/swing/JTree/4633594/bug4633594.java
  - JDK-8177628: Opensource unit/regression tests for ImageIO
  - JDK-8183341: Better cleanup for javax/imageio/AllowSearch.java
  - JDK-8183351: Better cleanup for jdk/test/javax/imageio/spi/AppletContextTest/BadPluginConfigurationTest.sh
  - JDK-8193137: Nashorn crashes when given an empty script file
  - JDK-8194298: Add support for per Socket configuration of TCP keepalive
  - JDK-8198004: javax/swing/JFileChooser/6868611/bug6868611.java throws error
  - JDK-8200313: java/awt/Gtk/GtkVersionTest/GtkVersionTest.java fails
  - JDK-8210147: adjust some WSAGetLastError usages in windows network coding
  - JDK-8211714: Need to update vm_version.cpp to recognise VS2017 minor versions
  - JDK-8214862: assert(proj != __null) at compile.cpp:3251
  - JDK-8217606: LdapContext#reconnect always opens a new connection
  - JDK-8217647: JFR: recordings on 32-bit systems unreadable
  - JDK-8226697: Several tests which need the @key headful keyword are missing it.
  - JDK-8229378: jdwp library loader in linker_md.c quietly truncates on buffer overflow
  - JDK-8230303: JDB hangs when running monitor command
  - JDK-8230711: ConnectionGraph::unique_java_object(Node* N) return NULL if n is not in the CG
  - JDK-8234617: C1: Incorrect result of field load due to missing narrowing conversion
  - JDK-8235243: handle VS2017 15.9 and VS2019 in abstract_vm_version
  - JDK-8235325: build failure on Linux after 8235243
  - JDK-8235687: Contents/MacOS/libjli.dylib cannot be a symlink
  - JDK-8237951: CTW: C2 compilation fails with "malformed control flow"
  - JDK-8238225: Issues reported after replacing symlink at Contents/MacOS/libjli.dylib with binary
  - JDK-8239385: KerberosTicket client name refers wrongly to sAMAccountName in AD
  - JDK-8239819: XToolkit: Misread of screen information memory
  - JDK-8240295: hs_err elapsed time in seconds is not accurate enough
  - JDK-8241888: Mirror jdk.security.allowNonCaAnchor system property with a security one
  - JDK-8242498: Invalid "sun.awt.TimedWindowEvent" object leads to JVM crash
  - JDK-8243489: Thread CPU Load event may contain wrong data for CPU time under certain conditions
  - JDK-8244818: Java2D Queue Flusher crash while moving application window to external monitor
  - JDK-8246310: Clean commented-out code about ModuleEntry andPackageEntry in JFR
  - JDK-8246384: Enable JFR by default on supported architectures for October 2020 release
  - JDK-8248643: Remove extra leading space in JDK-8240295 8u backport
  - JDK-8249610: Make sun.security.krb5.Config.getBooleanObject(String... keys) method public
* Import of OpenJDK 8 u272 build 02
  - JDK-8023697: failed class resolution reports different class name in detail message for the first and subsequent times
  - JDK-8025886: replace [[ and == bash extensions in regtest
  - JDK-8046274: Removing dependency on jakarta-regexp
  - JDK-8048933: -XX:+TraceExceptions output should include the message
  - JDK-8076151: [TESTBUG] Test java/awt/FontClass/CreateFont/fileaccess/FontFile.java fails
  - JDK-8148854: Class names "SomeClass" and "LSomeClass;" treated by JVM as an equivalent
  - JDK-8154313: Generated javadoc scattered all over the place
  - JDK-8163251: Hard coded loop limit prevents reading of smart card data greater than 8k
  - JDK-8173300: [TESTBUG]compiler/tiered/NonTieredLevelsTest.java fails with compiler.whitebox.SimpleTestCaseHelper(int) must be compiled
  - JDK-8183349: Better cleanup for jdk/test/javax/imageio/plugins/shared/CanWriteSequence.java and WriteAfterAbort.java
  - JDK-8191678: [TESTBUG] Add keyword headful in java/awt FocusTransitionTest test.
  - JDK-8201633: Problems with AES-GCM native acceleration
  - JDK-8211049: Second parameter of "initialize" method is not used
  - JDK-8219566: JFR did not collect call stacks when MaxJavaStackTraceDepth is set to zero
  - JDK-8220165: Encryption using GCM results in RuntimeException- input length out of bound
  - JDK-8220555: JFR tool shows potentially misleading message when it cannot access a file
  - JDK-8224217: RecordingInfo should use textual representation of path
  - JDK-8231779: crash HeapWord*ParallelScavengeHeap::failed_mem_allocate
  - JDK-8238380, PR3798: java.base/unix/native/libjava/childproc.c "multiple definition" link errors with GCC10
  - JDK-8238386, PR3798: (sctp) jdk.sctp/unix/native/libsctp/SctpNet.c "multiple definition" link errors with GCC10
  - JDK-8238388, PR3798: libj2gss/NativeFunc.o "multiple definition" link errors with GCC10
  - JDK-8242556: Cannot load RSASSA-PSS public key with non-null params from byte array
  - JDK-8250755: Better cleanup for jdk/test/javax/imageio/plugins/shared/CanWriteSequence.java
* Import of OpenJDK 8 u272 build 03
  - JDK-6574989: TEST_BUG: javax/sound/sampled/Clip/bug5070081.java fails sometimes
  - JDK-8148754: C2 loop unrolling fails due to unexpected graph shape
  - JDK-8192953: sun/management/jmxremote/bootstrap/*.sh tests fail with error : revokeall.exe: Permission denied
  - JDK-8203357: Container Metrics
  - JDK-8209113: Use WeakReference for lastFontStrike for created Fonts
  - JDK-8216283: Allow shorter method sampling interval than 10 ms
  - JDK-8221569: JFR tool produces incorrect output when both --categories and --events are specified
  - JDK-8233097: Fontmetrics for large Fonts has zero width
  - JDK-8248851: CMS: Missing memory fences between free chunk check and klass read
  - JDK-8250875: Incorrect parameter type for update_number in JDK_Version::jdk_update
* Import of OpenJDK 8 u272 build 04
  - JDK-8061616: HotspotDiagnosticMXBean.getVMOption() throws IllegalArgumentException for flags of type double
  - JDK-8177334: Update xmldsig implementation to Apache Santuario 2.1.1
  - JDK-8217878: ENVELOPING XML signature no longer works in JDK 11
  - JDK-8218629: XML Digital Signature throws NAMESPACE_ERR exception on OpenJDK 11, works 8/9/10
  - JDK-8243138: Enhance BaseLdapServer to support starttls extended request
* Import of OpenJDK 8 u272 build 05
  - JDK-8026236: Add PrimeTest for BigInteger
  - JDK-8057003: Large reference arrays cause extremely long synchronization times
  - JDK-8060721: Test runtime/SharedArchiveFile/LimitSharedSizes.java fails in jdk 9 fcs new platforms/compiler
  - JDK-8152077: (cal) Calendar.roll does not always roll the hours during daylight savings
  - JDK-8168517: java/lang/ProcessBuilder/Basic.java failed
  - JDK-8211163: UNIX version of Java_java_io_Console_echo does not return a clean boolean
  - JDK-8220674: [TESTBUG] MetricsMemoryTester failcount test in docker container only works with debug JVMs
  - JDK-8231213: Migrate SimpleDateFormatConstTest to JDK Repo
  - JDK-8236645: JDK 8u231 introduces a regression with incompatible handling of XML messages
  - JDK-8240676: Meet not symmetric failure when running lucene on jdk8
  - JDK-8243321: Add Entrust root CA - G4 to Oracle Root CA program
  - JDK-8249158: THREAD_START and THREAD_END event posted in primordial phase
  - JDK-8250627: Use -XX:+/-UseContainerSupport for enabling/disabling Java container metrics
  - JDK-8251546: 8u backport of JDK-8194298 breaks AIX and Solaris builds
  - JDK-8252084: Minimal VM fails to bootcycle: undefined symbol: AgeTableTracer::is_tenuring_distribution_event_enabled
* Import of OpenJDK 8 u272 build 06
  - JDK-8064319: Need to enable -XX:+TraceExceptions in release builds
  - JDK-8080462, PR3801: Update SunPKCS11 provider with PKCS11 v2.40 support
  - JDK-8160768: Add capability to custom resolve host/domain names within the default JNDI LDAP provider
  - JDK-8161973: PKIXRevocationChecker.getSoftFailExceptions() not working
  - JDK-8169925, PR3801: PKCS #11 Cryptographic Token Interface license
  - JDK-8184762: ZapStackSegments should use optimized memset
  - JDK-8193234: When using -Xcheck:jni an internally allocated buffer can leak
  - JDK-8219919: RuntimeStub name lost with PrintFrameConverterAssembly
  - JDK-8220313: [TESTBUG] Update base image for Docker testing to OL 7.6
  - JDK-8222079: Don't use memset to initialize fields decode_env constructor in disassembler.cpp
  - JDK-8225695: 32-bit build failures after JDK-8080462 (Update SunPKCS11 provider with PKCS11 v2.40 support)
  - JDK-8226575: OperatingSystemMXBean should be made container aware
  - JDK-8226809: Circular reference in printed stack trace is not correctly indented & ambiguous
  - JDK-8228835: Memory leak in PKCS11 provider when using AES GCM
  - JDK-8233621: Mismatch in jsse.enableMFLNExtension property name
  - JDK-8238898, PR3801: Missing hash characters for header on license file
  - JDK-8243320: Add SSL root certificates to Oracle Root CA program
  - JDK-8244151: Update MUSCLE PC/SC-Lite headers to the latest release 1.8.26
  - JDK-8245467: Remove 8u TLSv1.2 implementation files
  - JDK-8245469: Remove DTLS protocol implementation
  - JDK-8245470: Fix JDK8 compatibility issues
  - JDK-8245471: Revert JDK-8148188
  - JDK-8245472: Backport JDK-8038893 to JDK8
  - JDK-8245473: OCSP stapling support
  - JDK-8245474: Add TLS_KRB5 cipher suites support according to RFC-2712
  - JDK-8245476: Disable TLSv1.3 protocol in the ClientHello message by default
  - JDK-8245477: Adjust TLS tests location
  - JDK-8245653: Remove 8u TLS tests
  - JDK-8245681: Add TLSv1.3 regression test from 11.0.7
  - JDK-8251117: Cannot check P11Key size in P11Cipher and P11AEADCipher
  - JDK-8251120, PR3793: [8u] HotSpot build assumes ENABLE_JFR is set to either true or false
  - JDK-8251341: Minimal Java specification change
  - JDK-8251478: Backport TLSv1.3 regression tests to JDK8u
* Import of OpenJDK 8 u272 build 07
  - JDK-8246193: Possible NPE in ENC-PA-REP search in AS-REQ
* Import of OpenJDK 8 u272 build 08
  - JDK-8062947: Fix exception message to correctly represent LDAP connection failure
  - JDK-8151678: com/sun/jndi/ldap/LdapTimeoutTest.java failed due to timeout on DeadServerNoTimeoutTest is incorrect
  - JDK-8252573: 8u: Windows build failed after 8222079 backport
* Import of OpenJDK 8 u272 build 09
  - JDK-8252886: [TESTBUG] sun/security/ec/TestEC.java : Compilation failed
* Import of OpenJDK 8 u272 build 10
  - JDK-8254673: Call to JvmtiExport::post_vm_start() was removed by the fix for JDK-8249158
  - JDK-8254937: Revert JDK-8148854 for 8u272
* Backports
  - JDK-8038723, PR3806: Openup some PrinterJob tests
  - JDK-8041480, PR3806: ArrayIndexOutOfBoundsException when JTable contains certain string
  - JDK-8058779, PR3805: Faster implementation of String.replace(CharSequence, CharSequence)
  - JDK-8130125, PR3806: [TEST_BUG] add @modules to the several client tests unaffected by the automated bulk update
  - JDK-8144015, PR3806: [PIT] failures of text layout font tests
  - JDK-8144023, PR3806: [PIT] failure of text measurements in javax/swing/text/html/parser/Parser/6836089/bug6836089.java
  - JDK-8144240, PR3806: [macosx][PIT] AIOOB in closed/javax/swing/text/GlyphPainter2/6427244/bug6427244.java
  - JDK-8145542, PR3806: The case failed automatically and thrown java.lang.ArrayIndexOutOfBoundsException exception
  - JDK-8151725, PR3806: [macosx] ArrayIndexOOB exception when displaying Devanagari text in JEditorPane
  - JDK-8152358, PR3800: code and comment cleanups found during the hunt for 8077392
  - JDK-8152545, PR3804: Use preprocessor instead of compiling a program to generate native nio constants
  - JDK-8152680, PR3806: Regression in GlyphVector.getGlyphCharIndex behaviour
  - JDK-8158924, PR3806: Incorrect i18n text document layout
  - JDK-8166003, PR3806: [PIT][TEST_BUG] missing helper for javax/swing/text/GlyphPainter2/6427244/bug6427244.java
  - JDK-8166068, PR3806: test/java/awt/font/GlyphVector/GetGlyphCharIndexTest.java does not compile
  - JDK-8169879, PR3806: [TEST_BUG] javax/swing/text/GlyphPainter2/6427244/bug6427244.java - compilation failed
  - JDK-8191512, PR3806: T2K font rasterizer code removal
  - JDK-8191522, PR3806: Remove Bigelow&Holmes Lucida fonts from JDK sources
  - JDK-8236512, PR3801: PKCS11 Connection closed after Cipher.doFinal and NoPadding
  - JDK-8254177, PR3809: (tz) Upgrade time-zone data to tzdata2020b
* Bug fixes
  - PR3798: Fix format-overflow error on GCC 10, caused by passing NULL to a '%s' directive
  - PR3795: ECDSAUtils for XML digital signatures should support the same curve set as the rest of the JDK 
  - PR3799: Adapt elliptic curve patches to JDK-8245468: Add TLSv1.3 implementation classes from 11.0.7
  - PR3808: IcedTea does not install the JFR *.jfc files
  - PR3810: Enable JFR on x86 (32-bit) now that JDK-8252096 has fixed its use with Shenandoah
  - PR3811: Don't attempt to install JFR files when JFR is disabled
* Shenandoah
  - [backport] 8221435: Shenandoah should not mark through weak roots
  - [backport] 8221629: Shenandoah: Cleanup class unloading logic
  - [backport] 8222992: Shenandoah: Pre-evacuate all roots
  - [backport] 8223215: Shenandoah: Support verifying subset of roots
  - [backport] 8223774: Shenandoah: Refactor ShenandoahRootProcessor and family
  - [backport] 8224210: Shenandoah: Refactor ShenandoahRootScanner to support scanning CSet codecache roots
  - [backport] 8224508: Shenandoah: Need to update thread roots in final mark for piggyback ref update cycle
  - [backport] 8224579: ResourceMark not declared in shenandoahRootProcessor.inline.hpp with --disable-precompiled-headers
  - [backport] 8224679: Shenandoah: Make ShenandoahParallelCodeCacheIterator noncopyable
  - [backport] 8224751: Shenandoah: Shenandoah Verifier should select proper roots according to current GC cycle
  - [backport] 8225014: Separate ShenandoahRootScanner method for object_iterate
  - [backport] 8225216: gc/logging/TestMetaSpaceLog.java doesn't work for Shenandoah
  - [backport] 8225573: Shenandoah: Enhance ShenandoahVerifier to ensure roots to-space invariant
  - [backport] 8225590: Shenandoah: Refactor ShenandoahClassLoaderDataRoots API
  - [backport] 8226413: Shenandoah: Separate root scanner for SH::object_iterate()
  - [backport] 8230853: Shenandoah: replace leftover assert(is_in(...)) with rich asserts
  - [backport] 8231198: Shenandoah: heap walking should visit all roots most of the time
  - [backport] 8231244: Shenandoah: all-roots heap walking misses some weak roots
  - [backport] 8237632: Shenandoah: accept NULL fwdptr to cooperate with JVMTI and JFR
  - [backport] 8239786: Shenandoah: print per-cycle statistics
  - [backport] 8239926: Shenandoah: Shenandoah needs to mark nmethod's metadata
  - [backport] 8240671: Shenandoah: refactor ShenandoahPhaseTimings
  - [backport] 8240749: Shenandoah: refactor ShenandoahUtils
  - [backport] 8240750: Shenandoah: remove leftover files and mentions of ShenandoahAllocTracker
  - [backport] 8240868: Shenandoah: remove CM-with-UR piggybacking cycles
  - [backport] 8240872: Shenandoah: Avoid updating new regions from start of evacuation
  - [backport] 8240873: Shenandoah: Short-cut arraycopy barriers
  - [backport] 8240915: Shenandoah: Remove unused fields in init mark tasks
  - [backport] 8240948: Shenandoah: cleanup not-forwarded-objects paths after JDK-8240868
  - [backport] 8241007: Shenandoah: remove ShenandoahCriticalControlThreadPriority support
  - [backport] 8241062: Shenandoah: rich asserts trigger "empty statement" inspection
  - [backport] 8241081: Shenandoah: Do not modify update-watermark concurrently
  - [backport] 8241093: Shenandoah: editorial changes in flag descriptions
  - [backport] 8241139: Shenandoah: distribute mark-compact work exactly to minimize fragmentation
  - [backport] 8241142: Shenandoah: should not use parallel reference processing with single GC thread
  - [backport] 8241351: Shenandoah: fragmentation metrics overhaul
  - [backport] 8241435: Shenandoah: avoid disabling pacing with "aggressive"
  - [backport] 8241520: Shenandoah: simplify region sequence numbers handling
  - [backport] 8241534: Shenandoah: region status should include update watermark
  - [backport] 8241574: Shenandoah: remove ShenandoahAssertToSpaceClosure
  - [backport] 8241583: Shenandoah: turn heap lock asserts into macros
  - [backport] 8241668: Shenandoah: make ShenandoahHeapRegion not derive from ContiguousSpace
  - [backport] 8241673: Shenandoah: refactor anti-false-sharing padding
  - [backport] 8241675: Shenandoah: assert(n->outcnt() > 0) at shenandoahSupport.cpp:2858 with java/util/Collections/FindSubList.java
  - [backport] 8241692: Shenandoah: remove ShenandoahHeapRegion::_reserved
  - [backport] 8241700: Shenandoah: Fold ShenandoahKeepAliveBarrier flag into ShenandoahSATBBarrier
  - [backport] 8241740: Shenandoah: remove ShenandoahHeapRegion::_heap
  - [backport] 8241743: Shenandoah: refactor and inline ShenandoahHeap::heap()
  - [backport] 8241748: Shenandoah: inline MarkingContext TAMS methods
  - [backport] 8241838: Shenandoah: no need to trash cset during final mark
  - [backport] 8241841: Shenandoah: ditch one of allocation type counters in ShenandoahHeapRegion
  - [backport] 8241842: Shenandoah: inline ShenandoahHeapRegion::region_number
  - [backport] 8241844: Shenandoah: rename ShenandoahHeapRegion::region_number
  - [backport] 8241845: Shenandoah: align ShenandoahHeapRegions to cache lines
  - [backport] 8241926: Shenandoah: only print heap changes for operations that directly affect it
  - [backport] 8241983: Shenandoah: simplify FreeSet logging
  - [backport] 8241985: Shenandoah: simplify collectable garbage logging
  - [backport] 8242040: Shenandoah: print allocation failure type
  - [backport] 8242041: Shenandoah: adaptive heuristics should account evac reserve in free target
  - [backport] 8242042: Shenandoah: tune down ShenandoahGarbageThreshold
  - [backport] 8242054: Shenandoah: New incremental-update mode
  - [backport] 8242075: Shenandoah: rename ShenandoahHeapRegionSize flag
  - [backport] 8242082: Shenandoah: Purge Traversal mode
  - [backport] 8242083: Shenandoah: split "Prepare Evacuation" tracking into cset/freeset counters
  - [backport] 8242089: Shenandoah: per-worker stats should be summed up, not averaged
  - [backport] 8242101: Shenandoah: coalesce and parallelise heap region walks during the pauses
  - [backport] 8242114: Shenandoah: remove ShenandoahHeapRegion::reset_alloc_metadata_to_shared
  - [backport] 8242130: Shenandoah: Simplify arraycopy-barrier dispatching
  - [backport] 8242211: Shenandoah: remove ShenandoahHeuristics::RegionData::_seqnum_last_alloc
  - [backport] 8242212: Shenandoah: initialize ShenandoahHeuristics::_region_data eagerly
  - [backport] 8242213: Shenandoah: remove ShenandoahHeuristics::_bytes_in_cset
  - [backport] 8242217: Shenandoah: Enable GC mode to be diagnostic/experimental and have a name
  - [backport] 8242227: Shenandoah: transit regions to cset state when adding to collection set
  - [backport] 8242228: Shenandoah: remove unused ShenandoahCollectionSet methods
  - [backport] 8242229: Shenandoah: inline ShenandoahHeapRegion liveness-related methods
  - [backport] 8242267: Shenandoah: regions space needs to be aligned by os::vm_allocation_granularity()
  - [backport] 8242271: Shenandoah: add test to verify GC mode unlock
  - [backport] 8242273: Shenandoah: accept either SATB or IU barriers, but not both
  - [backport] 8242301: Shenandoah: Inline LRB runtime call
  - [backport] 8242316: Shenandoah: Turn NULL-check into assert in SATB slow-path entry
  - [backport] 8242353: Shenandoah: micro-optimize region liveness handling
  - [backport] 8242365: Shenandoah: use uint16_t instead of jushort for liveness cache
  - [backport] 8242375: Shenandoah: Remove ShenandoahHeuristic::record_gc_start/end methods
  - [backport] 8242641: Shenandoah: clear live data and update TAMS optimistically
  - [backport] 8243238: Shenandoah: explicit GC request should wait for a complete GC cycle
  - [backport] 8243301: Shenandoah: ditch ShenandoahAllowMixedAllocs
  - [backport] 8243307: Shenandoah: remove ShCollectionSet::live_data
  - [backport] 8243395: Shenandoah: demote guarantee in ShenandoahPhaseTimings::record_workers_end
  - [backport] 8243463: Shenandoah: ditch total_pause counters
  - [backport] 8243464: Shenandoah: print statistic counters in time order
  - [backport] 8243465: Shenandoah: ditch unused pause_other, conc_other counters
  - [backport] 8243487: Shenandoah: make _num_phases illegal phase type
  - [backport] 8243494: Shenandoah: set counters once per cycle
  - [backport] 8243573: Shenandoah: rename GCParPhases and related code
  - [backport] 8243848: Shenandoah: Windows build fails after JDK-8239786
  - [backport] 8244180: Shenandoah: carry Phase to ShWorkerTimingsTracker explicitly
  - [backport] 8244200: Shenandoah: build breakages after JDK-8241743
  - [backport] 8244226: Shenandoah: per-cycle statistics contain worker data from previous cycles
  - [backport] 8244326: Shenandoah: global statistics should not accept bogus samples
  - [backport] 8244509: Shenandoah: refactor ShenandoahBarrierC2Support::test_* methods
  - [backport] 8244551: Shenandoah: Fix racy update of update_watermark
  - [backport] 8244667: Shenandoah: SBC2Support::test_gc_state takes loop for wrong control
  - [backport] 8244730: Shenandoah: gc/shenandoah/options/TestHeuristicsUnlock.java should only verify the heuristics
  - [backport] 8244732: Shenandoah: move heuristics code to gc/shenandoah/heuristics
  - [backport] 8244737: Shenandoah: move mode code to gc/shenandoah/mode
  - [backport] 8244739: Shenandoah: break superclass dependency on ShenandoahNormalMode
  - [backport] 8244740: Shenandoah: rename ShenandoahNormalMode to ShenandoahSATBMode
  - [backport] 8245461: Shenandoah: refine mode name()-s
  - [backport] 8245463: Shenandoah: refine ShenandoahPhaseTimings constructor arguments
  - [backport] 8245464: Shenandoah: allocate collection set bitmap at lower addresses
  - [backport] 8245465: Shenandoah: test_in_cset can use more efficient encoding
  - [backport] 8245726: Shenandoah: lift/cleanup ShenandoahHeuristics names and properties
  - [backport] 8245754: Shenandoah: ditch ShenandoahAlwaysPreTouch
  - [backport] 8245757: Shenandoah: AlwaysPreTouch should not disable heap resizing or uncommits
  - [backport] 8245773: Shenandoah: Windows assertion failure after JDK-8245464
  - [backport] 8245812: Shenandoah: compute root phase parallelism
  - [backport] 8245814: Shenandoah: reconsider format specifiers for stats
  - [backport] 8245825: Shenandoah: Remove diagnostic flag ShenandoahConcurrentScanCodeRoots
  - [backport] 8246162: Shenandoah: full GC does not mark code roots when class unloading is off
  - [backport] 8247310: Shenandoah: pacer should not affect interrupt status
  - [backport] 8247358: Shenandoah: reconsider free budget slice for marking
  - [backport] 8247367: Shenandoah: pacer should wait on lock instead of exponential backoff
  - [backport] 8247474: Shenandoah: Windows build warning after JDK-8247310
  - [backport] 8247560: Shenandoah: heap iteration holds root locks all the time
  - [backport] 8247593: Shenandoah: should not block pacing reporters
  - [backport] 8247751: Shenandoah: options tests should run with smaller heaps
  - [backport] 8247754: Shenandoah: mxbeans tests can be shorter
  - [backport] 8247757: Shenandoah: split heavy tests by heuristics to improve parallelism
  - [backport] 8247860: Shenandoah: add update watermark line in rich assert failure message
  - [backport] 8248041: Shenandoah: pre-Full GC root updates may miss some roots
  - [backport] 8248652: Shenandoah: SATB buffer handling may assume no forwarded objects
  - [backport] 8249560: Shenandoah: Fix racy GC request handling
  - [backport] 8249649: Shenandoah: provide per-cycle pacing stats
  - [backport] 8249801: Shenandoah: Clear soft-refs on requested GC cycle
  - [backport] 8249953: Shenandoah: gc/shenandoah/mxbeans tests should account for corner cases
  - Fix slowdebug build after JDK-8230853 backport
  - JDK-8252096: Shenandoah: adjust SerialPageShiftCount for x86_32 and JFR
  - JDK-8252366: Shenandoah: revert/cleanup changes in graphKit.cpp
  - Shenandoah: add JFR roots to root processor after JFR integration
  - Shenandoah: add root statistics for string dedup table/queues
  - Shenandoah: enable low-frequency STW class unloading
  - Shenandoah: fix build failures after JDK-8244737 backport
  - Shenandoah: Fix build failure with +JFR -PCH
  - Shenandoah: fix forceful pacer claim
  - Shenandoah: fix formats in ShenandoahStringSymbolTableUnlinkTask
  - Shenandoah: fix runtime linking failure due to non-compiled shenandoahBarrierSetC1
  - Shenandoah: hook statistics printing to PrintGCDetails, not PrintGC
  - Shenandoah: JNI weak roots are always cleared before Full GC mark
  - Shenandoah: missing SystemDictionary roots in ShenandoahHeapIterationRootScanner
  - Shenandoah: move barrier sets to their proper locations
  - Shenandoah: move parallelCleaning.* to shenandoah/
  - Shenandoah: pacer should use proper Atomics for intptr_t
  - Shenandoah: properly deallocates class loader metadata
  - Shenandoah: specialize String Table scans for better pause performance
  - Shenandoah: Zero build fails after recent Atomic cleanup in Pacer
* AArch64 port
  - JDK-8161072, PR3797: AArch64: jtreg compiler/uncommontrap/TestDeoptOOM failure
  - JDK-8171537, PR3797: aarch64: compiler/c1/Test6849574.java generates guarantee failure in C1
  - JDK-8183925, PR3797: [AArch64] Decouple crash protection from watcher thread
  - JDK-8199712, PR3797: [AArch64] Flight Recorder
  - JDK-8203481, PR3797: Incorrect constraint for unextended_sp in frame:safe_for_sender
  - JDK-8203699, PR3797: java/lang/invoke/SpecialInterfaceCall fails with SIGILL on aarch64
  - JDK-8209413, PR3797: AArch64: NPE in clhsdb jstack command
  - JDK-8215961, PR3797: jdk/jfr/event/os/TestCPUInformation.java fails on AArch64
  - JDK-8216989, PR3797: CardTableBarrierSetAssembler::gen_write_ref_array_post_barrier() does not check for zero length on AARCH64
  - JDK-8217368, PR3797: AArch64: C2 recursive stack locking optimisation not triggered
  - JDK-8221658, PR3797: aarch64: add necessary predicate for ubfx patterns
  - JDK-8237512, PR3797: AArch64: aarch64TestHook leaks a BufferBlob
  - JDK-8246482, PR3797: Build failures with +JFR -PCH
  - JDK-8247979, PR3797: aarch64: missing side effect of killing flags for clearArray_reg_reg
  - JDK-8248219, PR3797: aarch64: missing memory barrier in fast_storefield and fast_accessfield

New in release 3.16.0 (2020-05-02):

* Security fixes
  - JDK-8223898, CVE-2020-2754: Forward references to Nashorn
  - JDK-8223904, CVE-2020-2755: Improve Nashorn matching
  - JDK-8224541, CVE-2020-2756: Better mapping of serial ENUMs
  - JDK-8224549, CVE-2020-2757: Less Blocking Array Queues
  - JDK-8225603: Enhancement for big integers
  - JDK-8227542: Manifest improved jar headers
  - JDK-8231415, CVE-2020-2773: Better signatures in XML
  - JDK-8233250: Better X11 rendering
  - JDK-8233410: Better Build Scripting
  - JDK-8234027: Better JCEKS key support
  - JDK-8234408, CVE-2020-2781: Improve TLS session handling
  - JDK-8234825, CVE-2020-2800: Better Headings for HTTP Servers
  - JDK-8234841, CVE-2020-2803: Enhance buffering of byte buffers
  - JDK-8235274, CVE-2020-2805: Enhance typing of methods
  - JDK-8236201, CVE-2020-2830: Better Scanner conversions
  - JDK-8238960: linux-i586 builds are inconsistent as the newly build jdk is not able to reserve enough space for object heap
* Import of OpenJDK 8 u252 build 01
  - JDK-8028480: (zipfs) NoSuchFileException on creating a file in ZipFileSystem with CREATE and WRITE
  - JDK-8031191: Warning exception when XMLSignature logging is enabled
  - JDK-8034773: (zipfs) newOutputstream uses CREATE_NEW when no options specified
  - JDK-8038431: Close InputStream when finished retrieving XML Signature HTTP References
  - JDK-8041620: Solaris Studio 12.4 C++ 5.13 change in behavior for placing friend declarations within surrounding scope.
  - JDK-8046044: Fix raw and unchecked lint warnings in XML Signature Impl
  - JDK-8056313: TEST_BUG: java/util/Timer/NameConstructors.java fails intermittently
  - JDK-8144732: VM_HeapDumper hits assert with bad dump_len
  - JDK-8150432: LocaleProviders.sh fails
  - JDK-8150460: (linux|bsd|aix)_close.c: file descriptor table may become large or may not work at all
  - JDK-8216354: Syntax error in toolchain_windows.m4
  - JDK-8218553: Enhance keystore load debug output
  - JDK-8218580: endpoint identification algorithm should be case-insensitive
  - JDK-8227397: Add --with-extra-asflags configure option
  - JDK-8227662: freetype seeks to index at the end of the font data
  - JDK-8231201: hs_err should print coalesced safepoint operations in Events section
  - JDK-8231991: Mouse wheel change focus on awt/swing windows
  - JDK-8232003: (fs) Files.write can leak file descriptor in the exception case
  - JDK-8232154: Update Mesa 3-D Headers to version 19.2.1
  - JDK-8232355: Two obsolete flags have the wrong obsolete version in 8u
  - JDK-8233023: assert(Opcode() == mem->Opcode() || phase->C->get_alias_index(adr_type()) == Compile::AliasIdxRaw) failed: no mismatched stores, except on raw memory
  - JDK-8233404: System property to set the number of PBE iterations in JCEKS keystores
  - JDK-8234107: Several AWT modal dialog tests failing on Linux after JDK-8231991
  - JDK-8234264: Incorrect 8047434 JDK 8 backport in 8219677
  - JDK-8234288: Turkey Time Zone returns incorrect time zone name
  - JDK-8235637: jhsdb jmap from OpenJDK 11.0.5 doesn't work if prelink is enabled
  - JDK-8236873: Worker has a deadlock bug
  - JDK-8237523: 8u backport of JDK-8216354 didn't include generated-configure.sh changes
* Import of OpenJDK 8 u252 build 02
  - JDK-7143743: Potential memory leak with zip provider
  - JDK-8033215: clang: node.cpp:284 IDX_INIT macro use uninitialized field _out
  - JDK-8143849: Integrate Marlin renderer per JEP 265
  - JDK-8146792: Predicate moved after partial peel may lead to broken graph
  - JDK-8193255: Root Certificates should be stored in text format and assembled at build time
  - JDK-8233995: java.vm.vendor (and potentially other properties/fields) not correctly set in Windows/Hotspot build of OpenJDK8
  - JDK-8235142: JDK-8193255 backport broke bootstrap with JDK 10
* Import of OpenJDK 8 u252 build 03
  - JDK-8005819: Support cross-realm MSSFU
  - JDK-8046724: XML Signature ECKeyValue elements cannot be marshalled or unmarshalled
  - JDK-8079140: IgnoreAllErrorHandler should use doPrivileged when it reads system properties
  - JDK-8134579: [TESTBUG] Some bmi tests fail if can_access_local_variables is on.
  - JDK-8145055: Marlin renderer causes unaligned write accesses
  - JDK-8145849: ALPN: getHandshakeApplicationProtocol() always return null
  - JDK-8146293: Add support for RSASSA-PSS Signature algorithm
  - JDK-8158978: ALPN not working when values are set directly on a SSLServerSocket
  - JDK-8162723: Array index overflow in Base64 utility class
  - JDK-8170282: Enable ALPN parameters to be supplied during the TLS handshake
  - JDK-8171443: (spec) An ALPN callback function may also ignore ALPN
  - JDK-8175029: StackOverflowError in X509CRL and X509Certificate.verify(PublicKey, Provider)
  - JDK-8200400: Restrict Sasl mechanisms
  - JDK-8205445: Add RSASSA-PSS Signature support to SunMSCAPI
  - JDK-8205720: KeyFactory#getKeySpec and translateKey throws NullPointerException with Invalid key
  - JDK-8206171: Signature#getParameters for RSASSA-PSS throws ProviderException when not initialized
  - JDK-8213009: Refactoring existing SunMSCAPI classes
  - JDK-8213010: Supporting keys created with certmgr.exe
  - JDK-8214096: sun.security.util.SignatureUtil passes null parameter, so JCE validation fails
  - JDK-8215694: keytool cannot generate RSASSA-PSS certificates
  - JDK-8216039: TLS with BC and RSASSA-PSS breaks ECDHServerKeyExchange
  - JDK-8221407: Windows 32bit build error in libsunmscapi/security.cpp
  - JDK-8223003: SunMSCAPI keys are not cleaned up
  - JDK-8223063: Support CNG RSA keys
  - JDK-8223158: Docked MacBook cannot start any Java Swing applications
  - JDK-8225180: SignedObject with invalid Key not throwing the InvalidKeyException in Windows
  - JDK-8225392: Comparison builds are failing due to cacerts file
  - JDK-8225745: NoSuchAlgorithmException exception for SHA256withECDSA with RSASSA-PSS support
  - JDK-8229767: Typo in java.security: Sasl.createClient and Sasl.createServer
  - JDK-8230977: JEP 244/8051498 - TLS Application-Layer Protocol Negotiation Extension (Java SE 8)
  - JDK-8230978: Add support for RSASSA-PSS Signature algorithm (Java SE 8)
  - JDK-8234245: sun/security/lib/cacerts/VerifyCACerts.java fails due to wrong checksum
  - JDK-8236470: Deal with ECDSA using ecdsa-with-SHA2 plus hash algorithm as AlgorithmId
  - JDK-8238502: sunmscapi.dll causing EXCEPTION_ACCESS_VIOLATION
* Import of OpenJDK 8 u252 build 04
  - JDK-8047212: runtime/ParallelClassLoading/bootstrap/random/inner-complex assert(ObjectSynchronizer::verify_objmon_isinpool(inf)) failed: monitor is invalid
  - JDK-8135318: CMS wrong max_eden_size for check_gc_overhead_limit
  - JDK-8144445: Maximum size checking in Marlin ArrayCache utility methods is not optimal
  - JDK-8144446: Automate the Marlin crash test
  - JDK-8144630: Use PrivilegedAction to create Thread in Marlin RendererStats
  - JDK-8215756: Memory leaks in the AWT on macOS
  - JDK-8219244: NMT: Change ThreadSafepointState's allocation type from mtInternal to mtThread
  - JDK-8225128: Add exception for expiring DocuSign root to VerifyCACerts test
  - JDK-8229345: Memory leak due to vtable stubs not being shared on SPARC
  - JDK-8229872: (fs) Increase buffer size used with getmntent
  - JDK-8236179: C1 register allocation error with T_ADDRESS
  - JDK-8237368: Problem with NullPointerException in RMI TCPEndpoint.read
* Import of OpenJDK 8 u252 build 05
  - JDK-8022263: use same Clang warnings on BSD as on Linux
  - JDK-8055283: Expand ResourceHashtable with C_HEAP allocation, removal and some unit tests
  - JDK-8068184: Fix for JDK-8032832 caused a deadlock
  - JDK-8079693: Add support for ECDSA P-384 and P-521 curves to XML Signature
  - JDK-8132130: some docs cleanup
  - JDK-8144526: Remove Marlin logging use of deleted internal API
  - JDK-8144654: Improve Marlin logging
  - JDK-8144718: Pisces / Marlin Strokers may generate invalid curves with huge coordinates and round joins
  - JDK-8166976: TestCipherPBECons has wrong @run line
  - JDK-8167409: Invalid value passed to critical JNI function
  - JDK-8181872: C1: possible overflow when strength reducing integer multiply by constant
  - JDK-8187078: -XX:+VerifyOops finds numerous problems when running JPRT
  - JDK-8191227: issues with unsafe handle resolution
  - JDK-8216472: (se) Stack overflow during selection operation leads to crash (win)
  - JDK-8229022: BufferedReader performance can be improved by using StringBuilder
  - JDK-8231430: C2: Memory stomp in max_array_length() for T_ILLEGAL type
  - JDK-8235904: Infinite loop when rendering huge lines
* Import of OpenJDK 8 u252 build 06
  - JDK-8225130: Add exception for expiring Comodo roots to VerifyCACerts test
  - JDK-8230235: Rendering HTML with empty img attribute and documentBaseKey cause Exception
  - JDK-8235744: PIT: test/jdk/javax/swing/text/html/TestJLabelWithHTMLText.java times out in linux-x64
  - JDK-8240521: Revert backport of 8231584: Deadlock with ClassLoader.findLibrary and System.loadLibrary call
* Import of OpenJDK 8 u252 build 07
  - JDK-8197441: Signature#initSign/initVerify for an invalid private/public key fails with ClassCastException for SunPKCS11 provider
* Import of OpenJDK 8 u252 build 08
  - JDK-8241296: Segfault in JNIHandleBlock::oops_do()
  - JDK-8241307: Marlin renderer should not be the default in 8u252
* Import of OpenJDK 8 u252 build 09
  - JDK-8204152: SignedObject throws NullPointerException for null keys with an initialized Signature object
  - JDK-8219597: (bf) Heap buffer state changes could provoke unexpected exceptions
* Backports
  - JDK-8035949, PR3784: Remove unused macro USE_SELECT and clean up Unix version of net_util_md.{c,h}
  - JDK-8167481, PR3784: cleanup of headers and includes for native libnet
  - JDK-8195607, PR3776: sun/security/pkcs11/Secmod/TestNssDbSqlite.java failed with "NSS initialization failed" on NSS 3.34.1
* Bug fixes
  - PR3786: Use 'JDK-' as prefix for bugs from the OpenJDK bug tracker
* Shenandoah
  - AArch64: Fix LRB use in LIRGenerator::do_UnsafeGetAndSetObject
  - [backport] 8221751: Shenandoah: Improve SATB enqueueing
  - [backport] 8221848: Shenandoah: ArrayCopy post-barrier improvements
  - [backport] 8222766: Shenandoah: streamline post-LRB CAS barrier (x86)
  - [backport] 8223951: Shenandoah: Only need to update thread roots during final update refs
  - [backport] 8224179: Shenandoah: CTW test failures with traversal GC
  - [backport] 8224495: Shenandoah: Do not rescan code roots in final mark pause if it is not degenerated GC
  - [backport] 8224508: Shenandoah: Need to update thread roots in final mark for piggyback ref update cycle
  - [backport] 8224525: Shenandoah: Eliminate shenandoah verifier's side-effects
  - [backport] 8225171: Remove leftovers in shenandoahBarrierSetC1.cpp
  - [backport] 8225341: Shenandoah: CM::update_thread_roots() needs to handle derived pointers
  - [backport] 8226586: Shenandoah: No need to pre-evacuate roots for degenerated GC
  - [backport] 8227327: Shenandoah: Faster and more parallel tests
  - [backport] 8227676: Shenandoah: More consistent naming of LRB entry points
  - [backport] 8228364: Shenandoah: Remove unused code from ShenandoahBarrierSetC1
  - [backport] 8229865: Use explicit #include debug.hpp for STATIC_ASSERT in gc/shenandoah/shenandoahUtils.cpp
  - [backport] 8229919: Support JNI Critical functions in object pinning API on x86_32 platforms
  - [backport] 8231086: Shenandoah: Stronger invariant for object-arraycopy
  - [backport] 8231293: Shenandoah: Traversal should not revive dead weak roots
  - [backport] 8231410: Shenandoah: clone barrier should use base pointer
  - [backport] 8231447: Shenandoah: Compilation-time regression after JDK-8231086
  - [backport] 8231499: Shenandoah: compiler/arraycopy/TestDefaultMethodArrayCloneDeoptC2 fails
  - [backport] 8232205: Shenandoah: missing "Update References" -> "Update Roots" tracing
  - [backport] 8232778: Shenandoah: SBSA::arraycopy_prologue checks wrong register
  - [backport] 8232908: Shenandoah: compact heuristics has incorrect trigger "Free is lower than allocated recently"
  - [backport] 8233387: Shenandoah: passive mode should disable pacing ergonomically
  - [backport] 8233520: Shenandoah: do not sleep when thread is attaching
  - [backport] 8233850: Shenandoah: Shenandoah thread count ergonomics should be container aware
  - [backport] 8234232: [TESTBUG] gc/shenandoah/jvmti/TestHeapDump.java fails with -Xcomp
  - [backport] 8235636: gc/shenandoah/compiler/TestUnsafeOffheapSwap.java fails after JDK-8226411
  - [backport] 8235729: Shenandoah: Remove useless casting to non-constant
  - [backport] 8236106: [TESTBUG] Shenandoah: Make TestThreadFailure more resilient
  - [backport] 8236181: C2: Remove useless step_over_gc_barrier() in int->bool conversion
  - [backport] 8236732: Shenandoah: Stricter placement for oom-evac scopes
  - [backport] 8236851: Shenandoah: More details in Traversal GC event messages
  - [backport] 8237007: Shenandoah: assert(_base == Tuple) failure during C2 compilation
  - [backport] 8237038: Shenandoah: Reduce thread pool size in TestEvilSyncBug.java test
  - [backport] 8237570: Shenandoah: cleanup uses of allocation/free threshold in static heuristics
  - [backport] 8237586: Shenandoah: provide option to disable periodic GC
  - [backport] 8239868: Shenandoah: ditch C2 node limit adjustments
  - [backport] 8239904: Shenandoah: accumulated penalties should not be over 100% of capacity
  - [backport] 8240069: Shenandoah: turn more flags diagnostic
  - [backport] 8240070: Shenandoah: remove obsolete ShenandoahCommonGCStateLoads
  - [backport] 8240076: Shenandoah: pacer should cover reset and preclean phases
  - [backport] 8240215: Shenandoah: remove ShenandoahAllocationTrace
  - [backport] 8240216: Shenandoah: remove ShenandoahTerminationTrace
  - [backport] 8240217: Shenandoah: remove ShenandoahEvacAssist
  - [backport] 8240534: Shenandoah: ditch debug safepoint timeout adjustment
  - Fix LRB use in LIRGenerator::do_UnsafeGetAndSetObject
  - Fix tier2_gc_shenandoah group definition
  - Rectify JDK-8191227 workaround for Shenandoah
  - Revert leftover changes in type.{cpp|hpp}
  - JDK-8233500: Shenandoah: Shenandoah load barrier should save registers before calling keep alive barrier on x86
* AArch64 port
  - JDK-8224851, PR3785: AArch64: fix warnings and errors with Clang and GCC 8.3
* AArch32 port
  - JDK-8240219: CPU specific port of 8229345: Memory leak due to vtable stubs not being shared on SPARC

New in release 3.15.0 (2020-01-20):

* Security fixes
  - S8225261: Better method resolutions
  - S8224909, CVE-2020-2583: Unlink Set of LinkedHashSets
  - S8225279: Better XRender interpolation
  - S8226352, CVE-2020-2590: Improve Kerberos interop capabilities
  - S8227758: More valid PKIX processing
  - S8227816: More Colorful ICC profiles
  - S8228548, CVE-2020-2593: Normalize normalization for all
  - S8229951, CVE-2020-2601: Better Ticket Granting Services
  - S8230279: Improve Pack200 file reading
  - S8230318: Better trust store usage
  - S8230967: Improve Registry support of clients
  - S8231129: More glyph images
  - S8231139: Improved keystore support
  - S8231422, CVE-2020-2604: Better serial filter handling
  - S8231795, CVE-2020-2659: Enhance datagram socket support
  - S8232419: Improve Registry registration
  - S8234037, CVE-2020-2654: Improve Object Identifier Processing
* Import of OpenJDK 8 u242 build 01
  - S8010500: [parfait] Possible null pointer dereference at hotspot/src/share/vm/opto/loopnode.hpp
  - S8067429: java.lang.VerifyError: Inconsistent stackmap frames at branch target
  - S8073154: NULL-pointer dereferencing in LIR_OpProfileType::print_instr
  - S8077707: jdk9 b58 cannot run any graphical application on Win 8 with JAWS running
  - S8132249: Clean up JAB debugging code
  - S8133951: Zero interpreter asserts in stubRoutines.cpp
  - S8134739: compiler/loopopts/superword/TestVectorizationWithInvariant crashes in loop opts
  - S8212071: Need to set the FreeType LCD Filter to reduce fringing.
  - S8230238: Add another regression test for JDK-8134739
  - S8230813: Add JDK-8010500 to compiler/loopopts/superword/TestFuzzPreLoop.java bug list
  - S8231398: Add time tracing for gc log rotation at safepoint cleanup
  - S8231988: Unexpected test result caused by C2 IdealLoopTree::do_remove_empty_loop
* Import of OpenJDK 8 u242 build 02
  - S8057986: freetype code to get glyph outline does not handle initial control point properly
  - S8068736: Avoid synchronization on Executable/Field.declaredAnnotations
  - S8073347: javadoc of Formattable messed up by JDK-8019857
  - S8206173: MallocSiteTable::initialize() doesn't take function descriptors into account
  - S8213568: Typo in java/awt/GraphicsEnvironment/LoadLock/GE_init5.java
  - S8218558: NMT stack traces in output should show mt component for virtual memory allocations
  - S8225101: Crash at sun.awt.X11.XlibWrapper.XkbGetUpdatedMap when change keybord map
  - S8228888: C2 compilation fails with assert "m has strange control"
  - S8229020: Failure on CPUs allowing loads reordering: assert(_tasks[t] == 1) failed: What else?
  - S8229169: False failure of GenericTaskQueue::pop_local on architectures with weak memory model
  - S8230363: C2: Let ConnectionGraph::not_global_escape(Node* n) return false if n is not in the CG
  - S8231887: ComodoCA.java fails because certificate was revoked
* Import of OpenJDK 8 u242 build 04
  - S8048556: Unnecessary GCLocker-initiated young GCs
  - S8073108: Use x86 and SPARC CPU instructions for GHASH acceleration
  - S8130341: GHASH 32bit intrinsics has AEADBadTagException
  - S8139178: Wrong fontMetrics when printing in Landscape (OpenJDK)
  - S8146238: [macosx] Java2D Queue Flusher crash on OSX after switching between user accounts
  - S8196681: Java Access Bridge logging and debug flags dynamically controlled
  - S8204288: Matching the end of a string followed by an empty greedy regex and a word boundary fails
  - S8204290: Add check to limit number of capture groups
  - S8219914: Change the environment variable for Java Access Bridge logging to have a directory.
  - S8225505: ctrl-F1 does not show the tooltip of a menu item (JMenuItems)
* Import of OpenJDK 8 u242 build 05
  - S8029629: java/lang/ProcessBuilder/Basic.java fails intermittently
  - S8055351: sun/security/provider/DSA/TestAlgParameterGenerator.java failed with interrupted! (timed out?)
  - S8131778: java disables UseAES flag when using VIS=2 on sparc
  - S8133489: Better messaging for PKIX path validation matching
  - S8134424: BlockDataInputStream.readUTFBody: size local StringBuffer with the given length
  - S8156028: G1YoungGenSizer _adaptive_size not correct when setting NewSize and MaxNewSize to the same value
  - S8170641: sun/net/www/protocol/https/HttpsURLConnection/PostThruProxy.sh fails with timeout
  - S8173956: KeyStore regression due to default keystore being changed to PKCS12
  - S8185898: setRequestProperty(key, null) results in HTTP header without colon in request
  - S8189762: [TESTBUG] Create tests for JDK-8146115 container awareness and resource configuration
  - S8194653: Deadlock involving FileSystems.getDefault and System.loadLibrary call
  - S8195088: [TEST_BUG] StartManagementAgent got unexpected exception
  - S8195667: ProblemList PKCS11 tests Secmod/AddTrustedCert.java and tls/TestKeyMaterial.java due to JDK-8180837
  - S8198649: Switch AWT/Swing's default GTK version to 3
  - S8208715: Conversion of milliseconds to nanoseconds in UNIXProcess contains bug
  - S8213119: [macos] java/awt/GraphicsDevice/CheckDisplayModes.java fails
  - S8215210: [macos] Hangul text does not shape to the precomposed form on JDK8u
  - S8216401: Allow "file:" URLs in Class-Path of local JARs
  - S8221172: SunEC specific test is not limited to SunEC
  - S8221246: NullPointerException within Win32ShellFolder2
  - S8222496: [8u] Switch on GTK3 as a default GTK L&F in client-libs
  - S8223490: Optimize search algorithm for determining default time zone
  - S8225141: Better handling of classes in error state in fast class initialization checks
  - S8229420: [Redo] jstat reports incorrect values for OU for CMS GC
  - S8231124: Missing closedir call with JDK-8223490
  - S8231584: Deadlock with ClassLoader.findLibrary and System.loadLibrary call
  - S8232984: Upgrading Joni License version to 2.1.16
  - S8233886: TEST_BUG jdk/java/net/CookieHandler/B6791927.java hit hardcoded expiration date
  - S8234591: [11u] Build with old C compiler broken by 8223490
  - S8236178: Debug build failed after 8236058
* Import of OpenJDK 8 u242 build 06
  - S8227715: GPLv2 files missing Classpath Exception
  - S8232019: Add LuxTrust certificate updates to the existing root program
  - S8233223: Add Amazon Root CA certificates
  - S8235850: [TESTBUG] Remove test/runtime/RedefineTests/test8178870.sh
* Import of OpenJDK 8 u242 build 07
  - S8037550: Update RFC references in javadoc to RFC 5280
  - S8039438: Some tests depend on internal API sun.misc.IOUtils
  - S8044500: Add kinit options and krb5.conf flags that allow users to obtain renewable tickets and specify ticket lifetimes
  - S8058290: JAAS Krb5LoginModule has suspect ticket-renewal logic, relies on clockskew grace
  - S8080835: Add blocking bulk read to sun.misc.IOUtils
  - S8138978: Examine usages of sun.misc.IOUtils
  - S8139206: Add InputStream readNBytes(int len)
  - S8183591: Incorrect behavior when reading DER value with Integer.MAX_VALUE length
  - S8186576: KerberosTicket does not properly handle renewable tickets at the end of their lifetime
  - S8186831: Kerberos ignores PA-DATA with a non-null s2kparams
  - S8186884: Test native KDC, Java krb5 lib, and native krb5 lib in one test
  - S8193832: Performance of InputStream.readAllBytes() could be improved
  - S8196956: (ch) More channels cleanup
  - S8201627: Kerberos sequence number issues
  - S8215032: Support Kerberos cross-realm referrals (RFC 6806)
  - S8226719: Kerberos login to Windows 2000 failed with "Inappropriate type of checksum in message"
  - S8227061: KDC.java test behaves incorrectly when AS-REQ contains a PAData not PA-ENC-TS-ENC
  - S8227381: GSS login fails with PREAUTH_FAILED
  - S8227437: S4U2proxy cannot continue because server's TGT cannot be found
  - S8232381: add result NULL-checking to freetypeScaler.c
  - S8233944: Make KerberosPrincipal.KRB_NT_ENTERPRISE field package private
  - S8235909: File.exists throws AccessControlException for invalid paths when a SecurityManager is installed
  - S8236983: [TESTBUG] Remove pointless catch block in test/jdk/sun/security/util/DerValue/BadValue.java
  - S8236984: Add compatibility wrapper for IOUtils.readFully
* Import of OpenJDK 8 u242 build 08
  - S8031111: fix krb5 caddr
  - S8132111: Do not request for addresses for forwarded TGT
* Shenandoah
  - Add missing include in shenandoahOopClosures.cpp
  - Avoid initializing unused SharedHeap::_workers for Shenandoah
  - [backport] 8221435: Shenandoah should not mark through weak roots
  - [backport] 8221766: Load-reference barriers for Shenandoah
  - [backport] 8222129: Shenandoah: Missing CompareAndSwapP/N case in get_barrier_strength()
  - [backport] 8222738: Shenandoah: assert(is_Proj()) failed when running cometd benchmarks
  - [backport] 8223448: Shenandoah disabled barriers blocks omit LRB
  - [backport] 8223450: Disable Shenandoah C2 barriers verification for x86_32
  - [backport] 8223567: Rename ShenandoahBrooksPointer to ShenandoahForwarding
  - [backport] 8224496: Shenandoah compilation fails with assert(is_CountedLoopEnd()) failed: invalid node class
  - [backport] 8224522: Shenandoah should apply barriers on deoptimization
  - [backport] 8224584: Shenandoah: Eliminate forwarding pointer word
  - [backport] 8224667: Shenandoah: Post-LRB cleanup
  - [backport] 8224881: Shenandoah: trashing "Collection Set, Pinned" region during Degenerated GC
  - [backport] 8224932: Shenandoah: Rename ShenandoahHeapLock, make it general purpose lock
  - [backport] 8225017: [TESTBUG] gc/shenandoah/oom/TestThreadFailure.java takes too long
  - [backport] 8225046: Shenandoah metrics logs refactoring
  - [backport] 8225048: Shenandoah x86_32 support
  - [backport] 8225111: Make Shenandoah tests work with 32-bit VMs
  - [backport] 8225229: Shenandoah: trim down default number of GC threads
  - [backport] 8225357: Rewire ShenandoahHeap::maybe_update_with_forwarded for contending fixups
  - [backport] 8225441: Cleanup ShenandoahHeap::atomic_compare_exchange_oop
  - [backport] 8225514: Shenandoah: ShenandoahCodeRoots should inherit from AllStatic
  - [backport] 8226757: Shenandoah: Make traversal and passive modes explicit
  - [backport] 8226957: Shenandoah: Remove obsoleted ShenandoahStoreCheck option
  - [backport] 8228775: Shenandoah: Remove useless null-input-verification in Shenandoah/C2 verifier
  - [backport] 8229002: Shenandoah: Missing node types in ShenandoahLoadReferenceBarrier::needs_barrier_impl()
  - [backport] 8229231: Shenandoah: Non-PCH builds failed after JDK-8224932
  - [backport] 8229350: Shenandoah does not need barriers before CreateEx
  - [backport] 8229416: Shenandoah: Demote or remove ShenandoahOptimize*Final optimizations
  - [backport] 8229419: Shenandoah: Cleanup LRB strength selector code
  - [backport] 8229707: [TESTBUG] Some Shenandoah tests assume Server VM by default
  - [backport] 8231197: Shenandoah: JVMTI heap walking cleanup crashes with NULL forwardee
  - [backport] 8231405: [Shenandoah] guarantee(d != NULL) failed: Null dominator info
  - [backport] 8231583: Shenandoah: Fix register clash in SBSA::resolve_forwarding_pointer() borrowing
  - [backport] 8231667: Shenandoah: Full GC should take empty regions into slices for compaction
  - [backport] 8231932: Shenandoah: conc/par GC threads ergonomics overrides user settings
  - [backport] 8231946: Remove obsolete and unused ShenandoahVerifyObjectEquals flag
  - [backport] 8231947: Shenandoah: cleanup ShenandoahHumongousMoves flag treatment
  - [backport] 8232102: Shenandoah: print everything in proper units
  - [backport] 8232176: Shenandoah: new assert in ShenandoahEvacuationTask is too strong
  - [backport] 8232534: Shenandoah: guard against reentrant ShenandoahHeapLock locking
  - [backport] 8232573: Shenandoah: cleanup and add more logging for in-pause phases
  - [backport] 8232575: Shenandoah: asynchronous object/region pinning
  - [backport] 8232702: Shenandoah: gc/shenandoah/TestVerifyJCStress.java uses non-existent -XX:+VerifyObjectEquals
  - [backport] 8232729: Shenandoah: assert ShenandoahHeap::cas_oop addresses are aligned
  - [backport] 8232802: Shenandoah: transition between "cset" and "pinned_cset" does not require cancelled gc
  - [backport] LRB right after call, use is Bool
  - Backport per-region seqnum tracking
  - [backport] Relax Shenandoah/C2 verifier against JDK11 shortcomings
  - [backport] Remove to wrong handlings of Shenandoah LRB in escape analysis
  - Backport Traversal GC
  - Cherry-pick JDK-8231201: hs_err should print coalesced safepoint operations in Events section
  - Cleanup weak JNI refs when not doing reference processing
  - Correct order between load, LRB and membar nodes
  - Disable JNI tests for 32-bit platforms, due to lack of jtreg support
  - Do not enable UseCountedLoopSafepoints in Shenandoah by default
  - Fix ifdef -> if INCLUDE_ALL_GCS in Shenandoah x86_32 code
  - Fix leftover commented out code in ShenandoahRuntime::load_reference_barrier_JRT
  - Fix lock ordering issue when calling JVMTI GetLoadedClasses during marking
  - Fix naked heap loads in HeapDumper
  - Fix ShenandoahLoadReferenceBarrierNode::{Value, Identity} signatures after LRB backport
  - Fix Windows build after LRB backports
  - Fix Zero build after LRB backport moves, remove other stubs
  - Remove some obsolete Shenandoah code from C2
  - Remove StubRoutines::_shenandoah_wb_C and related code
  - Revert obsolete shared-code changes in runtime synchronizer code
  - Revert ShenandoahVerifyObjectEquals additions, not required after LRB
  - S8236829: JDK-8232102 backport breaks s390
  - Save vector registers before LRB slowpath call
  - Shenandoah: JvmtiExport::weak_oops_do should not be entered by multiple threads
  - Shenandoah SA: support live region iteration
  - Use correct flag to guard implicit concurrent GC
* AArch64 port
  - S8073108, PR3772: [AArch64] Use x86 and SPARC CPU instructions for GHASH acceleration
  - S8135018, PR3772: AARCH64: Missing memory barriers for CMS collector
  - S8209835, PR3772: Aarch64: elide barriers on all volatile operations
  - S8233839, PR3772: aarch64: missing memory barrier in NewObjectArrayStub and NewTypeArrayStub

New in release 3.14.0 (2019-11-14):

* Security fixes
  - S8167646: Better invalid FilePermission
  - S8213429, CVE-2019-2933: Windows file handling redux
  - S8218573, CVE-2019-2945: Better socket support
  - S8218877: Help transform transformers
  - S8220186: Improve use of font temporary files
  - S8220302, CVE-2019-2949: Better Kerberos ccache handling
  - S8221497: Optional Panes in Swing
  - S8221858, CVE-2019-2958: Build Better Processes
  - S8222684, CVE-2019-2964: Better support for patterns
  - S8222690, CVE-2019-2962: Better Glyph Images
  - S8223163: Better pattern recognition
  - S8223505, CVE-2019-2973: Better pattern compilation
  - S8223518, CVE-2019-2975: Unexpected exception in jjs
  - S8223892, CVE-2019-2978: Improved handling of jar files
  - S8224025: Fix for JDK-8220302 is not complete
  - S8224532, CVE-2019-2981: Better Path supports
  - S8224915, CVE-2019-2983: Better serial attributes
  - S8225286, CVE-2019-2987: Better rendering of native glyphs
  - S8225292, CVE-2019-2988: Better Graphics2D drawing
  - S8225298, CVE-2019-2989: Improve TLS connection support
  - S8225597, CVE-2019-2992: Enhance font glyph mapping
  - S8226765, CVE-2019-2999: Commentary on Javadoc comments
  - S8227129: Better ligature for subtables
  - S8227601: Better collection of references
  - S8228825, CVE-2019-2894: Enhance ECDSA operations
* Import of OpenJDK 8 u232 build 01
  - S6913047: Long term memory leak when using PKCS11 and JCE exceeds 32 bit process address space
  - S6946830: javax.crypto.Cipher.doFinal behavior differs depending on platform
  - S6996807: FieldReflectorKey hash code computation can be improved
  - S8030993: Check jdk/src/share/native/common/jni_util.c for JNI pending exceptions
  - S8075136: Unnecessary sign extension for byte array access
  - S8075544: Add tiered testing definitions to the jdk repo
  - S8075573: Add jdk_other and jdk_svc to jdk tier 2 test definition
  - S8151486: Class.forName causes memory leak
  - S8152856: Xcode 7.3 -Wshift-negative-value compile failure on Mac OS X
  - S8168417: Pending exceptions in java.base/windows/native/libnio
  - S8170494: JNI exception pending in PlainDatagramSocketImpl.c
  - S8185900: hotspot build failed with gcc version Red Hat 4.4.7-3
  - S8185979: PPC64: Implement SHA2 intrinsic
  - S8197930: JNI exception pending in initializeEncoding of jni_util.c
  - S8202353: os::readdir should use readdir instead of readdir_r
  - S8205587: Implicit function declaration in jni_util.c
  - S8210761: libjsig is being compiled without optimization
  - S8214002: Cannot use italic font style if the font has embedded bitmap
  - S8218721: C1's CEE optimization produces safepoint poll with invalid debug information
  - S8218854: FontMetrics.getMaxAdvance may be less than the maximum FontMetrics.charWidth
  - S8219807: C2 crash in IfNode::up_one_dom(Node*, bool)
  - S8221304: Problem list java/awt/FontMetrics/MaxAdvanceIsMax.java
  - S8223219: Backport of JDK-8199552 to OpenJDK 8 leads to duplicate -fstack-protector flags, overriding --with-extra-cflags
  - S8225636: SA can't handle prelinked libraries
  - S8226392: Launcher should not enable legacy stdio streams on GNU/Linux (glibc)
  - S8226870: OpenJDK 8u JRE contains clhsdb and hsdb launchers
  - S8226928: [TESTBUG] test/java/net/NetworkInterface/IPv4Only.java fails intermittently on AIX
  - S8227018: CompletableFuture should not call Runtime.availableProcessors on fast path
  - S8228405: Incorrect format strings in PhaseIdealLoop::rc_predicate
* Import of OpenJDK 8 u232 build 02
  - S8075546: Add tiered testing definitions to the langtools repo
  - S8202252: (aio) Closed AsynchronousSocketChannel keeps completion handler alive
  - S8216597: SIGBUS in Java_sun_security_pkcs11_wrapper_PKCS11_getNativeKeyInfo after JDK-6913047
  - S8220513: Wrapper Key may get deleted when closing sessions in SunPKCS11 crypto provider
  - S8222737: [TESTBUG] Allow for tier 1 like testing in OpenJDK 8u
  - S8224580: Matcher can cause oop field/array element to be reloaded
  - S8226543: Reduce GC pressure during message digest calculations in password-based encryption
* Import of OpenJDK 8 u232 build 03
  - S8213561: ZipFile/MultiThreadedReadTest.java timed out in tier1
  - S8217785: Padding ParallelTaskTerminator::_offered_termination variable
* Import of OpenJDK 8 u232 build 04
  - S8188868: PPC64: Support AES intrinsics on Big Endian
* Import of OpenJDK 8 u232 build 05
  - S8080157: assert(allocates2(pc)) failed: not in CodeBuffer memory
  - S8087128: C2: Disallow definition split on MachCopySpill nodes
  - S8139965: Hang seen when using com.sun.jndi.ldap.search.replyQueueSize
  - S8147502: Digest is incorrectly truncated for ECDSA signatures when the bit length of n is less than the field size
  - S8147611: G1 - Missing memory barrier in start_cset_region_for_worker
  - S8151066: assert(0 <= i && i < length()) failed: index out of bounds
  - S8155951: VM crash in nsk/jvmti/RedefineClasses/StressRedefine: assert failed: Corrupted constant pool
  - S8202948: C2: assert(init_offset >= 0) failed: positive offset from object start
  - S8203324: Use out of scope in getMacOSXLocale of java_props_macosx.c:120
  - S8206879: Currency decimal marker incorrect for Peru
  - S8211232: GraphKit::make_runtime_call() sometimes attaches wrong memory state to call
  - S8214687: Optimize Collections.nCopies().hashCode() and equals()
  - S8214702: Wrong text position for whitespaced string in printing Swing text
  - S8215130: Fix errors in LittleCMS 2.9 reported by GCC 8
  - S8215265: C2: range check elimination may allow illegal out of bound access
  - S8217359: C2 compiler triggers SIGSEGV after transformation in ConvI2LNode::Ideal
  - S8217731: Font rendering and glyph spacing changed from jdk-8 to jdk-11
  - S8217896: Make better use of LCPUs when building on AIX
  - S8218201: Failures when vmIntrinsics::_getClass is not inlined
  - S8218280: LineNumberReader throws "Mark invalid" exception if CRLF straddles buffer.
  - S8218780: Update MUSCLE PCSC-Lite header files
  - S8219517: assert(false) failed: infinite loop in PhaseIterGVN::optimize
  - S8220072: GCC 8.3 reports errors in java.base
  - S8222980: Upgrade IANA Language Subtag Registry to Version 2019-04-03
  - S8223177: Data race on JvmtiEnvBase::_tag_map in double-checked locking
  - S8223227: Rename acquire_tag_map() to tag_map_acquire() in jvmtiEnvBase
  - S8225423: GTK L&F: JSplitPane: There is no divider shown
  - S8226798: JVM crash in klassItable::initialize_itable_for_interface(int, InstanceKlass*, bool, Thread*)
  - S8226964: [Yaru] GTK L&F: There is no difference between menu selected and de-selected
  - S8228440: TestAESCiphers tests fail with "access denied" trying to access ArrayUtil
* Import of OpenJDK 8 u232 build 06
  - S8178870: instrumentation.retransformClasses cause coredump
  - S8216965: crash in freetypeScaler.c CopyBW2Grey8
  - S8217676: Upgrade libpng to 1.6.37
  - S8222108: Reduce minRefreshTime for updating remote printer list on Windows
* Import of OpenJDK 8 u232 build 08
  - S8225425: java.lang.UnsatisfiedLinkError: net.dll: Can't find dependent libraries
  - S8226607: Inconsistent info between pcsclite.md and MUSCLE headers
  - S8228469: (tz) Upgrade time-zone data to tzdata2019b
  - S8230085: (fs) FileStore::isReadOnly is always true on macOS Catalina
  - S8231098: (tz) Upgrade time-zone data to tzdata2019c
  - S8231463: Fix runtime/RedefineTests/RedefineDoubleDelete.java test in 8u
* Shenandoah
  - [backport] 8230425: Shenandoah forces +UseNUMAInterleaving even after explicitly disabled
  - Missing include precompiled.hpp in shenandoahSynchronizerIterator.cpp
  - Protect lir_shenandoah_wb with INCLUDE_ALL_GCS
  - Prune unneeded (jccb|jmpb)_if_possible
  - Revert parts of x86_64.ad to 8u upstream state
  - Revert Shenandoah/JDK8-only changes relating to MonitorInUseLists
  - Revert Shenandoah-specific assert after JDK-8211926 landed
  - S8228746: Revert incorrect StubRoutines::contains change
  - S8231366: Shenandoah: Shenandoah String Dedup thread is not properly initialized
* AArch64 port
  - S8151775, PR3750: aarch64: add support for 8.1 LSE atomic operations
  - S8179954, PR3762: AArch64: C1 and C2 volatile accesses are not sequentially consistent
  - S8205421, PR3762: AARCH64: StubCodeMark should be placed after alignment
  - S8206163, PR3762: AArch64: incorrect code generation for StoreCM
  - S8209420, PR3762: Track membars for volatile accesses so they can be properly optimized
  - S8211233, PR3762: MemBarNode::trailing_membar() and MemBarNode::leading_membar() need to handle dying subgraphs better
  - S8213134, PR3762: AArch64: vector shift failed with MaxVectorSize=8
  - S8214857, PR3762: "bad trailing membar" assert failure at memnode.cpp:3220
  - S8216350, PR3762: AArch64: monitor unlock fast path not called
  - S8219011, PR3762: Implement MacroAssembler::warn method on AArch64
  - S8228400, PR3762: Remove built-in AArch64 simulator
  - S8228406, PR3762: Superfluous change in chaitin.hpp
  - S8228593, PR3762: Revert explicit JDK 7 support additions
  - S8228716, PR3762: Revert InstanceKlass::print_on debug additions
  - S8228718, PR3762: Revert incorrect backport of JDK-8129757 to 8-aarch64
  - S8228725, PR3762: AArch64: Purge method call format support
  - S8228747, PR3762: Revert "unused" attribute from test_arraycopy_func
  - S8228767, PR3762: Revert ResourceMark additions
  - S8228770, PR3762: Revert development hsdis changes
  - S8229123, PR3762: Revert build fixes for aarch64/zero
  - S8229124, PR3762: Revert disassembler.cpp changes
  - S8229145, PR3762: Revert TemplateTable::bytecode() visibility change
  - PR3762: profile_has_unique_klass gives wrong result
* AArch32 port
  - [aarch32] Fix debug build failure introduced at feec5f4cea8b
  - c1: misc bugfixes
  - [c1] [Spec98] _228_jack crash
  - CCC: align doubles on stack
  - CritcalJNI support
  - Fix ARMv6 target causes some asserts to fail
  - Fix ccc: float args should go to stack after first double allocated there
  - Fix for jtreg TestArrayCopy6769124 -Xcomp
  - Fix for single-core config crash
  - Fix JVMTI PopFrame: should skip runtime call if next bytecode is not invokestatic
  - Fix native_wrapper faste unlock register used for temp, avoid clobbering lock_obj register
  - Fix operand value corruption in arraycopy
  - Fix SIGSEGV in System.arraycopy
  - Fix wrong fault_pc in safefetch stubs
  - Follow-up the fix for 8161598
  - JTReg test compiler/uncommontrap/TestDeoptOOM.java causes JVM assert
  - Raw long address should be converted to sizeof(ptr) one when it is required
  - S8207838: AArch32: Float registers incorrectly restored in JNI call
  - save_args/restore_args misses second part of VMRegPair

New in release 3.13.0 (2019-07-18):

* Security fixes
  - S8191073: JpegImageReader throws IndexOutOfBoundsException when trying to read image data from tables-only image
  - S8208698, CVE-2019-2745: Improved ECC Implementation
  - S8212328, CVE-2019-2762: Exceptional throw cases
  - S8213431, CVE-2019-2766: Improve file protocol handling
  - S8213432, CVE-2019-2769: Better copies of CopiesList
  - S8216381, CVE-2019-2786: More limited privilege usage
  - S8217563: Improve realm maintenance
  - S8218863: Better endpoint checks
  - S8218873: Improve JSSE endpoint checking
  - S8218876, CVE-2019-7317: Improve PNG support options
  - S8219018: Adjust positions of glyphs
  - S8219020: Table alternate substitutions
  - S8219775: Certificate validation improvements
  - S8220192: Better outlook for SecureRandom
  - S8220517: Enhanced GIF support
  - S8221518, CVE-2019-2816: Normalize normalization
  - S8223511, CVE-2019-2842: Extended AES support
* New features
  - PR3743: Support EA builds
* Import of OpenJDK 8 u222 build 01
  - S8022879: TEST_BUG: sun/nio/cs/MalformedSurrogates.java fails intermittently
  - S8025209: Intermittent test failure java/net/Socket/asyncClose/AsyncClose.java
  - S8030690: TEST_BUG java/nio/Buffer/Chars.java fails intermittently
  - S8031563: TEST_BUG: java/nio/channels/Selector/ChangingInterests.java failed once
  - S8031666: TEST_BUG: java/net/ipv6tests/UdpTest.java failed because of SocketTimeoutException
  - S8048782: OpenJDK: PiscesCache : xmax/ymax rounding up can cause RasterFormatException
  - S8055814: [TESTBUG] runtime/NMT/NMTWithCDS.java fails with product builds due to missing UnlockDiagnosticVMOptions
  - S8073078: java/nio/file/FileStore/Basic.java sensitive to NFS configuration
  - S8129988: JSSE should create a single instance of the cacerts KeyStore
  - S8137231: sun/security/rsa/SpecTest.java timeout with Agent error: java.lang.Exception
  - S8150013: ParNew: Prune nmethods scavengable list.
  - S8151225: Mark SpecTest.java as intermittently failing
  - S8154156: PPC64: improve array copy stubs by using vector instructions
  - S8156035: Remove intermittent key from sun/security/rsa/SpecTest.java
  - S8157287: java/nio/file/FileStore/Basic.java failed with "java.nio.file.AccessDeniedException : /zones/zoneone/root "
  - S8192854: FONTCONFIG_CFLAGS missing from spec.gmk.in
  - S8202768: [macos] Appkit thread slows when any Window Manager active
  - S8203627: Swing applications with JRadioButton and JCheckbox fail to render correctly when using GTK3 and the GTK L&F
  - S8205916: [test] Fix jdk/tools/launcher/RunpathTest to handle both, RPATH and RUNPATH
  - S8206955: MethodHandleProxies.asInterfaceInstance does not support default methods
  - S8207760: SAXException: Invalid UTF-16 surrogate detected: d83c ?
  - S8209951: Problematic sparc intrinsic: com.sun.crypto.provider.CipherBlockChaining
  - S8213825: assert(false) failed: Non-balanced monitor enter/exit! Likely JNI locking
  - S8214109: XToolkit is not correctly displayed color on 16-bit high color setting
  - S8214111: There is no icon in all JOptionPane target image
  - S8214112: The whole text in target JPasswordField image are not selected
  - S8214252: Expanded & Collapsed nodes of a JTree look the same on GTK3
  - S8214253: Tooltip is transparent rather than having a black background
  - S8217263: Automate DashOffset test
  - S8217597: [TESTBUG] old version docker does not support --cpus
  - S8218469: JSlider display issue with slider for GTKLookAndFeel
  - S8218470: JScrollBar display issue with GTKLookAndFeel
  - S8218472: JProgressBar display issue with GTKLookAndFeel
  - S8218473: JOptionPane display issue with GTKLookAndFeel
  - S8218479: JTextPane display issue with GTKLookAndFeel
  - S8220349: The fix done for JDK-8214253 have caused issues in JTree behaviour
  - S8220718: Missing ResourceMark in nmethod::metadata_do
  - S8221789: make reconfigure broken (jdk8u only)
  - S8222965: Backport of JDK-8129988 broke the build
  - S8222975: Fix 'release' file to reflect actual repo checkin used to compile JDK
* Import of OpenJDK 8 u222 build 02
  - S8134030: test/serviceability/dcmd/gc/HeapDumpTest fails to verify the dump
  - S8151539: Remove duplicate AlwaysTrueClosures
  - S8176100: [REDO][REDO] G1 Needs pre barrier on dereference of weak JNI handles
  - S8210416: [linux] Poor StrictMath performance due to non-optimized compilation
  - S8217315: Proper units should print more significant digits
  - S8218674: HTML Tooltip with "img=src" on component doesn't show
* Import of OpenJDK 8 u222 build 03
  - S7100957: SOCKS proxying does not work with IPv6 connections
  - S7102541: RFE: os::set_native_thread_name() cleanups
  - S8144332: HSDB could not terminate when close button is pushed.
  - S8151322: Implement os::set_native_thread_name() on Solaris
  - S8154387: Parallel unordered Stream.limit() tries to collect 128 elements even if limit is less
  - S8189131: Open-source the Oracle JDK Root Certificates
  - S8189949: Remove Baltimore Cybertrust Code Signing CA
  - S8191031: Remove several Symantec Root CAs
  - S8191844: Remove SECOM root (secomevrootca1)
  - S8195774: Add Entrust root certificates
  - S8195793: Remove GTE CyberTrust Global Root
  - S8196141: Add GoDaddy root certificates
  - S8199779: Add T-Systems, GlobalSign and Starfield services root certificates
  - S8204923: Restore Symantec root verisignclass2g2ca
  - S8209506: Add Google Trust Services GlobalSign root certificates
  - S8210425: [x86] sharedRuntimeTrig/sharedRuntimeTrans compiled without optimization
  - S8210432: Add additional TeliaSonera root certificate
  - S8213213: Remove src/java.desktop/unix/classes/sun/awt/X11/keysym2ucs.h
  - S8214770: java/time/test/java/time/format/TestNonIsoFormatter.java failed in non-english locales.
  - S8216577: Add GlobalSign's R6 Root certificate
  - S8218152: [javac] fails and exits with no error if a bad annotation processor provided
  - S8222136: Remove two Comodo root CA certificates that are expiring
  - S8222137: Remove T-Systems root CA certificate
  - S8223555: Cleanups in cacerts tests
  - S8223664: Add jtreg tests for 8223528, backport to jdk8u of 8176100
* Import of OpenJDK 8 u222 build 04
  - S8158232: PPC64: improve byte, int and long array copy stubs by using VSX instructions
  - S8190974: Parallel stream execution within a custom ForkJoinPool should obey the parallelism
  - S8203190: SessionId.hashCode generates too many collisions
  - S8223499: Remove two DocuSign root certificates that are expiring
  - S8223883: Fix jni.cpp copyright date after 8223528
* Import of OpenJDK 8 u222 build 05
  - S8019816: [TEST_BUG][macosx] closed/java/awt/BasicStroke/DashZeroWidth.java not on EDT
  - S8044289: In ImageIO.write() and ImageIO.read() null stream is not handled properly.
  - S8055705: Rename UnixPrintServiceLookup and Win32PrintServiceLookup as a platform neutral class name
  - S8059575: JEP-JDK-8043304: Test task: Tiered Compilation level transition tests
  - S8075939: Stream.flatMap() causes breaking of short-circuiting of terminal operations
  - S8143097: java/net/ipv6tests/UdpTest.java fails intermittently with "checkTime failed: got 1998 expected 4000"
  - S8151226: Mark UdpTest.java as intermittently failing
  - S8166684: PPC64: implement intrinsic code with vector instructions for Unsafe.copyMemory()
  - S8185969: PPC64: Improve VSR support to use up to 64 registers
  - S8193830: Xalan Update: Xalan Java 2.7.2
  - S8196775: java/net/Socket/asyncClose/Race.java failed intermittently on Windows with ConnectException: Connection refused
  - S8202414: Unsafe write after primitive array creation may result in array length change
  - S8202651: Test ComodoCA.java fails
  - S8204929: Fonts with embedded bitmaps are not always rotated
  - S8210886: Remove references in xwindows.md to non-existent files.
  - S8210985: Update the default SSL session cache size to 20480
  - S8213183: InputMethod cannot be used after its restarting
  - S8214765: All TrayIcon MessageType icons does not show up with gtk3 option set
  - S8218020: Back out accidental changes that belong elsewhere
  - S8218020: Fix version number in mesa.md 3rd party legal file
  - S8220495: Update GIFlib library to the 5.1.8
  - S8222670: pathological case of JIT recompilation and code cache bloat
  - S8223537: testlibrary_tests/ctw/ClassesListTest.java fails with Agent timeout frequently
  - S8224727: Problem list test security/infra/java/security/cert/CertPathValidator/certification/ActalisCA.java
  - S8225065: Revert 8221166 (8u backport of 8048782)
* Import of OpenJDK 8 u222 build 06
  - S8173910: (fs) java/nio/file/FileSystem/Basic.java should conditionally check FileStores
  - S8176237: (fs) java/nio/file/FileStore/Basic.java should conditionally check FileStores
  - S8202884: SA: Attach/detach might fail on Linux if debugee application create/destroy threads during attaching
* Import of OpenJDK 8 u222 build 07
  - S8153732: Windows remote printer changes do not reflect in lookupPrintServices()
  - S8212202: [Windows] Exception if no printers are installed.
  - S8221263: [TEST_BUG] RemotePrinterStatusRefresh test is hard to use
  - S8221412: lookupPrintServices() does not always update the list of Windows remote printers
  - S8225716: G1 GC: Undefined behaviour in G1BlockOffsetTablePart::block_at_or_preceding
* Import of OpenJDK 8 u222 build 08
  - S8040211: Update LSR datafile for BCP 47
  - S8177472: Remove hard-coded IANA Subtag Registry map in LocaleEquivalentMap.java
  - S8181594: Efficient and constant-time modular arithmetic
  - S8182999: SunEC throws ProviderException on invalid curves
  - S8187946: Support ISO 4217 Amendments 163 and 164
  - S8191404: Upgrading JDK with latest available LSR data from IANA.
  - S8193552: ISO 4217 amendment 165
  - S8195478: sun/text/resources/LocaleDataTest.java fails with java.lang.Exception
  - S8201317: X25519/X448 code improvements
  - S8202026: ISO 4217 amendment 166
  - S8203228: Branch-free output conversion for X25519 and X448
  - S8203872: Upgrading JDK with latest available LSR data from IANA.
  - S8204269: ISO 4217 amendment 167
  - S8208648: ECC Field Arithmetic Enhancements
  - S8208746: ISO 4217 Amendment #168 update
  - S8209775: ISO 4217 Amendment #169 update
  - S8210153: localized currency symbol of VES
  - S8213294: Upgrade IANA LSR data
  - S8214935: Upgrade IANA LSR data
  - S8218781: Localized names for Japanese era Reiwa in COMPAT provider
* Import of OpenJDK 8 u222 build 09
  - S8135248: Add utility methods to check indexes and ranges
  - S8142493: Utility methods to check indexes and ranges doesn't specify behavior when function produces null
  - S8146458: Improve exception reporting for Objects.checkIndex/checkFromToIndex/checkFromIndexSize
  - S8155794: Move Objects.checkIndex BiFunction accepting methods to an internal package
  - S8179098: Crypto AES/ECB encryption/decryption performance regression (introduced in jdk9b73)
* Import of OpenJDK 8 u222 build 10
  - S8157792: After Integrating tzdata2016d the test/sun/util/calendar/zi/TestZoneInfo310.java fails for "Asia/Oral" and "Asia/Qyzylorda" Timezones
  - S8215982: (tz) Upgrade time-zone data to tzdata2018i
  - S8224560: (tz) Upgrade time-zone data to tzdata2019a
  - S8225580: tzdata2018i integration causes test failures on jdk-13
* Shenandoah
  - [backport] 8210879: ClassLoaderStatsClosure does raw oop comparison
  - [backport] 8216973: Kick up cleanup phases in the right places
  - [backport] 8217016: Shenandoah: Streamline generation of CAS barriers
  - [backport] 8217043: Shenandoah: SIGSEGV in Type::meet_helper() at barrier expansion time
  - [backport] 8217213: shenandoahTaskQueue.hpp includes .inline.hpp file
  - [backport] 8217319: Cleanup Shenandoah includes
  - [backport] 8217343: Shenandoah control thread should be able to run at critical priority
  - [backport] 8217400: Optimized build is broken by Shenandoah changes
  - [backport] 8217874: Shenandoah: Clobbered register in ShenandoahBarrierSetAssembler::cmpxchg_oop()
  - [backport] 8219524: Shenandoah misreports "committed" size in MemoryMXBean
  - [backport] 8219857: Shenandoah GC may initialize thread's gclab twice
  - [backport] 8219976: GarbageCollectionNotificationInfo always says "No GC" when running Shenandoah
  - [backport] 8220153: Shenandoah does not work with TransparentHugePages properly
  - [backport] 8220162: Shenandoah should not commit HugeTLBFS memory
  - [backport] 8220228: Improve Shenandoah pacing histogram message
  - [backport] 8220350: Refactor ShenandoahHeap::initialize
  - [backport] 8220712: [TESTBUG] gc/shenandoah/compiler/TestMaybeNullUnsafeAccess should run with Shenandoah enabled
  - [backport] 8220714: C2 Compilation failure when accessing off-heap memory using Unsafe
  - [backport] 8221278: Shenandoah should not enqueue string dedup candidates during root scan
  - [backport] 8222130: Shenandoah should verify roots after pre-evacuation
  - [backport] 8222185: Shenandoah should report "committed" as capacity
  - [backport] 8222186: Shenandoah should not uncommit below minimum heap size
  - [backport] 8222403: Shenandoah: Remove ShenandoahAlwaysTrueClosure, use AlwaysTrueClosure instead
  - [backport] 8222425: Shenandoah: Move commonly used closures to separate files
  - [backport] 8223446: Shenandoah breaks alignment with some HumongousThreshold values
  - [backport] 8223447: Stabilize gc/shenandoah/TestStringDedupStress test
  - [backport] 8223651: Build fails with --with-jvm-features=-jfr and --disable-precompiled-headers
  - [backport] 8223759: Shenandoah should allow arbitrarily low initial heap size
  - [backport] 8223762: Shenandoah: overflows in calculations involving heap capacity
  - [backport] 8223767: Shenandoah fails to build on Solaris x86_64
  - [backport] 8223980: Shenandoah: Refactor and fix ObjArrayChunkedTask verification
  - [backport] 8222838: Shenandoah: SEGV on accessing cset bitmap for NULL ptr
  - [backport] 8222843: Print Shenandoah cset map addresses in hs_err
  - [backport] Added a few missed worker sessions for worker tasks
  - [backport] Add JFR parallel and concurrent events (infrastructure)
  - [backport] Adjust metaspace size during each GC
  - [backport] A few more missing object equals barriers
  - [backport] Always copy forward for disjoint arrays (test)
  - [backport] Assert that Shenandoah does not trip JDK-8211926
  - [backport] Avoid false sharing by padding the ShenandoahEvacOOMHandler field in ShenandoahHeap
  - [backport] Avoid write barrier during full GC
  - [backport] Beef up and parallelize EvilSyncBug test
  - [backport] c2 verification pass fixes for CAS
  - [backport] Cherry-pick bulk MarkBitMap clearing methods
  - [backport] Cherry-pick JDK-8212673, fix for Node::eqv_uncast
  - [backport] Cleanup .ad files includes
  - [backport] Clean up and regroup Shenandoah flags
  - [backport] Cleanup buffered queue handling
  - [backport] Cleanup C2 debugging leftovers
  - [backport] Clean up dead code
  - [backport] Clean up declarations and uses of marked_object_iterate
  - [backport] Cleanup header files and forward declarations
  - [backport] Clean up Shenandoah configurations in shared tests
  - [backport] Clean up ShHeap::heap_region_iterate uses
  - [backport] Cleanup unused bitmap methods
  - [backport] Cleanup up superfluous newlines
  - [backport] Coarsen Full GC use of heap lock
  - [backport] Code root iterators should not be instantiated in worker threads
  - [backport] Common liveness cache in ShHeap
  - [backport] Compact heuristics adjustments
  - [backport] Concurrent cycle by default on any external GC request
  - [backport] Disable heap iteration for Shenandoah in SA
  - [backport] Disable ShHeapUncommit on too-large large-pages
  - [backport] Drop Shenandoah from test names
  - [backport] Eliminating Shenandoah exposure to CLD
  - [backport] Enable NUMA by default
  - [backport] Enable string deduplication in all marking phases
  - [backport] Factor out implicit/explicit GC requests
  - [backport] Fail early when critical barriers are disabled
  - [backport] Filter out TestPromotionToSurvivor.java test for Shenandoah
  - [backport] Filter upstream tests for Shenandoah (part 1: tier1_gc)
  - [backport] Fix build failures when Shenandoah is disabled, after #include reshuffles
  - [backport] Fix call to is_g1_marking_load() with is_shenandoah_state_load() in ShenandoahSupport
  - [backport] Fix compilation errors due to missing spaces between string literal and macro
  - [backport] Fixed ShenandoahStrDedupStress test that causes negative index OOB exception
  - [backport] Fix inconsistent "process weakrefs" logging
  - [backport] Fix indentation of CriticalNative* tests
  - [backport] Fix indenting in ShMarkCompact::do_it
  - [backport] Fix up superfluous changes against upstream
  - [backport] Fix various formattings and namings in shared GC code
  - [backport] Fix Windows build failure
  - [backport] Force termination logic is inverted
  - [backport] Handle metadata induced GC
  - [backport] Handle ShHeap::time_since_last_millis for RMI users
  - [backport] Handle update_refs, class_unload, ref_proc in ShConcMark better
  - [backport] Homogenize unimplemented stubs handling
  - [backport] Improve liveness count during marking
  - [backport] Initial committed regions count can be more than max
  - [backport] Inline/rename confusingly named methods in ShConcurrentMark
  - [backport] Inline ShHeap::do_marked_object_complete
  - [backport] Inline ShHeap::monitoring_support into header
  - [backport] Inline ShHeap::prepare_concurrent_evacuation
  - [backport] Inline trivial ShHeap methods right in header
  - [backport] In update-refs, update all code-roots when in degen-gc
  - [backport] JVMTI lacks a few GC barriers/hooks
  - [backport] Make heuristics tell if we can process references or unload classes
  - [backport] Make ResourceMark use consistent in ShenandoahCodeRoots
  - [backport] Make Shenandoah to use ShenandoahOWST only
  - [backport] Make sure bitmap is marked incomplete before bitmap resets
  - [backport] Make sure debug builds fail predictably on safepoint timeout
  - [backport] Micro-optimize ShHeap::get_region by moving the most likely branch first
  - [backport] Minor cleanup of Shenandoah SA
  - [backport] Missed VerifyObjectEquals in VerifyJCStressTest
  - [backport] More AArch64 assembler cleanups
  - [backport] Move HdrSeq and BinaryMagnitudeSeq into Shenandoah utilities
  - [backport] Move ShenandoahAllocType and ShenandoahAllocRequest to separate file
  - [backport] Move ShenandoahGCTracer to gc/shenandoah
  - [backport] Move Shenandoah tests to proper locations
  - [backport] Need to step over GC barriers in Node::eqv_uncast()
  - [backport] Parallel heap region iteration
  - [backport] Parallelise "Clear Liveness"
  - [backport] Parallelise "Complete Liveness"
  - [backport] Partial infrastructure for suspendible workers
  - [backport] Precleaning should use GC workers to do actual work
  - [backport] Pre-evac JVMTI roots + fixes
  - [backport] Prefix Shenandoah tests with "Test"
  - [backport] Prepare tests for making UseShenandoahGC experimental
  - [backport] Print number of threads in Shenandoah SA heap summary
  - [backport] Print "process weakrefs" to disambiguate vs CM-with-UR
  - [backport] Protect more internal code from false sharing
  - [backport] Protect risky conversion in ShenandoahHeap::millis_since_last_gc
  - [backport] Purge some G1-related cruft in C2
  - [backport] Purge unnecessary time conversion in ShenandoahPhaseTimings::record_phase_time
  - [backport] Readjust ShenandoahStrDedupStress test to avoid timeout
  - [backport] Record location when asserting the code root correctness
  - [backport] Refactor bitmap cleaning
  - [backport] Reformat Shenandoah tests
  - [backport] Rehash and cleanup usages of ShenandoahHeap::heap()
  - [backport] Re-label Shenandoah GC causes (SA&GC)
  - [backport] Remove dead-weight ShenandoahPrinter
  - [backport] Remove fix-roots pass in ShHeap
  - [backport] Remove obsolete and ignored TestHeapAlloc
  - [backport] Remove obsolete code snippet related to barriers on constants
  - [backport] Remove obsolete unused flags
  - [backport] Remove old code from escape analysis
  - [backport] Remove Parallel Cleanup counters
  - [backport] Remove ShenandoahCompileCheck
  - [backport] Remove ShenandoahWriteBarrierCsetTestInIR flag
  - [backport] Remove ShenandoahWriteBarrierRB flag
  - [backport] Remove ShHeap::_heap_expansion_count
  - [backport] Remove ShHeap::region_in_collection_set in favor of SHR::in_cset
  - [backport] Remove ShWB from formssel.cpp
  - [backport] Remove unused SA ShenandoahHeapRegionSet.java
  - [backport] Remove unused ShenandoahEvacuateRootsClosure
  - [backport] Remove useless change in loopnode.cpp
  - [backport] Remove useless ShHeap::heap_region_iterate
  - [backport] Rename BrooksPointer to ShenandoahBrooksPointer
  - [backport] Rename concurrentMark -> concurrent_mark
  - [backport] Rename fields in (SA) ShenandoahHeap.java to omit 'Regions' and 'Field' suffix
  - [backport] Rename ShHeap::shenandoahPolicy -> ShHeap::shenandoah_policy
  - [backport] Rename UINT64_FORMAT_HEX_W to UINT64_FORMAT_X_W
  - [backport] Rename VerifyObjectEquals to ShenandoahVerifyObjectEquals
  - [backport] Rename vm_operations_shenandoah.* to shenandoahVMOperations.*
  - [backport] Renaming ShenandoahParallelEvacuationTask to ShenandoahConcurrentEvacuationTask
  - [backport] Separate "passive" heuristics from "adaptive"
  - [backport] Several AArch64 cleanups
  - [backport] ShenandoahMemoryPool should support usage threshold
  - [backport] Shenandoah should @require Shenandoah, @key gc, and have good @test
  - [backport] Shenandoah test groups should not include each other
  - [backport] Silence VSC++ about multiple assignment operators
  - [backport] Simplify Shenandoah task termination in aborted paths
  - [backport] Single marking bitmap
  - [backport] Skip pre-evac verification and pacing on shortcut cycle path
  - [backport] Some Shenandoah related additions to SA
  - [backport] Sort ShenandoahConcurrentMark methods/fields into logical groups
  - [backport] Sort ShenandoahHeap methods/fields into logical groups
  - [backport] StringDedupMode enum for closures/method templates
  - [backport] Support VerifyBeforeGC and VerifyAfterGC VM options
  - [backport] Suppressing VSC++ warning locally
  - [backport] Trim down oop-equals verification
  - [backport] Trim unused code from Shenandoah SA
  - [backport] Turn TestReferenceCAS into a standalone/no-testng test
  - [backport] Update copyrights
  - [backport] Use ShenandoahAllocationThreshold in ShenandoahStaticHeuristics constructor
  - [backport] Use s-macro to keep GC phase enum and names in sync
  - Enable heap inspection for Shenandoah
  - Excess barriers before JNI accesses, already covered by "Move barriers into typeArrayOop.hpp direct memory accessors"
  - Fix build failure due to unknown INCLUDE_SHENANDOAHGC
  - Fix dangling write-barrier in acmp
  - Fix force termination detection by spin master
  - Fix minimal VM build
  - Fix non-PCH builds
  - Fix shutdown deadlock due to blocking SATB flush periodic task
  - JDK8u-only: Use WB-based acmp barrier
  - Prettify Shenandoah JDK 8 logging
  - ShenandoahSATBBufferSize cannot be size_t in 8u
  - Adjust code stub sizes for Shenandoah and future backports
  - Enable weak JNI handling with Shenandoah after JDK-8176100
* AArch64 port
  - S8176100, PR3745: [AArch64] [REDO][REDO] G1 Needs pre barrier on dereference of weak JNI handles
  - S8186325, PR3745: AArch64: jtreg test hotspot/test/gc/g1/TestJNIWeakG1/TestJNIWeakG1.java SEGV
  - S8210425, PR3745: [AArch64] sharedRuntimeTrig/sharedRuntimeTrans compiled without optimization
  - S8224671, PR3745: AArch64: mauve System.arraycopy test failure
  - S8224828, PR3745: aarch64: rflags is not correct after safepoint poll
  - S8224880, PR3745: AArch64: java/javac error with AllocatePrefetchDistance
* AArch32 port
  - [aarch32] fix crash 'guarantee(sect->end() <= tend) failed: sanity'
  - Remove debug output
  - S8176100: [aarch32] [REDO][REDO] G1 Needs pre barrier on dereference of weak JNI handles

New in release 3.12.0 (2019-05-01):

* Security fixes
  - S8211936, CVE-2019-2602: Better String parsing
  - S8218453, CVE-2019-2684: More dynamic RMI interactions
  - S8219066, CVE-2019-2698: Fuzzing TrueType fonts: setCurrGlyphID()
* New features
  - PR3734: Make use of branding options
* Import of OpenJDK 8 u202 build 08
  - S8064811: Use THREAD instead of CHECK_NULL in return statements
  - S8068440: Test6857159.java times out
  - S8073139: PPC64: User-visible arch directory and os.arch value on ppc64le cause issues with Java tooling
  - S8073159: improve Test6857159.java
  - S8129560: TestKeyPairGenerator.java fails on Solaris because private exponent needs to comply with FIPS 186-4
  - S8130655: OS X: keyboard input in textfield is not possible if the window contained textfield is owned by EmbeddedFrame
  - S8131051: KDC might issue a renewable ticket even if not requested
  - S8134124: sun/security/tools/jarsigner/warnings.sh fails when using Hindi locale
  - S8139507: WARNING: Could not open/create prefs root node Software\JavaSoft\Prefs
  - S8141421: Various test fail with OOME on win x86
  - S8145788: JVM crashes with -XX:+EnableTracing
  - S8155635: C2: Mixed unsafe accesses break alias analysis
  - S8156709: Cannot call setSeed on NativePRNG on Mac if EGD is /dev/urandom
  - S8160928: javac incorrectly copies over interior type annotations to bridge method
  - S8161732: [TEST_BUG] Test closed/java/awt/MenuBar/MenuBarPeer/MenuBarPeerDisposeTest.java fails in unix enviroments with NullPointerException
  - S8163083: SocketListeningConnector does not allow invocations with port 0
  - S8164383: jhsdb dumps core on Solaris 12 when loading dumped core
  - S8170937: Swing apps are slow if displaying from a remote source to many local displays
  - S8174050: Compilation errors with clang-4.0
  - S8182461: IndexOutOfBoundsException when reading indexed color BMP
  - S8183979: Remove Kodak CMS (KCMS) code from Oracle JDK
  - S8186098: sun/security/pkcs11/KeyStore/SecretKeysBasic.sh failed due to libnss3 version cannot be parsed
  - S8187218: GSSCredential.getRemainingLifetime() returns negative value for TTL > 24 days.
  - S8191006: hsdis disassembler plugin does not compile with binutils 2.29+
  - S8191178: [macos] Problem with input of yen symbol
  - S8191948: db error: InvalidTypeException: Can't assign double[][][] to double[][][]
  - S8193879: Java debugger hangs on method invocation
  - S8194864: Outputs more details for PKCS11 tests if the NSS lib version cannot be determined
  - S8196882: VS2017 Hotspot Defined vsnprintf Function Causes C2084 Already Defined Compilation Error
  - S8200719: Cannot connect to IPv6 host when exists any active network interface without IPv6 address
  - S8201801: RTL language (Hebrew) is presented from left to right
  - S8202264: Race condition in AudioClip.loop()
  - S8202557: OpenJDK fails to start in Windows 7 and 8.1 after upgrading compiler to VC 2017
  - S8204966: [TESTBUG] hotspot/test/compiler/whitebox/IsMethodCompilableTest.java test fails with -XX:CompileThreshold=1
  - S8205479: OS X: requestFocus() does not work properly for embedded frame
  - S8205965: SIGSEGV on write to NativeCallStack::EMPTY_STACK
  - S8206392: [macosx] Cycling through windows (JFrames) does not work with keyboard shortcut
  - S8206911: javax/xml/crypto/dsig/GenerationTests.java fails in 8u-dev
  - S8207060: Memory leak when malloc fails within WITH_UNICODE_STRING block
  - S8207145: (fs) Native memory leak in WindowsNativeDispatcher.LookupPrivilegeValue0
  - S8207150: Clip.isRunning() may return true after Clip.stop() was called
  - S8207322: Backport GTK3 support on Linux to 8u
  - S8207750: Native handle leak in java.io.WinNTFileSystem.list()
  - S8208091: SA: jhsdb jstack --mixed throws UnmappedAddressException on i686
  - S8208183: update HSDIS plugin license to UPL
  - S8208541: non-ASCII characters in hsdis UPL text
  - S8208638: Instead of circle rendered in appl window, but ellipse is produced JEditor Pane
  - S8209184: JCK Test Failure due to ResourceBundle
  - S8209359: [8u] hotspot needs to recognise cl.exe 19.13 to build with VS2017.
  - S8209863: Add a test to verify that -XX:+EnableTracing works
  - S8210350: -Wl,-z,defs JDK 8 build failure
  - S8210384: SunLayoutEngine.isAAT() font is expensive on MacOS
  - S8210736: jdk/javax/xml/crypto/dsig/GenerationTests.java slow on linux
  - S8210891: Remove unused extutil.h from JDK8u sources
  - S8211124: HotSpot update for vm_version.cpp to recognise updated VS2017
  - S8211150: G1 Full GC not purging code root memory and hence causing memory leak
  - S8211394: CHECK_ must be used in the rhs of an assignment statement within a block
  - S8211909: JDWP Transport Listener: dt_socket thread crash
  - S8211933: [8u] hotspot adlc needs to link statically with libstdc++ for gcc7.3
  - S8212709: Backout backport of JDK-8211394 from jdk 8u-dev
  - S8212821: CHECK_ must be used in the rhs of an assignment statement within a block (round 2)
* Import of OpenJDK 8 u212 build 04
  - S7127191: SA JSDB does not display native symbols correctly for transported Linux cores
  - S8027434: "-XX:OnOutOfMemoryError" uses fork instead of vfork
  - S8028254: gc/arguments/TestMinInitialErgonomics.java failed with unexpected initial heap size
  - S8042131: DateTimeFormatterBuilder Mapped-values do not work for JapaneseDate
  - S8043387: java/time/test/java/util/TestFormatter.java failed.
  - S8044047: Missing null pointer checks for streams
  - S8059038: Create new launcher for SA tools
  - S8065749: [TESTBUG]: gc/arguments/TestG1HeapRegionSize.java fails at nightly
  - S8068269: RTM tests that assert on non-zero lock statistics are too strict in RTMTotalCountIncrRate > 1 cases
  - S8076164: [JTextField] When input too long Thai character, cursor's behavior is odd
  - S8076274: [TESTBUG] Remove @ignore from runtime\NMT\JcmdDetailDiff.java
  - S8076458: java/util/stream/test/org/openjdk/tests/java/util/stream/FlatMapOpTest.java timeout
  - S8077608: [TESTBUG] Enable Hotspot jtreg tests to run in agentvm mode
  - S8080932: [TEST_BUG] Test java/awt/BasicStroke/DashStrokeTest.java fails with Bad script error due to improper @run notation
  - S8132136: [PIT] RTL orientation in JEditorPane is broken
  - S8132985: Crash in freetypescaler.c due to double free
  - S8133108: [PIT] Container size is wrong in JEditorPane
  - S8133731: [TEST_BUG] Unmappable in ASCII character such as Thai should be escaped in the regtests targeted for a regular non-I18n runs
  - S8133802: replace some <tt> tags (obsolete in html5) in security-libs docs
  - S8133984: print_compressed_class_space() is only defined in 64-bit VM
  - S8139803: Fix for 8132985 breaks OpenJDK build on windows.
  - S8148928: java/util/stream/test/**/SequentialOpTest.java timed out intermittently
  - S8164656: krb5 does not retry if TCP connection timeouts
  - S8170681: Remove fontconfig header files from JDK source tree
  - S8175120: Remove old tests on kdc timeout policy
  - S8180469: Wrong short form text for supplemental Japanese era
  - S8180904: Hotspot tests running with -agentvm failing due to classpath
  - S8185975: PPC64: Fix vsldoi interface according to the ISA
  - S8187364: Unable to enter zero width non-joiner (ZWNJ) symbol in Swing text component
  - S8189761: COMPANY_NAME, IMPLEMENTOR, BUNDLE_VENDOR, VENDOR, but no configure flag
  - S8193764: Cannot set COMPANY_NAME when configuring a build
  - S8195153: [test] runtime/6981737/Test6981737.java shouldn't check 'java.vendor' and 'java.vm.vendor' properties
  - S8200109: NMT: diff_malloc_site assert(early->flags() == current->flags(), "Must be the same memory type")
  - S8200115: System property java.vm.vendor value includes quotation marks
  - S8202088: Japanese new era implementation
  - S8204142: AWT hang occurs when sequenced events arrive out of sequence in multiple AppContexts
  - S8205432: Replace the placeholder Japanese era name
  - S8206075: On x86, assert on unbound assembler Labels used as branch targets
  - S8206120: Add test cases for lenient Japanese era parsing
  - S8207070: Webstart app popup on wrong screen in a one-screen setup changing to multi-monitor
  - S8207152: Placeholder for Japanese new era should be two characters
  - S8207258: Distrust TLS server certificates anchored by Symantec Root CAs
  - S8208480: Test failure: assert(is_bound() || is_unused()) after JDK-8206075 in C1
  - S8208656: Move java/util/Calendar/CalendarTestScripts tests into OpenJDK
  - S8210633: Cannot parse JapaneseDate string with DateTimeFormatterBuilder Mapped-values
  - S8210647: libsaproc is being compiled without optimization
  - S8211106: [windows] Update OS detection code to recognize Windows Server 2019
  - S8211231: BarrierSetC1::generate_referent_check() confuses register allocator
  - S8211382: ISO2022JP and GB18030 NIO converter issues
  - S8211398: Square character support for the Japanese new era
  - S8211435: Exception in thread "AWT-EventQueue-1" java.lang.IllegalArgumentException: null source
  - S8211926: Catastrophic size_t underflow in BitMap::*_large methods
  - S8212110: Build of saproc.dll broken on Windows 32 bit after JDK-8210647
  - S8212178: Soft reference reclamation race in com.sun.xml.internal.stream.util.ThreadLocalBufferAllocator
  - S8212914: Test javax/imageio/plugins/bmp/BMP8BPPLoadTest.java fails
  - S8212941: Support new Japanese era in java.time.chrono.JapaneseEra
  - S8213151: [AIX] Some class library files are missing the Classpath exception
  - S8213154: Update copyright headers of files in src tree that are missing Classpath exception
  - S8213419: C2 may hang in MulLNode::Ideal()/MulINode::Ideal() with gcc 8.2.1
  - S8213583: Error while opening the JFileChooser when desktop contains shortcuts pointing to deleted files.
  - S8213952: Relax DNSName restriction as per RFC 1123
  - S8213983: [macosx] Keyboard shortcut “cmd +`” stops working properly if popup window is displayed
  - S8213992: Rename and make DieOnSafepointTimeout the diagnostic option
  - S8214061: Buffer written into itself
  - S8214189: test/hotspot/jtreg/compiler/intrinsics/mathexact/MulExactLConstantTest.java fails on Windows x64 when run with -XX:-TieredCompilation
  - S8214206: Fix for JDK-8213419 is broken on 32-bit
  - S8215364: JavaFX crashes on Ubuntu 18.04 with Wayland while using Swing-FX interop
  - S8215934: G1 Old Gen MemoryPool CollectionUsage.used values don't reflect mixed GC results
  - S8215976: Fix gmtime_r declaration conflicts in zip.cpp with linux header files
  - S8216037: Avoid calling vm_update with a NULL name
  - S8216058: [TESTBUG] tools/launcher/VersionCheck.java fails after JDK-8215992
  - S8216396: Support new Japanese era and new currency code points in java.lang.Character for Java SE 8
  - S8217305: Missing 0 in java.dll file version cause issues with patch management software
  - S8217432: MetaspaceGC::_capacity_until_GC exceeds MaxMetaspaceSize
  - S8217520: Remove vm.opt.MaxGCPauseMillis == "null" from TestOldGenCollectionUsage.java
  - S8217579: TLS_EMPTY_RENEGOTIATION_INFO_SCSV is disabled after 8211883
  - S8217609: New era placeholder not recognized by java.text.SimpleDateFormat
  - S8217710: Add 5 currency code points to Java SE 8uX
  - S8218613: [TESTBUG] runtime/ErrorHandling tests are building incorrect testlibrary classes
  - S8218915: Change isJavaIdentifierStart and isJavaIdentifierPart to handle new code points
  - S8219636: Windows build failure after JDK-8207070 8u backport
  - S8219890: Calendar.getDisplayName() returns empty string for new Japanese Era on some locales
  - S8219961: [ppc64] Increase code size for interpreter generation.
  - S8220397: REGRESSION: JDK-8036003 backport regresses no_strip builds
  - S8220641: [TESTBUG] New test KdcPolicy.java introduced by JDK-8164656 needs same change as JDK-8190690
  - S8221355: Performance regression after JDK-8155635 backport into 8u
* Backports
  - S8222286, PR3727: Fix for JDK-8213419 is broken on s390
  - PR3736: Use https URLs where possible.
* Bug fixes
  - PR3718: Change policytool.desktop.in category Development to Settings
  - PR3719: Use JRE bin directory in policytool.desktop.in
  - PR3722: Use SDK bin directory in jconsole.desktop.in
  - PR3723: Use shortened Java version first in Name field of desktop files
  - PR3728: CVE-2018-3639 fix revision to prefer PR_SPEC_DISABLE_NOEXEC to PR_SPEC_DISABLE
* AArch64 port
  - S8153172, PR3724: aarch64: hotspot crashes after the 8.1 LSE patch is merged
  - S8213419, PR3724: [AArch64] C2 may hang in MulLNode::Ideal()/MulINode::Ideal() with gcc 8.2.1
  - S8221220, PR3724: AArch64: Add StoreStore membar explicitly for Volatile Writes in TemplateTable
* AArch32 port
  - S8213419: [AArch32] C2 may hang in MulLNode::Ideal()/MulINode::Ideal() with gcc 8.2.1
  - S8214189: [AArch32] test/hotspot/jtreg/compiler/intrinsics/mathexact/MulExactLConstantTest.java fails on Windows x64 when run with -XX:-TieredCompilation

New in release 3.11.0 (2019-03-01):

* Security fixes
  - S8199156: Better route routing
  - S8199161: Better interface enumeration
  - S8199166: Better interface lists
  - S8199552: Update to build scripts
  - S8200659: Improve BigDecimal support
  - S8203955: Improve robot support
  - S8204895: Better icon support
  - S8205356: Choose printer defaults
  - S8205709: Proper allocation handling
  - S8205714: Initial class initialization
  - S8206290, CVE-2019-2422: Better FileChannel transfer performance
  - S8206295: More reliable p11 transactions
  - S8206301: Improve NIO stability
  - S8208585: Make crypto code more robust
  - S8209094, CVE-2019-2426: Improve web server connections
  - S8210094: Better loading of classloader classes
  - S8210598: Strengthen Windows Access Bridge Support
  - S8210606: Improved data set handling
  - S8210610: Improved LSA authentication
  - S8210866, CVE-2018-11212: Improve JPEG processing
  - S8210870: Libsunmscapi improved interactions
* New features
  - PR3667: Use the internal copy of the SunEC library rather than statically linking against NSS
* Import of OpenJDK 8 u192 build 12
  - S6730115: Fastdebug VM crashes with "ExceptionMark destructor expects no pending exceptions" error
  - S8022177: Windows/MSYS builds broken
  - S8026331: hs_err improvement: Print if we have seen any OutOfMemoryErrors or StackOverflowErrors
  - S8026335: hs_err improvement: Print exact compressed oops mode and the heap base value.
  - S8027584: Disable ccache by default
  - S8031759: Improved tool overriding in configure
  - S8033292: only warn, not fail, on unknown variables in configure
  - S8034199: Add 'reconfigure' target for re-creating a configuration
  - S8034788: Rewrite toolchain.m4 to support multiple toolchains per platform.
  - S8035074: hs_err improvement: Add time zone information in the hs_err file
  - S8035495: Improvements in autoconf integration
  - S8035725: Must keep microsoft VS_PATH on PATH after toolchain detection
  - S8035730: Configure fails in cygwin if current dir is in /home/user
  - S8035751: Clean up Visual Studio detection logic
  - S8035825: Warn instead of fail when calling the configure wrapper directly
  - S8036003: Add --with-native-debug-symbols=[none|internal|external|zipped]
  - S8038340: Cleanup and fix sysroot and devkit handling on Linux and Solaris
  - S8039030: 9-dev windows-i586 build failed with mktemp: command not found
  - S8041623: Solaris Studio 12.4 C++ 5.13, CHECK_UNHANDLED_OOPS use of class oop's copy constructor definitions causing error level diagnostic.
  - S8042707: Source changes needed to build JDK 9 with Visual Studio 2013 (VS2013)
  - S8048128: Fix for Solaris Studio C++ 5.13, CHECK_UNHANDLED_OOPS breaks PPC build.
  - S8057538: Build the freetype library during configure on Windows
  - S8067239: [TESTBUG] javax/xml/bind/marshal/8036981/Test.java failed
  - S8069124: runtime/NMT/MallocSiteHashOverflow.java failing in nightlies
  - S8077420: Build failure with SS12u4
  - S8078437: Enable use of devkits for Windows
  - S8079788: Fix broken CL version detection in configure for some Visual Studio configurations
  - S8081202: Hotspot compile warning: "Invalid suffix on literal; C++11 requires a space between literal and identifier"
  - S8081323: ConstantPool::_resolved_references is missing in heap dump
  - S8114823: G1 doesn't honor request to disable class unloading
  - S8134157: adlc fails to compile with SS12u4
  - S8138692: libjsig compilation is missing EXTRA_CFLAGS on macosx
  - S8140470: javax/xml/crypto/dsig/SecurityManager/XMLDSigWithSecMgr.java failed with AccessControlException
  - S8148175: C1: G1 barriers don't preserve FP registers
  - S8150426: Wrong cast in metadata_at_put
  - S8150688: Fix os_windows siglabel
  - S8153194: PreserveFPRegistersTest.java runs out of memory in the nightlies
  - S8156824: com.sun.jndi.ldap.pool.PoolCleaner should clear its context class loader
  - S8158012: Use SW prefetch instructions instead of BIS for allocation prefetches on SPARC Core C4
  - S8160748: Inconsistent types for ideal_reg
  - S8162362: Introduce system property to control enabled ciphersuites
  - S8162540: Crash in C2 escape analysis with assert: "node should be registered"
  - S8165463: Native implementation of sunmscapi should use operator new (nothrow) for allocations
  - S8173013: JVMTI tagged object access needs G1 pre-barrier
  - S8176033: New cygwin grep does not match \r as newline
  - S8176192: Incorrect usage of Iterator in Java 8 In com.sun.jndi.ldap.EventSupport.removeNamingListener
  - S8178370: [TEST_BUG] java/security/Signature/SignatureLength.java fails
  - S8179079: Incremental HotSpot builds broken on Windows
  - S8179675: Build with error on windows with new Cygwin grep
  - S8185855: Debug exception stacks should be clearer
  - S8186171: HashMap: Entry.setValue may not work after Iterator.remove() called for previous entries
  - S8186646: Nashorn: "duplicate code" assertion when binding a vararg function that just passes arguments along
  - S8188083: NullPointerExcpn-java.awt.image.FilteredImageSource.startProduction JDK-8079607
  - S8189170: Add option to disable stack overflow checking in primordial thread for use with JNI_CreateJavaJVM
  - S8189760: sun/security/ssl/CertPathRestrictions/TLSRestrictions.java failed with unexpected Exception intermittently
  - S8193171: keytool -list displays "JKS" for a PKCS12 keystore
  - S8193758: Update copyright headers of files in src tree that are missing Classpath exception
  - S8194412: Adding 256 units of IsoFields.QUARTER_YEARS broken
  - S8194642: Improve OOM error reporting for JDK8
  - S8195095: Images are not scaled correctly in JEditorPane
  - S8195738: scroll poistion in ScrollPane is reset after calling validate()
  - S8196108: Add build support for VS 2015/2017
  - S8196880: VS2017 Addition of Global Delete Operator with Size Parameter Conflicts with Arena's Chunk Provided One
  - S8196884: VS2017 Multiple Type Cast Conversion Compilation Errors
  - S8197864: VS2017 (C4334) Result of 32-bit Shift Implicitly Converted to 64 bits
  - S8197868: VS2017 (C2065) 'timezone': Undeclared Identifier in share/runtime/os.cpp
  - S8198304: VS2017 (C4838, C4312) Various conversion issues with gtest tests
  - S8198898: Compilation errors in jdk.crypto.mscapi with VS 2017
  - S8200353: Shift or Capslock not working in Textfield after accented keystrokes
  - S8201240: Improve releasing native resources of BufImgSurfaceData.ICMColorData
  - S8201369: Inet4AddressImpl_getLocalHostName reverse lookup on Solaris only
  - S8202600: [Zero] Undefined behaviour in src/os_cpu/linux_zero/vm/os_linux_zero.cpp
  - S8202696: Remove exclusion range for phonetic chars in windows fontconfig.properties
  - S8203349: 8u hotspot should recognise later Windows compilers
  - S8203368: ObjectInputStream filterCheck method throws NullPointerException
  - S8203499: Uninitialised memory in WinAccessBridge.cpp
  - S8203790: MSVCP dependency introduced in awt.dll
  - S8203845: backport of JDK-8034788 inadvertently rolled back JDK-8187045 changes to toolchain.m4
  - S8204053: libsaproc.so not linked with -z,noexecstack
  - S8204872: [8u] VS2017: more instances of "error C3680: cannot concatenate user-defined string literals with mismatched literal suffix identifiers"
  - S8205104: EXTRA_LDFLAGS not consistently being used
  - S8205440: [8u] DWORD64 required for later Windows compilers
  - S8205677: [8u] casts and type change for 8u to enable later Windows compilers
  - S8206425: .gnu_debuglink sections added unconditionally when no debuginfo is stripped
  - S8206454: [8u] os::current_stack_pointer() fails to compile on later Windows compilers (warning C4172: returning address of local variable)
  - S8206914: add jdk8u-dev test failures to ProblemList.txt
  - S8207402: Stray *.debuginfo files when not stripping debug info
  - S8207853: Need to regenerate configure in jdk8u-dev
  - S8209002: 8u192 installed exe and dll files have wrong file version
  - S8210423: Backport of 8034788 breaks GCC version detection
  - S8210658: Remove and retag jdk8u192-b10 tag in source repository
  - S8210951: Test sun/security/ssl/SSLContextImpl/CustomizedCipherSuites.java fails
* Import of OpenJDK 8 u201 build 8
  - S8027781: New jarsigner timestamp warning is grammatically incorrect
  - S8159805: sun/security/tools/jarsigner/warnings/NoTimestampTest.java fails after JDK-8027781
  - S8171049: Era.getDisplayName doesn't work with non-IsoChronology
  - S8191438: jarsigner should print when a timestamp will expire
  - S8201818: [macosx] Printing attributes break page size set via "java.awt.print.Book" object
  - S8205330: InitialDirContext ctor sometimes throws NPE if the server has sent a disconnection
  - S8207775: Better management of CipherCore buffers
  - S8208583: Better management of internal KeyStore buffers
  - S8209129: Further improvements to cipher buffer management
  - S8209862: CipherCore performance improvement
  - S8210695: Create test to cover JDK-8205330 InitialDirContext ctor sometimes throws NPE if the server has sent a disconnection
  - S8211883: Disable anon and NULL cipher suites
  - S8213085: (tz) Upgrade time-zone data to tzdata2018g
  - S8213368: JDK 8u201 l10n resource file update
  - S8213792: Update THIRD_PARTY_README for LCMS to 2.9
  - S8213949: OpenJDK 8 CCharToGlyphMapper.m missing the Classpath exception license text
  - S8214357: JDK 8u201 l10n resource file update md20
  - S8215257: OpenJDK 8 mozilla_compat.js, parser.js missing the Classpath exception license text
  - S8215377: JDK-8171049 Breaks JCK signature tests - Era.getDisplayName doesn't work with non-IsoChronology
* Backports
  - S6424123, PR3696: JVM crashes on failed 'strdup' call
  - S8059847, PR3696: complement JDK-8055286 and JDK-8056964 changes
  - S8074859, PR1937: Re-apply warnings as error switch removed by 8034788 in 8u192
  - S8076475, PR3696: Misuses of strncpy/strncat
  - S8145188, PR2945: Re-apply --with-java-debug-symbols option removed by 8034788 in 8u192
  - S8214059, PR3693: Undefined behaviour in ADLC
  - S8217753, PR3685: Enable HotSpot builds on 5.x Linux kernels
* Bug fixes
  - PR3667, PR1983: Backed out changeset 48c15869ecd5
  - PR3667, PR1983: Backed out changeset f0635543beb3
  - PR3667, PR2127: Backed out changeset 0ff7720931e8
  - PR3667, PR2815: Backed out changeset 26e2e029ee25
  - PR3667, PR2899: Backed out changeset 9dc0eca5fa89
  - PR3667, PR2934: Backed out changeset 7513dae3426b
  - PR3667, PR3479, RH1486025: Backed out changeset 5dcb55da00c1
  - PR3675: Update CVE URL
  - PR3683: Addition of 8189170 in 8u192 breaks 8197429 backport
  - PR3691: wget not detected by configure
* SystemTap
  - PR3341: jstack.stp should support ppc64[le,be]
* AArch64 port
  - S8160748, PR3682: [AArch64] Inconsistent types for ideal_reg
  - S8189170, PR3682: [AArch64] Add option to disable stack overflow checking in primordial thread for use with JNI_CreateJavaJVM
  - S8209414, PR3682: [AArch64] method handle invocation does not respect JVMTI interp_only mode
  - S8215951, PR3682: AArch64: jtreg test vmTestbase/nsk/jvmti/PopFrame/popframe005 segfaults
  - S8218185, PR3682: aarch64: missing LoadStore barrier in TemplateTable::putfield_or_static
  - S8219635, PR3682: aarch64: missing LoadStore barrier in TemplateTable::fast_storefield

New in release 3.10.0 (2018-12-25):

* Security fixes
  - S8194534, CVE-2018-3136: Manifest better support
  - S8194546: Choosier FileManagers
  - S8195868: Address Internet Addresses
  - S8195874: Improve jar specification adherence
  - S8196897: Improve PRNG support
  - S8196902, CVE-2018-3139: Better HTTP redirection support
  - S8199177, CVE-2018-3149: Enhance JNDI lookups
  - S8199226, CVE-2018-3169: Improve field accesses
  - S8201756: Improve cipher inputs
  - S8202613, CVE-2018-3180: Improve TLS connections stability
  - S8202936, CVE-2018-3183: Improve script engine support
  - S8203654: Improve cypher state updates
  - S8204497: Better formatting of decimals
  - S8205361, CVE-2018-3214: Better RIFF reading support
  - S8208353, CVE-2018-13785: Upgrade JDK 8u to libpng 1.6.35
  - PR3639, CVE-2018-16435: lcms2: heap-based buffer overflow in SetData function in cmsIT8LoadFromFile
* New features
  - PR3655: Allow use of system crypto policy to be disabled by the user
* Import of OpenJDK 8 u191 build 12
  - S8033251: Use DWARF debug symbols for Linux 32-bit as default
  - S8049834: Two security tools tests do not run with only JRE
  - S8074462: Handshake messages can be strictly ordered
  - S8130132: jarsigner should emit warning if weak algorithms or keysizes are used
  - S8142927: Feed some text to STDIN in ProcessTools.executeProcess()
  - S8146377: test/sun/security/tools/jarsigner/concise_jarsigner.sh failing
  - S8152974: AWT hang occurrs when sequenced events arrive out of sequence
  - S8158887: sun/security/tools/jarsigner/concise_jarsigner.sh timed out
  - S8164480: Crash with assert(handler_address == SharedRuntime::compute_compiled_exc_handler(..) failed: Must be the same
  - S8168628: (fc) SIGBUS when extending file size to map it
  - S8171452: (ch) linux io_util_md: Operation not supported exception after 8168628
  - S8172529: Use PKIXValidator in jarsigner
  - S8180289: jarsigner treats timestamped signed jar invalid after the signer cert expires
  - S8189762: [TESTBUG] Create tests for JDK-8146115 container awareness and resource configuration
  - S8190674: sun/security/tools/jarsigner/TimestampCheck.java failed with java.nio.file.NoSuchFileException: ts2.cert
  - S8193892: Impact of noncloneable MessageDigest implementation
  - S8196663: [TESTBUG] test/compiler/loopopts/TestCMovSplitThruPhi.java fails on 32 bit Java
  - S8197518: Kerberos krb5 authentication: AuthList's put method leads to performance issue
  - S8202478: Backout JDK-8152974
  - S8204667: Resources not freed on exception
  - S8206916: Remove jdk8u181-b31 tag from jdk8u181/corba repo
  - S8206916: Remove jdk8u181-b31 tag from jdk8u181/hotspot repo
  - S8206916: Remove jdk8u181-b31 tag from jdk8u181/jaxp repo
  - S8206916: Remove jdk8u181-b31 tag from jdk8u181/jaxws repo
  - S8206916: Remove jdk8u181-b31 tag from jdk8u181/jdk repo
  - S8206916: Remove jdk8u181-b31 tag from jdk8u181/langtools repo
  - S8206916: Remove jdk8u181-b31 tag from jdk8u181/nashorn repo
  - S8206916: Remove jdk8u181-b31 tag from jdk8u181 repo
  - S8207336: Build failure in JDK8u on Windows after fix 8207260
  - S8208350: Disable all DES cipher suites
  - S8208660: JDK 8u191 l10n resource file update
  - S8208754: The fix for JDK-8194534 needs updates
  - S8210431: Complete backport of libpng 1.6.35 TPRM
  - S8211107: LDAPS communication failure with jdk 1.8.0_181
  - S8211731: Reconsider default option for ClassPathURLCheck change done in JDK-8195874
* Backports
  - PR3646: Backed out changeset 6e3f4784affc (S4890063/PR2304/RH1214835)
  - S8029661, PR3642, RH1477159: Support TLS v1.2 algorithm in SunPKCS11 provider
  - S8131048, PR3574, RH1498936: ppc implement CRC32 intrinsic
  - S8164920, PR3574, RH1498936: ppc: enhancement of CRC32 intrinsic
  - S8172850, PR3643, RH1640127: Anti-dependency on membar causes crash in register allocator due to invalid instruction scheduling
  - S8202261, PR3638: (fc) FileChannel.map and RandomAccessFile.setLength should not preallocate space
  - S8209639, PR3643, RH1640127: assert failure in coalesce.cpp: attempted to spill a non-spillable item
* Bug fixes
  - PR3653: Detect whether -Xprefer:source and -J-Xmx<limit> can be used, rather than assuming
  - PR3673: Alternate HotSpot builds need fix for PR3094
* SystemTap
  - PR3625: arc_priority representation creates an implicit limit on character sequence within regexp
* Shenandoah
  - PR3634: Shenandoah still broken on s390 with aarch64-shenandoah-jdk8u181-b16 (Cast Shenandoah{Min,Max}RegionSize to size_t)
  - [backport] Adaptive CSet selection overshoots max-CSet
  - [backport] Adaptive CSet selection selects excessively when memory is tight
  - [backport] Adaptive/Traversal heuristics rewrite for allocation rate
  - [backport] Added logging for the number of workers used for GC cycles
  - [backport] Add task termination and enhanced task queue state tracking + weakrefs
  - [backport] Allocation path should not touch GC barriers for metadata
  - [backport] Allocation tracker should really report bytes
  - [backport] AlwaysPreTouch fails with non-default ConcGCThreads
  - [backport] Application pacing precision fixes
  - [backport] Apply ShenandoahEvacOOMScope only for evac-taking paths in ShenandoahBarrierSet
  - [backport] Assembler write barriers should consistently check for forwarded objects
  - [backport] Avoid indirection to next-mark-context
  - [backport] Avoid using uintx in ShenandoahHeapRegion
  - [backport] C1 shenandoah_wb expects obj in a register
  - [backport] Check and ensure that Shenandoah-enabled compilations succeed
  - [backport] Check heap stability in C1 WBs
  - [backport] ClassUnloadingWithConcurrentMark should be opt-in with Shenandoah
  - [backport] Clean up obsolete c2 code
  - [backport] Cleanup: remove unused root processor's sub tasks
  - [backport] Cleanup UseShenandoahOWST blocks
  - [backport] CollectedHeap::max_tlab_size is measured in words
  - [backport] Complete liveness for recently allocated regions outside the allocation path
  - [backport] Comprehensible GC trigger logging
  - [backport] Concurrent uncommit should be recorded as GC event
  - [backport] Constify ShHeapRegionSet and ShCollectionSet
  - [backport] Convert magic value to ShenandoahPacingSurcharge
  - [backport] Default to ShenandoahCodeRootsStyle = 2
  - [backport] Degenerated evacuation
  - [backport] Disable UseFastJNIAccessors for Shenandoah
  - [backport] Elastic TLABs support for Shenandoah
  - [backport] Enable ShenandoahEvacReserveOverflow by default
  - [backport] Evac assist should touch marked objects only
  - [backport] Evac reserve: make sure GC has untouchable space to move the objects into
  - [backport] EvilSyncBug test is too slow
  - [backport] Explicit GC should actually uncommit the heap
  - [backport] Exponential backoff with pacing
  - [backport] Fix aarch64 CAS predicates
  - [backport] Fix CAS-obj predicates and add expected-null-versions for cmpxchg-narrow-oop
  - [backport] Fixed SA due to code refactoring and merging
  - [backport] Fix Minimal and Zero builds
  - [backport] Fix ShHeap::notify_alloc usages: it accepts words, not bytes
  - [backport] Fix TestCommonGCLoads test
  - [backport] Fix TestFullGCALot test failure
  - [backport] Fix TestGCThreadGroups test
  - [backport] Forceful SATB buffer flushes should be time-periodic, not traffic-dependent
  - [backport] Full GC always comes with liveness data
  - [backport] Full GC should not always update references
  - [backport] GCLAB slowpath allocations should fit the object into GCLAB
  - [backport] GC trace messages have to be immortal
  - [backport] Handle missing ShenandoahWriteBarrierRB case
  - [backport] Heap region count selection should only consider max heap size
  - [backport] Hook up GCLABs to Elastic LAB support
  - [backport] Improve scheduling and interleaving of SATB processing in mark loop
  - [backport] Including metaspace info when reporting heap info
  - [backport] Incorrect label for static heuristics
  - [backport] Make in-cset checks use signed bytes to match C2 better
  - [backport] Micro-optimize AArch64 assembly write-barriers
  - [backport] Missing Shenandoah entry in GCNameHelper::to_string
  - [backport] More detailed pacing histogram
  - [backport] More verbose profiling for phase 4 in mark-compact
  - [backport] Move heuristics from ShCollectorPolicy to ShHeap
  - [backport] Move (Java)Thread::_gc_state to lower offset to optimize barrier fast-path encoding
  - [backport] Move ParallelCodeIterator to ShenandoahCodeRoots
  - [backport] Move periodic GC decision making to GC heuristics base class
  - [backport] Move Shenandoah stress tests to tier3
  - [backport] Non-cancellable mark loops should have sensible stride
  - [backport] Off-by-one error in degen progress calculation
  - [backport] Only Java and GC worker threads should get GCLABs
  - [backport] Out-of-cycle Degenerated GC should process references and unload classes
  - [backport] Pacer for evacuation should print "Avail" to capture discounting
  - [backport] Pacer should account actual size for elastic TLABs
  - [backport] Parallel +AlwaysPreTouch should run with max workers
  - [backport] Passive heuristics should enter degen GC, not full GC
  - [backport] Perform gc-state checks with LoadB to fit C2 matchers
  - [backport] Pre-filter oops before enqueing them in SBS slowpaths
  - [backport] Print task queue statistics at the end of GC cycle
  - [backport] Process remaining SATB buffers in final mark/traverse loop instead of separate phase
  - [backport] Proper units for allocation failure messages
  - [backport] Prune undefined and unused methods
  - [backport] Purge partial heuristics and connection matrix infrastructure
  - [backport] Purge support for ShenandoahConcurrentEvacCodeRoots and ShenandoahBarriersForConst
  - [backport] Rearrange Shenandoah tests into 3 tiers
  - [backport] Reclaim immediate garbage after mark-compact marking
  - [backport] Recycle the regions only once
  - [backport] Refactor alive-closures to deal better with new marking contexts
  - [backport] Refactor allocation path to accept ShenandoahAllocRequest tuple
  - [backport] Refactor and improve ShenandoahCodeRoots strategies
  - [backport] Refactor FreeSet logging: support evac-reserve, denser printouts
  - [backport] Refactor gc+init logging
  - [backport] Refactoring ShenandoahStrDedupStress test to reduce test time
  - [backport] Refactor to group marking bitmap and TAMS structure in one class ShenandoahMarkingContext
  - [backport] Remove C2 write-barrier from .ad files
  - [backport] Removed racy assertion
  - [backport] Remove NMethodSizeLimit adjustment for Shenandoah
  - [backport] Remove obsolete/unused logging usages
  - [backport] Remove safe_equals()
  - [backport] Remove ShHeuristics::print_threshold
  - [backport] Rename and move ShenandoahPrepareForMarkClosure
  - [backport] Rename "cancel_concgc" to "cancel_gc"
  - [backport] Replace custom asserts with shenandoah_assert_*
  - [backport] Replace risky SBS::need_update_refs_barrier with straightforward check
  - [backport] Replace ShBarrierSet* casts with accessor
  - [backport] Report actual free size in non-verbose FreeSet status
  - [backport] Report heap region stats in proper units
  - [backport] Resettable iterators to avoid dealing with copying/assignment compilation differences
  - [backport] Reshuffle tests: verify STW GC is working first, then verify under aggressive, then the rest
  - [backport] Rework ClassUnloading* flags handling
  - [backport] Rework GC degradation on allocation failure
  - [backport] SATB buffer filtering/compaction hides unmarked objects until final-mark
  - [backport] shenandoah_assert_correct should check object/forwardee klasses
  - [backport] shenandoah_assert_correct should verify classes before claiming _safe_oop
  - [backport] Shenandoah changes to allow enabling -Wreorder
  - [backport] Shenandoah/PPC barrier stubs
  - [backport] Shenandoah string deduplication
  - [backport] SH::make_(tlabs)_parsable() should work correctly with/without TLABs
  - [backport] Shortcut regions that are known not to be alive
  - [backport] Should cleanup previous/bad versions of redefined classes during full gc
  - [backport] Skip RESOLVE in SATBBufferClosure if no forwarded objects are in heap
  - [backport] Soft-refs policy needs reliable heap usage data after the GC cycle
  - [backport] Soft refs should be purged reliably on allocation failure, or with compact heuristics
  - [backport] Some trivial-ish cleanups
  - [backport] Split write barrier paths for mutator and GC workers
  - [backport] StringInternCleanup times out
  - [backport] TestHeapDump runs much faster with small heap
  - [backport] Tests should use -XX:+ShenandoahVerify in some OOM-evac configurations
  - [backport] TLAB sizing policy should converge faster with Shenandoah
  - [backport] Trace and report total allocation latency and sizes
  - [backport] Traversal should resize TLABs
  - [backport] Trivial enhancement to avoid costly deletion array element
  - [backport] Uncommit should relinquish the heap lock regularly
  - [backport] Unreachable assert in ShenandoahCodeRoots::acquire_lock
  - [backport] Verifier should dump raw memory around the problematic oops
  - [backport] Verify global and local gc-state status
  - [backport] VSC++ requires space(s) in between two string literals
  - [backport] WB slowpath should assist with evacuation of adjacent objects
  - [backport] Wiring GC events to JFR + Restore heap occupancy in GC logs after JFR changes
  - [backport] Wiring heap and metaspace info to JFR
  - [backport] Wrap worker id in thread local worker session
  - [backport] -XX:-UseTLAB should disable GCLABs too
  - Cleanup undeclared methods in barrier stubs
  - Disable evac assist by default until bugfixes arrive
  - Fix build failure: signedness mismatch in assert
  - Fix MacOS/Clang build failure
  - Fix x86_32 build
  - JDK8u: Silence compilation warnings on implicit type conversion
  - Move JNI Weak References workaround to Shenandoah-specific root processor
  - Fix code differences against shenandoah/jdk8u
* AArch64 port
  - S8155627, PR3651: Enable SA on AArch64
  - S8207838, PR3666: AArch64: Float registers incorrectly restored in JNI call
  - S8209415, PR3666: Fix JVMTI test failure HS202
  - S8211064, PR3666: [AArch64] Interpreter and c1 don't correctly handle jboolean results in native calls

New in release 3.9.0 (2018-09-27):

* Security fixes
  - S8191239: Improve desktop file usage
  - S8193419: Better Internet address support
  - S8197871, CVE-2018-2938: Support Derby connections
  - S8197925, CVE-2018-2940: Better stack walking
  - S8199547, CVE-2018-2952: Exception to Pattern Syntax
  - S8200666, CVE-2018-2973: Improve LDAP support
  - PR3607, CVE-2018-3639: hw: cpu: speculative store bypass mitigation
* New features
  - PR3623: Allow Shenandoah to be used on all architectures
  - PR3624: Sync desktop files with Fedora/RHEL versions again
  - PR3628: Install symlinks to tapsets in SystemTap directory
* Import of OpenJDK 8 u172 build 11
  - S8031304: Add dcmd to print all loaded dynamic libraries.
  - S8044107: Add Diagnostic Command to list all ClassLoaders
  - S8055755: Information about loaded dynamic libraries is wrong on MacOSX
  - S8059036: Implement Diagnostic Commands for heap and finalizerinfo
  - S8130400: Test java/awt/image/DrawImage/IncorrectClipXorModeSurface2Surface.java fails with ClassCastException
  - S8136356: Add time zone mappings on Windows
  - S8139673: NMT stack traces in output should show mtcomponent
  - S8147542: ClassCastException when repainting after display resolution change
  - S8154017: Shutdown hooks are racing against shutdown sequence, if System.exit()-calling thread is interrupted
  - S8165466: DecimalFormat percentage format can contain unexpected %
  - S8166772: Touch keyboard is not shown for text components on a screen touch
  - S8169424: src/share/sample/scripting/scriptpad/src/scripts/memory.sh missing #!
  - S8170358: [REDO] 8k class metaspace chunks misallocated from 4k chunk Freelist
  - S8170395: Metaspace initialization queries the wrong chunk freelist
  - S8176072: READING attributes are not available on TSF
  - S8177721: Improve diagnostics in sun.management.Agent#startAgent()
  - S8177758: Regression in java.awt.FileDialog
  - S8183504: 8u131 Win 10, issue with wrong position of Sogou IME popup
  - S8184991: NMT detail diff should take memory type into account
  - S8187331: VirtualSpaceList tracks free space on wrong node
  - S8187629: NMT: Memory miscounting in compiler (C2)
  - S8187658: Bigger buffer for GetAdaptersAddresses
  - S8187685: NMT: Tracking compiler memory usage of thread's resource area
  - S8187803: JDK part of JavaFX-Swing dialogs appearing behind main stage
  - S8187985: Broken certificate number in debug output
  - S8188855: Fix VS10 build after "8187658: Bigger buffer for GetAdaptersAddresses"
  - S8189599: InitialBootClassLoaderMetaspaceSize and CompressedClassSpaceSize should be checked consistent from MaxMetaspaceSize
  - S8189646: sun/security/ssl/SSLSocketImpl/SSLSocketCloseHang.java failed with "java.net.SocketTimeoutException: Read timed out"
  - S8190442: Backout changes for JDK-8087291 from 8u-dev as it didn't use main CR id
  - S8190690: Impact on krb5 test cases in the 8u-CPU nightly
  - S8191969: javac produces incorrect RuntimeInvisibleTypeAnnotations length attribute
  - S8192987: keytool should remember real storetype if it is not provided
  - S8193156: Need to backout fixes for JDK-8058547, JDK-8055753, JDK-8085903
  - S8193807: Avoid UnsatisfiedLinkError on AIX by providing empty basic implementations of getSystemCpuLoad and getProcessCpuLoad
* Import of OpenJDK 8 u181 build 13
  - S8038636: speculative traps break when classes are redefined
  - S8051972: sun/security/pkcs11/ec/ReadCertificates.java fails intermittently
  - S8055008: Clean up code that saves the previous versions of redefined classes
  - S8057570: RedefineClasses() tests fail assert(((Metadata*)obj)->is_valid()) failed: obj is valid
  - S8074373: NMT is not enabled if NMT option is specified after class path specifiers
  - S8076117: EndEntityChecker should not process custom extensions after PKIX validation
  - S8156137: SIGSEGV in ReceiverTypeData::clean_weak_klass_links
  - S8157898: SupportedDSAParamGen.java failed with timeout
  - S8169201: Montgomery multiply intrinsic should use correct name
  - S8170035: When determining the ciphersuite lists, there is no debug output for disabled suites.
  - S8176183: sun/security/mscapi/SignedObjectChain.java fails on Windows
  - S8187045: [linux] Not all libraries in the VM are linked with -z,noexecstack
  - S8187635: On Windows Swing changes keyboard layout on a window activation
  - S8188223: IfNode::range_check_trap_proj() should handler dying subgraph with single if proj
  - S8196224: Even better Internet address support
  - S8196491: Newlines in JAXB string values of SOAP-requests are escaped to "&#xa;"
  - S8196854: TestFlushableGZIPOutputStream failing with IndexOutOfBoundsException
  - S8197943: Unable to use JDWP API in JDK 8 to debug JDK 9 VM
  - S8198605: Touch keyboard is shown for a non-focusable text component
  - S8198606: Touch keyboard does not hide, when a text component looses focus
  - S8198794: Hotspot crash on Cassandra 3.11.1 startup with libnuma 2.0.3
  - S8199406: Performance drop with Java JDK 1.8.0_162-b32
  - S8199748: Touch keyboard is not shown, if text component gets focus from other text component
  - S8200359: (tz) Upgrade time-zone data to tzdata2018d
  - S8201433: Fix potential crash in BufImg_SetupICM
  - S8202585: JDK 8u181 l10n resource file update
  - S8202996: Remove debug print statements from RMI fix
  - S8203233: (tz) Upgrade time-zone data to tzdata2018e
  - S8203368: ObjectInputStream filterCheck method throws NullPointerException
  - S8204874: Update THIRDPARTYREADME file
  - S8205491: adjust reflective access checks
* Backports
  - S8008321, PR3599: compile.cpp verify_graph_edges uses bool as int
  - S8064786, PR3601: Fix debug build after 8062808: Turn on the -Wreturn-type warning
  - S8075942, PR3602, RH1582032: ArrayIndexOutOfBoundsException in sun.java2d.pisces.Dasher.goTo
  - S8146115, PR3508, RH1463098: Improve docker container detection and resource configuration usage
  - S8203182, PR3603: Release session if initialization of SunPKCS11 Signature fails
  - S8206406, PR3610, RH1597825: StubCodeDesc constructor publishes partially-constructed objects on StubCodeDesc::_list
  - S8207057, PR3613: No debug info for assembler files
* Bug fixes
  - PR3597: Potential bogus -Wformat-overflow warning with -Wformat enabled
  - PR3600: jni_util.c does not import header file which declares getLastErrorString
  - PR3601: Fix additional -Wreturn-type issues introduced by 8061651
  - PR3630: Use ${datadir} when specifying default tz.properties location
  - PR3632: IcedTea installing symlinks to SystemTap directory rather than individual tapsets
* AArch64 port
  - S8207345, PR3626: Trampoline generation code reads from uninitialized memory
* Shenandoah
  - PR3619: Shenandoah broken on s390
  - PR3620: Shenandoah broken on ppc64
  - Allocation failure injection machinery
  - [backport] AArch64 shenandoah_store_check should read evacuation_in_progress as byte
  - [backport] Account trashed regions from coalesced CM-with-UR
  - [backport] Adaptive collection set selection in adaptive policy
  - [backport] Adaptive heuristics accounts trashed cset twice
  - [backport] Adapt upstream object pinning API
  - [backport] Add comments in shenandoah_store_check on direct heap field use
  - [backport] Added diagnostic flag ShenandoahOOMDuringEvacALot
  - [backport] Added missing header file for non-PCH build
  - [backport] Add missing barrier in C1 NIOCheckIndex intrinsic
  - [backport] Add new pinned/cset region state for evac-failure-path
  - [backport] Add ShenandoahRootProcessor API to report threads while scanning roots
  - [backport] Add test to verify Shenandoah is not enabled by default, and enabled with the flag
  - [backport] Add -XX:+ShenandoahVerify to more interesting tests
  - [backport] AESCrypt.implEncryptBlock/AESCrypt.implDecryptBlock intrinsics assume non null inputs
  - [backport] Allow use of fp spills around write barrier
  - [backport] Arraycopy fixes (tests and infrastructure)
  - [backport] Assert Shenandoah-specific safepoints instead of generic ones
  - [backport] Asynchronous region recycling
  - [backport] Avoid notifying about zero waste
  - [backport] barrier moved due to null checks needs to always fix memory edges
  - [backport] Basic support for x86_32: build and run in STW configuration
  - [backport] Bitmap based ShHeapRegionSet
  - [backport] Break heuristics out from ShCollectorPolicy into their own source files
  - [backport] C2 should use heapword-sized object math
  - [backport] Check BS type in immByteMapBase predicate
  - [backport] Cleanup allocation tracking in heuristics
  - [backport] Cleanup and refactor Full GC code
  - [backport] Cleanup and strengthen BrooksPointer verification
  - [backport] Clean up dead code
  - [backport] Cleanup: removed unused code
  - [backport] Cleanup reset_{next|complete}_mark_bitmap
  - [backport] Cleanup SHH::should_start_normal_gc
  - [backport] "Compact" heuristics for dense footprint scenarios
  - [backport] Compact heuristics should not shortcut on immediate garbage, but aggressively compact
  - [backport] Conditionalize PerfDataMemorySize on enabled heap sampling
  - [backport] Consistent liveness for humongous regions
  - [backport] Control loop should wait before starting another GC cycle
  - [backport] Critical native tests should only be ran on x86_64 platforms
  - [backport] Degenerated GC
  - [backport] Degenerated GC: rename enum, report degen reasons in stats
  - [backport] Demote ShenandoahAllocImplicitLive to diagnostic
  - [backport] Demote warning message about OOM-during-evac to informational
  - [backport] Denser ShHeapRegion status line
  - [backport] Disable verification from non-Shenandoah VMOps.
  - [backport] Disallow pinned_cset region moves and allocations during Full GC
  - [backport] Disambiguate "upgrade to Full GC" GCause
  - [backport] Do not add non-allocatable regions to the freeset
  - [backport] Don't treat allocation regions implicitely live during some GCs
  - [backport] Double check for UseShenandoahGC in WB expand
  - [backport] Drop distinction between immediate garbage and free in heuristics
  - [backport] Dynamic worker refactoring
  - [backport] Eagerly drop CSet state from regions during Full GC
  - [backport] Eliminate write-barrier assembly stub (part 1)
  - [backport] Enable biased locking for Shenandoah by default
  - [backport] Ensure tasks use correct number of workers
  - [backport] Excessive assert in ShHeap::mark_next
  - [backport] Excessive asserts in marked_object_iterate
  - [backport] FinalEvac pause to turn off evacuation
  - [backport] Fix || and && chaining warnings in memnode.cpp
  - [backport] Fix broken asserts in ShenandoahSharedEnumFlag
  - [backport] Fixed code roots scanning that might be bypassed during degenerated cycle
  - [backport] Fixed compilation error of libTestHeapDump.c on Windows with VS2010
  - [backport] Fixed missing ResourceMark in ShenandoahAsserts::print_obj
  - [backport] Fixed pinned region handling in mark-compact
  - [backport] Fix (external) heap iteration + TestHeapDump should unlock aggressive heuristics
  - [backport] fix for alias analysis with ShenandoahBarriersForConst
  - [backport] Fix/improve CLD processing
  - [backport] Fixing Windows and ARM32 build
  - [backport] Fix Mac OS build warnings
  - [backport] Fix Minimal VM build
  - [backport] Fix ShFreeSet boundary case
  - [backport] fix TCK crash with shenandoah
  - [backport] Forcefully update counters when GC cycle is running
  - [backport] FreeSet and HeapRegion should have the reference to ShenandoahHeap
  - [backport] FreeSet refactor: bitmaps, cursors, biasing
  - [backport] FreeSet should accept responsibility over trashed regions
  - [backport] FreeSet should report its internal state before/after GC cycle
  - [backport] Full GC should compact humongous regions
  - [backport] Full GC should not trash empty regions
  - [backport] GC state testers (infra)
  - [backport] Generic verification is possible only at Shenandoah safepoints
  - [backport] Get easy on template instantiations in ShConcMark
  - [backport] Heap region sampling should publish region states
  - [backport] Humongous regions should support explicit pinning
  - [backport] Immediate garbage ratio should not go over 100%
  - [backport] Implement flag to generate write-barriers without membars
  - [backport] Implement protocol for safe OOM during evacuation handling + Use jint in oom-evac-handler to match older JDKs Atomic support better + Missing OOMScope in ShenandoahFixRootsTask
  - [backport] Improve assertion/verification messages a bit
  - [backport] Improve/more detailed timing stats for root queue work
  - [backport] Incorrect constant folding with final field and -ShenandoahOptimizeFinals
  - [backport] Increase test timeouts
  - [backport] Introduce assert_in_correct_region to verify object is in correct region
  - [backport] Isolate shenandoahVerifier from stray headers
  - [backport] keep read barriers for final instance/stable field accesses
  - [backport] Keep track of per-cycle mutator/collector allocs. Fix mutator/collector alloc region overlap in traversal.
  - [backport] Little cleanup
  - [backport] Log message on ref processing, class unload, update refs for mark events
  - [backport] LotsOfCycles test timeouts
  - [backport] Make concurrent precleaning log message optional again
  - [backport] Make control loop more responsive under allocation pressure
  - [backport] Make degenerated update-refs use region-set cursor to hand over work
  - [backport] Make heap counters update completely asynchronous
  - [backport] Make major GC phases exclusive from each other
  - [backport] Make sure selective barriers enabling/disabling works
  - [backport] Make sure -XX:+ShenandoahVerify comes first in the tests
  - [backport] Mark bitmap slices commit/uncommit + Aggregated bitmap slicing
  - [backport] Match barrier fastpath checks better
  - [backport] Minor cleanups
  - [backport] Minor cleanup, uses latest Atomic API
  - [backport] Move barriers into typeArrayOop.hpp direct memory accessors
  - [backport] Move ShHeap::used increment out of locked allocation path
  - [backport] No need for fence in control loop: flags are now ShSharedVariables
  - [backport] Only report GC pause time to GC MXBean + Re-fix memory managers and memory pools usage and pause reporting
  - [backport] Optimize fwdptr region handling in ShenandoahVerifyOopClosure::verify_oop
  - [backport] Optimize oop/fwdptr/hr_index verification a bit
  - [backport] overflow integer during size calculation
  - [backport] Pacer should account allocation waste and unsuccessful pacing in the budget
  - [backport] Pacer should poll FreeSet to figure out actually available space
  - [backport] Passive should opt-in the barriers, not opt-out
  - [backport] Pauses that do not affect heap occupancy should not report heap
  - [backport] Print message when heuristics changes the setting ergonomically
  - [backport] Protect C2 matchers with UseShenandoahGC
  - [backport] Provide non-taxable allocation slack at the beginning of the cycle
  - [backport] Record cycle start/end to avoid continuous periodic GC
  - [backport] Record Shenandoah events in hs_err events section
  - [backport] Refactor allocation failure and explicit GC handling
  - [backport] Refactor allocation metadata handling
  - [backport] Refactor FreeSet rebuilding into the single source
  - [backport] Refactoring GC phase and heap allocation tracking out of policy
  - [backport] Refactor uncommit handling: react on explicit GCs, feature kill flag, etc
  - [backport] Refactor worker timings into ShenandoahPhaseTimings
  - [backport] ReferenceProcessor is_alive setup is racy
  - [backport] Region sampling should lock while gathering region data
  - [backport] Rehash VMOperations and cycle driver mechanics for consistency
  - [backport] Relax assert in SBS::is_safe()
  - [backport] Remove BS:is_safe in favor of logged BS::verify_safe_oop
  - [backport] Remove CSetThreshold handling from heuristics
  - [backport] Remove FreeSet::add_region, inline into FreeSet::rebuild
  - [backport] Remove obsolete check in FreeSet::allocate
  - [backport] Remove ShenandoahGCWorkerPerJavaThread flag
  - [backport] Remove ShenandoahMarkCompactBarrierSet
  - [backport] Rename and cleanup _regions and _free_set uses
  - [backport] Rename dynamic heuristics to static
  - [backport] Rename *_oop_static/oop_ref to *_forwarded
  - [backport] Rename ShenandoahConcurrentThread to ShenandoahControlThread
  - [backport] Report all GC status flags in hs_err
  - [backport] Report fwdptr size in JNI GetObjectSize
  - [backport] Report how much we have failed to allocate during Allocation Failure
  - [backport] Report illegal transitions verbosely, and remove some no-op transitions
  - [backport] Rewire control loop to avoid double cleanup work
  - [backport] Rework shared bool/enum flags with proper types and synchronization
  - [backport] Rewrite and fix ShenandoahHeap::marked_object_iterate
  - [backport] Rich assertion failure logging
  - [backport] Roots verification should take the special roots first
  - [backport] RP closures should accept NULL referents
  - [backport] Set ShenandoahMinFreeThreshold default to 10%
  - [backport] Setup process references and class unloading once before the cycle
  - [backport] ShConcurrentThread races with set_gc_state_bit
  - [backport] Shenandoah critical native support
  - [backport] Shenandoah region/set iterators should not allow copying
  - [backport] Shenandoah SA implementation
  - [backport] Shenandoah/SPARC barrier stubs
  - [backport] ShenandoahVerifyOptoBarriers should not fail with disabled barriers
  - [backport] ShenandoahWriteBarrierNode::find_bottom_mem() fix
  - [backport] ShenandoahWriteBarrierRB flag to conditionally disable RB on WB fastpath
  - [backport] Shenandoah/Zero barrier stubs
  - [backport] SieveObjects test is too hostile to verification
  - [backport] Single GCTimer shared by all operations
  - [backport] Single thread-local GC state flag for all barriers
  - [backport] Some smallish ShHeapRegionSet changes
  - [backport] Speed up asserts and verification, improve fastdebug builds performance
  - [backport] Split live data management for allocations and GCs
  - [backport] Static heuristics should be really static and report decisions
  - [backport] Static heuristics should use non-zero allocation threshold
  - [backport] Store checks should run most of the time
  - [backport] Tax-and-Spend allocation pacing
  - [backport] Testbug: VerifyJCStressTest leaks memory
  - [backport] TestSelectiveBarrierFlags should accept multi-element flag selections
  - [backport] TestSelectiveBarrierFlags times out due to too aggressive compilation mode
  - [backport] Trim/expand test heap sizes to fit small heaps
  - [backport] Trim the TLAB sizes to avoid wasteful retirement under TLAB races
  - [backport] Use leftmost region in GC allocations
  - [backport] Use os::naked_short_sleep instead of naked Thread events for sleeping
  - [backport] Use/sort (cached) RegionData not ShenandoahHeapRegionSet (infrastructure)
  - [backport] UX: Cleanup (adaptive) CSet selection message
  - [backport] UX: Pacer reports incorrect free size
  - [backport] UX: Shorter gc+ergo messages from CSet selection
  - [backport] Verifier crashes when reporting multiple forwardings
  - [backport] Verifier should check klass pointers before attempting to reach for object size
  - [backport] Verifier should print verification label at liveness verification
  - [backport] Verify fwdptr accesses during Full GC moves
  - [backport] Verify regions status
  - [backport] When Shenandoah WB is moved out of loop, connect it to correct loop memory Phi (back out and revisit previous fix)
  - [backport] Wipe out ShenandoahStoreCheck implementation
  - [backport] Workaround C1 ConstantOopWriteValue bug
  - Bitmap size might not be page aligned when large page is used
  - Changed claim count to jint
  - Cherry-pick JDK-8173013: JVMTI tagged object access needs G1 pre-barrier
  - Defer cleaning of system dictionary and friends to parallel cleaning phase
  - Do not put down update-refs-in-progress flag concurrently
  - Fix AArch64 build failure: misplaced #endif
  - Fixed Shenandoah 8u build
  - Fixed Windows build
  - Fix non-PCH build
  - Fix non-PCH x86_32 build
  - Fix up SPARC and Zero headers for proper locations
  - missing barriers in String intrinsics with -ShenandoahOptimizeInstanceFinals -ShenandoahOptimizeStableFinals
  - Missing event log for canceled GC
  - StringInternCleanup times out
  - VerifyJCStressTest should test all heuristics
  - Workaround VM crash with JNI Weak Refs handling

New in release 3.8.0 (2018-05-29):

* Security fixes
  - S8180881: Better packaging of deserialization
  - S8182362: Update CipherOutputStream Usage
  - S8183032: Upgrade to LittleCMS 2.9
  - S8189123: More consistent classloading
  - S8189969, CVE-2018-2790: Manifest better manifest entries
  - S8189977, CVE-2018-2795: Improve permission portability
  - S8189981, CVE-2018-2796: Improve queuing portability
  - S8189985, CVE-2018-2797: Improve tabular data portability
  - S8189989, CVE-2018-2798: Improve container portability
  - S8189993, CVE-2018-2799: Improve document portability
  - S8189997, CVE-2018-2794: Enhance keystore mechanisms
  - S8190478: Improved interface method selection
  - S8190877: Better handling of abstract classes
  - S8191696: Better mouse positioning
  - S8192025, CVE-2018-2814: Less referential references
  - S8192030: Better MTSchema support
  - S8192757, CVE-2018-2815: Improve stub classes implementation
  - S8193409: Improve AES supporting classes
  - S8193414: Improvements in MethodType lookups
  - S8193833, CVE-2018-2800: Better RMI connection support
* New features
  - PR3493: Run AES test to test intrinsics
* Import of OpenJDK 8 u162 build 12
  - S4354680: Runtime.runFinalization() silently clears interrupted flag in the calling thread
  - S6618335: ThreadReference.stop(null) throws NPE instead of InvalidTypeException
  - S6651256: jstack: DeleteGlobalRef method call doesn't lead to descreasing of global refs count shown by jstack
  - S6656031: SA: jmap -permstat number of classes is off by 1
  - S6977426: sun/tools tests can intermittently fail to find app's Java pid
  - S6988950: JDWP exit error JVMTI_ERROR_WRONG_PHASE(112)
  - S7124271: [macosx] RealSync test failure
  - S7162125: [macosx] A font has different behaviour for ligatures depending on its creation mod
  - S8023667: SA: ExceptionBlob and other C2 classes not available in client VM
  - S8031661: java/net/Authenticator/B4769350.java failed intermittently
  - S8046778: Better error messages when starting JMX agent via attach or jcmd
  - S8066185: VM crashed with SIGSEGV VirtualMemoryTracker::add_reserved_region
  - S8072428: Enable UseLoopCounter ergonomically if on-stack-replacement is enabled
  - S8073670: TypeF::eq and TypeD::eq do not handle NaNs correctly
  - S8074812: More specific error message when the .java_pid well-known file is not secure
  - S8078269: JTabbedPane UI Property TabbedPane.tabAreaBackground no longer works
  - S8080504: [macosx] SunToolkit.realSync() may hang
  - S8087291: InitialBootClassLoaderMetaspaceSize and CompressedClassSpaceSize should be checked consistent from MaxMetaspaceSize
  - S8132374: AIX: fix value of os.version property
  - S8134103: JVMTI_ERROR_WRONG_PHASE(112): on checking for an interface
  - S8139218: Dialog that opens and closes quickly changes focus in original focusowner
  - S8147002: [macosx] Arabic character cannot be rendered on MacOS X
  - S8148786: xml.tranform fails on x86-64
  - S8155197: Focus transition issue
  - S8157896: TestDSAGenParameterSpec.java test fails with timeout
  - S8158633: BASE64 encoded cert not correctly parsed with UTF-16
  - S8159432: [PIT][macosx] StackOverflow in closed/java/awt/Dialog/DialogDeadlock/DialogDeadlockTest
  - S8162530: src/jdk.management/share/native/libmanagement_ext/GcInfoBuilder.c doesn't handle JNI exceptions properly
  - S8164954: split_if creates empty phi and region nodes
  - S8166742: SIGFPE in C2 Loop IV elimination
  - S8169961: Memory leak after debugging session
  - S8172751: OSR compilation at unreachable bci causes C1 crash
  - S8175340: Possible invalid memory accesses due to ciMethodData::bci_to_data() returning NULL
  - S8177026: jvm.dll file version not updated since 8u72
  - S8177414: Missing key events on Mac Os
  - S8177958: Possible uninitialized char* in vm_version_solaris_sparc.cpp
  - S8178047: Aliasing problem with raw memory accesses
  - S8179086: java.time.temporal.ValueRange has poor hashCode()
  - S8180370: Characters are skipped on input of Korean text on OS X
  - S8180855: Null pointer dereference in OopMapSet::all_do of oopMap.cpp:394
  - S8181659: Create an alternative fix for JDK-8167102, whose fix was backed out
  - S8181786: Extra runLater causes impossible states to be possible using javafx.embed.singleThread=true
  - S8182402: Tooltip for Desktop button is in English when non-English locale is set
  - S8182996: Incorrect mapping Long type to JavaScript equivalent
  - S8184009: Missing null pointer check in InterpreterRuntime::update_mdp_for_ret()
  - S8184271: Time related C1 intrinsics produce inconsistent results when floating around
  - S8184328: JDK 8u131 socketRead0 hang at SSL read
  - S8184893: jdk8u152 b06 : issues with nashorn when running kraken benchmarks
  - S8185346: Relax RMI Registry Serial Filter to allow arrays of any type
  - S8187023: Cannot read pkcs11 config file in UTF-16 environment
  - S8189918: Remove Trailing whitespace from file while syncing 8u into 8u162-b03
  - S8190280: [macos] Font2DTest demo started failing for Arabic range from JDK 8 u162 b01 on Mac
  - S8190542: 8u162 L10n resource file update
  - S8192794: 8u162 L10n resource file update md20
* Import of OpenJDK 8 u171 build 11
  - S8054213: Class name repeated in output of Type.toString()
  - S8068778: [TESTBUG] CompressedClassSpaceSizeInJmapHeap.java fails if SA not available
  - S8150530: Improve javax.crypto.BadPaddingException messages
  - S8153955: increase java.util.logging.FileHandler MAX_LOCKS limit
  - S8169080: Improve documentation examples for crypto applications
  - S8175075: Add 3DES to the default disabled algorithm security property
  - S8179665: [Windows] java.awt.IllegalComponentStateException: component must be showing on the screen to determine its location
  - S8186032: Disable XML Signatures signed with EC keys less than 224 bits
  - S8186441: Change of behavior in the getMessage () method of the SOAPMessageContextImpl class
  - S8187496: Possible memory leak in java.apple.security.KeychainStore.addItemToKeychain
  - S8189851: [TESTBUG] runtime/RedefineTests/RedefineInterfaceCall.java fails
  - S8191358: Restore TSA certificate expiration check
  - S8191909: Nightly failures in nashorn suite
  - S8192789: Avoid using AtomicReference in sun.security.provider.PolicyFile
  - S8194259: keytool error: java.io.IOException: Invalid secret key format
  - S8196952: Bad primeCertainty value setting in DSAParameterGenerator
  - S8197030: Perf regression on all platforms with 8u171-b03 - early lambda use
  - S8198494: 8u171 and 8u172 - Build failure on non-SE Linux Platforms
  - S8198662: Incompatible internal API change in JDK8u161: signature of method exportObject()
  - S8198963: Fix new rmi property name
  - S8199001: [TESTBUG] RMIConnectionFilterTest.java test fails in compilation
  - S8199141: Windows: new warning messaging for JRE installer UI in non-MOS cases
  - S8200314: JDK 8u171 l10n resource file update - msg drop 40
* Backports
  - S8062808, PR3548: Turn on the -Wreturn-type warning
  - S8141570, PR3548: Fix Zero interpreter build for --disable-precompiled-headers
  - S8143245, PR3548: Zero build requires disabled warnings
  - S8165489, PR3589: Missing G1 barrier in Unsafe_GetObjectVolatile
  - S8171000, PR3542, RH1402819: Robot.createScreenCapture() crashes in wayland mode
  - S8184309, PR3596: Build warnings from GCC 7.1 on Fedora 26
  - S8185723, PR3553: Zero: segfaults on Power PC 32-bit
  - S8186461, PR3557: Zero's atomic_copy64() should use SPE instructions on linux-powerpcspe
  - S8187577, PR3578: JVM crash during gc doing concurrent marking
  - S8197429, PR3546, RH1536622: Increased stack guard causes segfaults on x86-32
  - S8197546, PR3542: Fix for 8171000 breaks Solaris + Linux builds
  - S8197981, PR3548: Missing return statement in __sync_val_compare_and_swap_8
  - S8200556, PR3566: AArch64: assertion failure in slowdebug builds
  - S8201509, PR3579: Zero: S390 31bit atomic_copy64 inline assembler is wrong
* Bug fixes
  - S8199936, PR3533: HotSpot generates code with unaligned stack, crashes on SSE operations
  - S8199936, PR3591: Fix for bug 3533 doesn't add -mstackrealign to JDK code
  - PR3539, RH1548475: Pass EXTRA_LDFLAGS to HotSpot build
  - PR3549: Desktop file doesn't reference versioned icon
  - PR3550: Additional category used in jconsole.desktop.in is incorrect
  - S8211387, PR3559: Use ldrexd for atomic reads on ARMv7.
  - PR3575, RH1567204: System cacerts database handling should not affect jssecacerts
  - PR3592: Skip AES test on AArch64 due to VM crash
  - PR3593: s390 needs to use '%z' format specifier for size_t arguments as size_t != int
  - PR3594: Patch for bug 3593 breaks Shenandoah build
  - PR3597: Potential bogus -Wformat-overflow warning with -Wformat enabled
* Shenandoah
  - PR3573: Fix TCK crash with Shenandoah
  - Remove oop cast in oopMap.cpp again, as oopDesc::operator== has additional checking in Shenandoah.
  - Fix new code for Shenandoah after the 8u171 merge
  - Revert accidental OpSpinWait matching
  - UseBiasedLocking should be disabled only for Shenandoah
* AArch32 port
  - PR3548: Add missing return values for AArch32 port

New in release 3.7.0 (2018-02-28):

* Security fixes
  - S8160104: CORBA communication improvements
  - S8172525, CVE-2018-2579: Improve key keying case
  - S8174756: Extra validation for public keys
  - S8174962, CVE-2018-2582: Better interface invocations
  - S8175932: Improve host instance supports
  - S8176458: Revise default document styling
  - S8178449, CVE-2018-2588: Improve LDAP logins
  - S8178458: Better use of certificates in LDAP
  - S8178466: Better RSA parameters
  - S8179536: Cleaner print job handling
  - S8179990: Cleaner palette entry handling
  - S8180011: Cleaner native graphics device handling
  - S8180015: Cleaner AWT robot handling
  - S8180020: Improve SymbolHashMap entry handling
  - S8180433: Cleaner CLR invocation handling
  - S8180877: More deeply colored ICC spaces
  - S8181664: Improve JVM UTF String handling
  - S8181670: Improve implementation of keystores
  - S8182125, CVE-2018-2599: Improve reliability of DNS lookups
  - S8182387, CVE-2018-2603: Improve PKCS usage
  - S8182601, CVE-2018-2602: Improve usage messages
  - S8185292, CVE-2018-2618: Stricter key generation
  - S8185325, CVE-2018-2641: Improve GTK initialization
  - S8186080: Transform XML interfaces
  - S8186212, CVE-2018-2629: Improve GSS handling
  - S8186600, CVE-2018-2634: Improve property negotiations
  - S8186606, CVE-2018-2633: Improve LDAP lookup robustness
  - S8186699: Clean up extra Derby files
  - S8186867: Improve native glyph layouts
  - S8186998, CVE-2018-2637: Improve JMX supportive features
  - S8189284, CVE-2018-2663: More refactoring for deserialization cases
  - S8190289, CVE-2018-2677: More refactoring for client deserialization cases
  - S8191142, CVE-2018-2678: More refactoring for naming deserialization cases
* Import of OpenJDK 8 u152 build 16
  - S4953367: MAWT: Java should be more careful manipulating NLSPATH, XFILESEARCHPATH env variables
  - S6772009: java/util/concurrent/locks/ReentrantLock/CancelledLockLoops.java test failed with 'Completed != 2'
  - S6947916: JarURLConnection does not handle useCaches correctly
  - S6980209: Make tracking SecondaryLoop.enter/exit methods easier
  - S7052625: com/sun/net/httpserver/bugs/6725892/Test.java fails intermittently
  - S7102702: java/net/PortUnreachableException/OneExceptionOnly.java failing
  - S7131356: (props) "No Java runtime present, requesting install" when creating VM from JNI [macosx]
  - S7172652: With JDK 1.7 text field does not obtain focus when using mnemonic Alt/Key combin
  - S8022291: Mac OS: Unexpected JavaLaunchHelper message displaying
  - S8022580: sun.net.ftp.impl.FtpClient.nameList(String path) handles "null" incorrectly
  - S8025306: Inet[4|6]Address class and fieldID initialization in networking native code
  - S8028363: XmlGregorianCalendarImpl.getTimeZone() bug when offset is less than 10 minutes
  - S8028725: [Parfait] warnings from b116 for jdk.src.solaris.native.java.net: JNI pending exceptions
  - S8028769: Check src/share/native/java/lang/*.c for cases when JNI calls are used with pending warnings
  - S8029018: (bf) Check src/share/native/java/nio/Bits.c for JNI pending exceptions
  - S8030116: (process) Check Parfait warnings in src/solaris/native/java/lang/*
  - S8031586: Check jdk/src/*/native/com/sun/security/auth/module for pending JNI exceptions
  - S8033371: jdk/src/solaris/native/java/lang/ProcessEnvironment.c environ doesn't check for JNI pending exceptions
  - S8033372: Check jdk/src/share/native/java/lang for JNI pending exception issues
  - S8034102: Check solaris/native/sun/nio/fs/MacOSXNativeDispatcher.c for JNI pending exceptions
  - S8034249: need more workarounds for suspend equivalent condition issue
  - S8035158: Remove dependency on sun.misc.RegexpPool and friends
  - S8035568: [macosx] Cursor management unification
  - S8035653: InetAddress.getLocalHost crash
  - S8037346: Need to terminate server process if client runs into problems
  - S8037909: JNI warnings in jdk/src/windows/native/java/nio/MappedByteBuffer.c
  - S8038075: JNI warnings in jdk/src/share/native/sun/misc/VMSupport.c
  - S8038348: Instance field load is replaced by wrong data Phi
  - S8039412: Stack overflow on Linux using DialogTypeSelection.NATIVE
  - S8040322: TextArea.replaceRange() and insert() are broken with setText(null)
  - S8040635: [macosx] Printing a shape filled with a texture doesn't work under Mac OS X
  - S8043913: remove legacy code in SPARC's VM_Version::platform_features
  - S8046768: com/sun/jndi/ldap/LdapTimeoutTest.java fails intermittently
  - S8046893: JNI exception pending in jdk/src/solaris/native/java/net: ExtendedOptionsImpl.c, PlainDatagramSocketImpl.c
  - S8046901: Check jdk/src/solaris/native/sun/nio for Parfait flagged uninitialized memory
  - S8049717: expose L1_data_cache_line_size for diagnostic/sanity checks
  - S8050478: [macosx] Cursor not updating correctly after closing a modal dialog
  - S8054214: JapaneseEra.getDisplayName doesn't return names if it's an additional era
  - S8055204: Memory leak in jdk/src/windows/native/java/lang/java_props_md.c
  - S8058316: lookupDefaultPrintService returns null on Solaris 11
  - S8061258: [macosx] PrinterJob's native Print Dialog does not reflect specified Copies or Page Ranges
  - S8064470: JNI exception pending in jdk/src/java/base/unix/native/libjava/FileDescriptor_md.c
  - S8066250: compiler/dependencies/MonomorphicObjectCall/TestMonomorphicObjectCall.java fails product
  - S8067059: PrinterJob.pageDialog() with DialogSelectionType.NATIVE returns a PageFormat when cancelled.
  - S8071424: JCK test api/java_net/Socket/descriptions.html#Bind crashes on Windows
  - S8075516: Deleting a file from either the open or save java.awt.FileDialog hangs.
  - S8076249: NPE in AccessBridge while editing JList model
  - S8076554: [macosx] Custom Swing text components need to allow standard accessibility
  - S8080486: JNI exception pending in jdk/src/java.base/windows/native/libnet/DualStackPlainSocketImpl.c
  - S8081219: hs_err improvement: Add event logging for class redefinition to the hs_err file
  - S8087144: sun/security/krb5/auto/MaxRetries.java fails with Retry count is -1 less
  - S8087342: Crash in klassItable::initialize_itable_for_interface
  - S8089573: [macosx] Incorrect char to glyph mapping printing on OSX 10.10
  - S8129361: ISO 4217 amendment 160
  - S8130041: TsacertOptionTest.java intermittently fails on Mac
  - S8132209: DiagnosticCommandImpl.getNotificationInfo() may expose internal representation
  - S8132455: com/sun/jndi/ldap/LdapTimeoutTest.java fails at handleNamingException
  - S8134119: Use new API to get cache line sizes
  - S8134389: Crash in HotSpot with jvm.dll+0x42b48 ciObjectFactory::create_new_metadata
  - S8134918: C2: Type speculation produces mismatched unsafe accesses
  - S8135124: com/sun/jndi/ldap/LdapTimeoutTest.java failed intermittently
  - S8136570: Stop changing user environment variables related to /usr/dt
  - S8139189: VK_OEM_102 dead key detected as VK_UNDEFINED
  - S8140309: [REDO] failed: no mismatched stores, except on raw memory: StoreB StoreI
  - S8140525: AwtFrame::WmShowWindow() may steal focus
  - S8141370: com/sun/jndi/ldap/LdapTimeoutTest.java failed intermittently
  - S8143897: Weblogic12medrec assert(handler_address == SharedRuntime::compute_compiled_exc_handler(nm, pc, exception, force_unwind, true)) failed: Must be the same
  - S8145207: [macosx] JList, VO can't access non-visible list items
  - S8145732: Duplicate entry in http.nonProxyHosts will ignore subsequent entries
  - S8145952: ISO 4217 amendment 161
  - S8145981: (fs) LinuxWatchService can reports events against wrong directory
  - S8146961: Fix PermGen memory leaks caused by static final Exceptions
  - S8147772: Update KerberosTicket to describe behavior if it has been destroyed and fix NullPointerExceptions
  - S8149521: automatic discovery of LDAP servers with Kerberos authentication
  - S8149714: [parfait] char array lengths don't match in awt_Font.cpp:1701
  - S8152000: Java FlightRecorder does not run on Java 8 compact 3 profile since u65
  - S8152172: PPC64: Support AES intrinsics
  - S8152730: File Leak in CompileBroker::init_compiler_thread_log of compileBroker.cpp:1665.
  - S8152981: Double icons with JMenuItem setHorizontalTextPosition on Win 10
  - S8153134: Infinite loop in handle_wrong_method in jmod
  - S8153176: ParOldGC: Use correct TaskQueueSet for ParallelTaskTerminator in marking.
  - S8153267: nmethod's exception cache not multi-thread safe
  - S8153925: (fs) WatchService hangs on GetOverlappedResult and locks directory (win)
  - S8154945: Enable 8130150 and 8081778 intrinsics by default
  - S8155691: Update GIFlib library to the latest up-to-date
  - S8155781: C2: opaque unsafe access triggers an assert
  - S8156116: [macosx] two JNI locals to delete in AWTWindow.m, CGraphicsEnv.m
  - S8156723: JVM crash at sun.java2d.windows.GDIBlitLoops.nativeBlit
  - S8157035: Use stronger algorithms and keys for JSSE testing
  - S8157181: Compilers accept modification of final fields outside initializer methods
  - S8157184: java/lang/invoke/LFCaching/LFMultiThreadCachingTest.java failed with a fatal error
  - S8157548: JVM crashes sometimes while starting
  - S8157665: ProblemList.txt needs to be updated as 7041639 closed
  - S8158325: [macosx] Memory leak in com.apple.laf.ScreenMenu
  - S8158356: SIGSEGV when attempting to rotate BufferedImage using AffineTransform by NaN degrees
  - S8158639: C2 compilation fails with SIGSEGV
  - S8159035: CTSMode.java test crashed due to unhandled case of cipher length value as 0
  - S8159696: java.beans.MethodRef#get throws NullPointerException
  - S8160024: jdb returns invalid argument count if first parameter to Arrays.asList is null
  - S8160119: Utils.tryFindJvmPid sometimes find incorrect pid
  - S8160174: java.net.NetworkInterface - fixes and improvements for network interface listing
  - S8160370: System.getProperty("os.version") returns "Unknown" on Mac
  - S8160551: assert(c == Bytecodes::_putfield) failed: must be putfield
  - S8160570: [macosx] modal dialog can skip the activation/focus events
  - S8160623: [PIT] Exception running java/awt/event/KeyEvent/KeyChar/KeyCharTest.java
  - S8160664: JVM crashed with font manager on Solaris 12
  - S8160696: IllegalArgumentException: adding a component to a container on a different GraphicsDevice
  - S8160893: [macosx] JMenuItems in JPopupMenu are not accessible
  - S8160913: [TEST_BUG] javax/management/security/SecurityTest.java fails due to missing keyStore file
  - S8160941: "text/uri-list" dataflavor concats the first two strings
  - S8161039: System.getProperty("os.version") returns incorrect version number on Mac
  - S8161664: Memory leak in com.apple.laf.AquaProgressBarUI removed progress bar still referenced
  - S8161733: [parfait] Memory leak in imageioJPEG.c:2803
  - S8161742: [parfait] Uninitialised memory in isXTestAvailable of awt_Robot.c:65
  - S8161761: [parfait] 2 JNI exception pending defect groups in GraphicsPrimitiveMgr.c
  - S8162101: C2: Handle "wide" aliases for unsafe accesses
  - S8162488: JDK should be updated to use LittleCMS 2.8
  - S8162496: missing precedence edge for anti_dependence
  - S8162598: XSLTC transformer swallows empty namespace declaration which is needed to undeclare default namespace
  - S8162603: Unrecognized VM option 'UseCountedLoopSafepoints'
  - S8162766: Unsafe_DefineClass0 accesses raw oops while in _thread_in_native
  - S8162795: [REDO] MemberNameTable doesn't purge stale entries
  - S8162796: [macosx] LinearGradientPaint and RadialGradientPaint are not printed on OS X.
  - S8163104: Unexpected NPE still possible on some Kerberos ticket calls
  - S8163181: Further improvements for Unix NetworkInterface native implementation
  - S8163518: Integer overflow in StringBufferInputStream.read() and CharArrayReader.read/skip()
  - S8163877: Tests added in JDK-8163518 fail on some platforms
  - S8163896: Finalizing one key of a KeyPair invalidates the other key
  - S8163945: Honor Number type hint in toPrimitive on Numbers
  - S8163969: Cyclic interface initialization causes JVM crash
  - S8163979: [macosx] Chinese text shows as Latin w/ openVanilla input method
  - S8164002: Add a new CPU family (S_family) for SPARC S7 and above processors
  - S8164119: MoveToOtherScreenTest fails due wrong key attribute
  - S8164366: ZoneOffset.ofHoursMinutesSeconds() does not reject invalid input
  - S8164501: Uninitialised memory in byteArrayToPacket of SharedMemoryConnection.c
  - S8164508: unexpected profiling mismatch in c1 generated code
  - S8164784: ISO 4217 amendment 162
  - S8164846: CertificateException missing cause of underlying exception
  - S8165153: Crash in rebuild_cpu_to_node_map
  - S8165243: Base64.Encoder.wrap(os).write(byte[],int,int) with incorrect arguments should not produce output
  - S8165320: Small flaw when integrating 8160174 to JDK8
  - S8165428: Security Warning dialog should be always on the top when multiple applets with APPLICATION_MODAL dialog launched in a browser
  - S8165482: java in ldoms, with cpu-arch=generic has problems
  - S8165717: [macosx] Various memory leaks in jdk9
  - S8165751: NPE hit with java.security.debug=provider
  - S8165829: Android Studio 2.x crashes with NPE at sun.lwawt.macosx.CAccessibility.getAccessibleIndexInParent
  - S8165988: Test JarURLConnectionUseCaches.java fails at windows: failed to clean up files after test
  - S8166248: tools/pack200/Pack200Test.java fails on Win32: Could not reserve enough space
  - S8166507: ConcurrentSkipListSet.clear() can leave the Set in an invalid state
  - S8166747: Add invalid network / computer name cases to isReachable known failure switch
  - S8166799: ASSEMBLY_EXCEPTION contains historical company name
  - S8166840: Synthetic bridge constructor in ArrayList$Itr blocks inlining
  - S8166872: GPL header in /hotspot/src/share/vm/gc_implementation/g1/g1RemSetSummary.cpp
  - S8166902: Nested object literal property maps not reset in optimistic recompilation
  - S8167102: [macosx] PrintRequestAttributeSet breaks page size set using PageFormat
  - S8168115: Remove and retag jdk8u122-b03 in 8u repo
  - S8168364: [macosx] Delete unused class NSPrintinfo
  - S8168373: don't emit conversions for symbols outside their lexical scope
  - S8168405: Pending exceptions in java.base/windows/native
  - S8168751: Two "Direct Clip" threads are created to play the same "AudioClip" object, what makes clip sound corrupted
  - S8168914: Crash in ClassLoaderData/JNIHandleBlock::oops_do during concurrent marking
  - S8169056: StringIndexOutOfBoundsException in Pattern.compile with CANON_EQ flag
  - S8169112: java.lang.VerifyError: (class: GregorSamsa, method: template-bash signature: (LGregorSamsa8;)V) Register 10 contains wrong type
  - S8169229: RSAClientKeyExchange debug info is incorrect
  - S8169355: Diacritics input works incorrectly on Windows if Spanish (Latin American) keyboard layout is used
  - S8169481: StackOverflowError on start when parsing PAC file to autodetect Proxy settings
  - S8169556: Wrapping of FileInputStream's native skip and available methods
  - S8169865: Downport minor fixes in java.net native code from JDK 9 to JDK 8
  - S8170153: PPC64/s390x/aarch64: Poor StrictMath performance due to non-optimized compilation
  - S8170278: ticket renewal won't happen with debugging turned on
  - S8170409: CMS: Crash in CardTableModRefBSForCTRS::process_chunk_boundaries
  - S8170465: JNI exception pending in jni_util.c:190
  - S8170466: JNI exception pending in jni_util.c:190
  - S8170536: Uninitialised memory in set_uintx_flag of attachListener.cpp
  - S8170552: [macosx] Wrong rendering of diacritics on macOS
  - S8170565: JSObject call() is passed undefined for the argument 'thiz'
  - S8170578: CUPS Printing is broken with Ubuntu 16.10 (CUPS 2.2)
  - S8170594: >>>=0 generates invalid bytecode for BaseNode LHS
  - S8170913: Java "1.8.0_112" on Windows 10 displays different characters for EUDCs from ones created in eudcedit.exe.
  - S8170950: Text is displayed in bold when fonts are installed into symlinked folder
  - S8170977: SparseArrayData should not grow its underlying dense array data
  - S8171151: JDK8u ProblemList.txt Updates
  - S8171155: Scanning method file for initialized final field updates can fail for non-existent fields
  - S8171194: Exception "Duplicate field name&signature in class file" should report the name and signature of the field
  - S8171219: Missing checks in sparse array shift() implementation
  - S8171808: Performance problems in dialogs with large tables when JAB activated
  - S8171849: Collection and Queue conversions not prioritized for Arrays
  - S8171909: [PIT] on Windows, failure of java/awt/Dialog/DialogAboveFrame/DialogAboveFrameTest.java
  - S8171952: [macosx] AWT_Modality/Automated/ModalExclusion/NoExclusion/ModelessDialog test fails as DummyButton on Dialog did not gain focus when clicked.
  - S8172053: (ppc64) Downport of 8170153 breaks build on linux/ppc64 (big endian)
  - S8172145: C2: anti dependence missed because store hidden by membar
  - S8173373: C1: NPE is thrown instead of LinkageError when accessing inaccessible field on NULL receiver
  - S8173423: Wrong display name for supplemental Japanese era
  - S8173581: performance regression in com/sun/crypto/provider/OutputFeedback.java
  - S8173654: Regression since 8u60: System.getenv doesn't return env var set in JNI code
  - S8173664: Typo in https://java.net/downloads/heap-snapshot/hprof-binary-format.html
  - S8173853: IllegalArgumentException in java.awt.image.ReplicateScaleFilter
  - S8173876: Fast precise scrolling and DeltaAccumulator fix for macOS Sierra 10.12.2
  - S8174736: [JCP] [Mac]Cannot launch JCP on Mac os with language set to "Chinese, Simplified" while region is not China
  - S8174779: Locale issues with Mac 10.12
  - S8175025: The copyright section in the test/java/awt/font/TextLayout/DiacriticsDrawingTest.java should be updated
  - S8175131: sun.rmi.transport.tcp.TCPChannel.createConnection close connection on timeout
  - S8175345: Reported null pointer dereference defect groups
  - S8175915: NullPointerException from JComboBox and JList when Accessibility enabled
  - S8176287: [macosx] The print test crashed with Nimbus L&F
  - S8176490: [macosx] Sometimes NSWindow.isZoomed hangs
  - S8176511: JSObject property access is broken for numeric keys outside the int range
  - S8176530: JDK support for JavaFX modal print dialogs
  - S8177095: Range check dependent CastII/ConvI2L is prematurely eliminated
  - S8177450: javax.swing.text.html.parser.Parser parseScript ignores a character after commend end
  - S8177678: Overstatement of universality of Era.getDisplayName() implementation
  - S8177776: Create an equivalent test case for JDK9's SupplementalJapaneseEraTest
  - S8177817: Remove assertions in 8u that were removed by 8056124 in 9.
  - S8179515: Class java.util.concurrent.ThreadLocalRandom fails to Initialize when using SecurityManager
  - S8180511: Null pointer dereference in Matcher::ReduceInst()
  - S8180565: Null pointer dereferences of ConstMethod::method()
  - S8180575: Null pointer dereference in LoadNode::Identity()
  - S8180576: Null pointer dereference in Matcher::xform()
  - S8180617: Null pointer dereference in InitializeNode::complete_stores
  - S8180660: missing LNT entry for finally block
  - S8180813: Null pointer dereference of CodeCache::find_blob() result
  - S8180934: PutfieldError failed with UnsupportedClassVersionError
  - S8180949: Correctly handle exception in TCPChannel.createConnection
  - S8181191: getUint32 returning Long
  - S8181192: [macos] javafx.print.PrinterJob.showPrintDialog() hangs on macOS
  - S8181205: JRE fails to load/register security providers when started from UNC pathname
  - S8181500: [TESTBUG] com/sun/jdi/LineNumberInfo.java fails with jArrayIndexOutOfBoundsException
  - S8182672: Java 8u121 on Linux intermittently returns null for MAC address
  - S8185779: 8u152 L10n resource file update
  - S8186532: 8u152 L10n resource file update md20
* Import of OpenJDK 8 u161 build 12
  - S8035105: DNS provider cleanups
  - S8137255: sun/security/provider/NSASuiteB/TestDSAGenParameterSpec.java timeouts intermittently
  - S8140436: Negotiated Finite Field Diffie-Hellman Ephemeral Parameters for TLS
  - S8148108: Disable Diffie-Hellman keys less than 1024 bits
  - S8148421, PR3504: Transport Layer Security (TLS) Session Hash and Extended Master Secret Extension
  - S8154344: sun/security/pkcs11/KeyAgreement/SupportedDHKeys.java fails on solaris
  - S8156502: Use short name of SupportedEllipticCurvesExtension.java
  - S8158116: com/sun/crypto/provider/KeyAgreement/SupportedDHParamGens.java failed with timeout
  - S8159240: XSOM parser incorrectly processes type names with whitespaces
  - S8159377: JMX Connections need white-list filters
  - S8161598: Kitchensink fails: assert(nm->insts_contains(original_pc)) failed: original PC must be in nmethod/CompiledMethod
  - S8163237: Restrict the use of EXPORT cipher suites
  - S8166362: [TEST_BUG] test sun/net/www/http/HttpClient/B8025710.java failing with cert error in 8u121 b01
  - S8169944: sun/security/tools tests fail with CompilationError
  - S8170157: Enable unlimited cryptographic policy by default in OracleJDK
  - S8170245: [TEST_BUG] Cipher tests fail when running with unlimited policy
  - S8170911: 8170823 changes in 8u131 causing signature-test failure in jck runtime8b suite
  - S8171262: Stability fixes for lcms
  - S8172297: In java 8, the marshalling with JAX-WS does not escape carriage return
  - S8173631: Backout three hotspot fixes from 8u121-bpr repo
  - S8176536: Improved algorithm constraints checking
  - S8177144: [TEST BUG] sun/net/www/http/HttpClient/B8025710.java should run in ovm mode
  - S8177750: Forgot TestSocketFactory testcase in 8163958 changeset
  - S8178536: OOM ERRORS + SERVICE-THREAD TAKES A PROCESSOR TO 100%
  - S8178728: Check the AlgorithmParameters in algorithm constraints
  - S8179223: Integrate 8176490 into 8u131-bpr repo
  - S8181439: Test the jdk.tls.namedGroups System Property
  - S8181975: Run sun/security/pkcs11 tests on Mac
  - S8182614: Backout JDK-8140436 from 8u161
  - S8183939: Import JDK-8182672 into 8u141-bpr repo
  - S8184016: Text in native popup is not always updated with Sogou IME
  - S8185572: Enable AssumeMP by default on SPARC machines
  - S8185628: Backport jdk/test/lib/testlibrary/CompilerUtils.java to jdk8u which is helpful in test development
  - S8185719: rmi TestSocketFactory does not flush
  - S8185909: Disable JARs signed with DSA keys less than 1024 bits
  - S8186539: [testlibrary] TestSocketFactory should allow triggers before match/replace
  - S8187482: Backout JDK-8159377
  - S8187556: Backout of a fix reintroduced a dependency that had since been removed
  - S8188880: A JAXB JCK test failure found after 8186080
  - S8190258, PR3499: (tz) Support tzdata2017c
  - S8190259, PR3499: test tck.java.time.zone.TCKZoneRules is broken by tzdata2017c
  - S8190266: closed/java/awt/ComponentOrientation/WindowTest.java throws java.util.MissingResourceException.
  - S8190449: sun/security/pkcs11/KeyPairGenerator/TestDH2048.java fails on Solaris x64 5.10
  - S8190497: DHParameterSpec.getL() returns zero after JDK-8072452
  - S8190541: 8u161 L10n resource file update
  - S8190789: sun/security/provider/certpath/LDAPCertStore/TestURICertStoreParameters.java fails after JDK-8186606
  - S8191137, PR3503: keytool fails to format resource strings for keys for some languages after JDK-8171319
  - S8191340: 8ux linux builds failing - com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl (unknown type)
  - S8191352: Remove 8u161-b07 and 8u162-b07 tag to include 8191340 for b07
  - S8191907: PPC64 part of JDK-8174962: Better interface invocations
  - S8192793: 8u161 L10n resource file update md20
  - S8193683: Increase the number of clones in the CloneableDigest
* Backports
  - S8165996, PR3506: PKCS11 using NSS throws an error regarding secmod.db when NSS uses sqlite
  - S8170523, PR3506: Some PKCS11 test cases are ignored with security manager
  - S8187667, PR3517: Disable deprecation warning for readdir_r
  - S8189789, PR3530: tomcat gzip-compressed response bodies appear to be broken in update 151
  - S8194739, PR3520: Zero port of 8174962: Better interface invocations
  - S8194828, PR3520: Fix for 8194739: Zero port of 8174962: Better interface invocations
  - S8195837, PR3522: (tz) Upgrade time-zone data to tzdata2018c
  - S8196516, PR3523: [REDO] [linux] libfontmanager should be linked against headless awt library
  - S8196978, PR3517: JDK-8187667 fails on GCC 4.4.7 as found on RHEL 6
* Bug fixes
  - PR3489: Incomplete reading of directory containing tzdb.dat
  - PR3501: Revert 8165320 so as not to revert the work of 8034174 (PR2290)
  - PR3526: configure fails to parse GCC version
* AArch64 port
  - S8164113, PR3519: AArch64: follow-up the fix for 8161598
  - S8193133, PR3519: Assertion failure because 0xDEADDEAD can be in-heap
  - S8194686, PR3519: AArch64 port of 8174962: Better interface invocations
  - S8195859, PR3519: AArch64: vtableStubs gtest fails after 8174962
  - S8196136, PR3519: AArch64: Correct register use in patch for JDK-8194686
  - S8196221, PR3519: AArch64: Mistake in committed patch for JDK-8195859
  - PR3519: Fix functions with missing return value.
  - PR3519: Fix further functions with a missing return value.
* AArch32 port
  - S8140584: [aarch32] nmethod::oops_do_marking_epilogue always runs verification code
  - S8174962: [aarch32] Better interface invocations
* Shenandoah
  - Fix post-CPU merge Shenandoah regressions
  
New in release 3.6.0 (2017-10-31):

* Security fixes
  - S8165543: Better window framing
  - S8169026, CVE-2017-10274: Handle smartcard clean up better
  - S8169966: Larger AWT menus
  - S8170218: Improved Font Metrics
  - S8171252: Improve exception checking
  - S8171261: Stability fixes for lcms
  - S8174109, CVE-2017-10281: Better queuing priorities
  - S8174966, CVE-2017-10285: Unreferenced references
  - S8175940: More certificate subject checking
  - S8176751, CVE-2017-10295: Better URL connections
  - S8178794, CVE-2017-10388: Correct Kerberos ticket grants
  - S8180024: Improve construction of objects during deserialization
  - S8180711, CVE-2017-10346: Better invokespecial checks
  - S8181100, CVE-2017-10350: Better Base Exceptions
  - S8181323, CVE-2017-10347: Better timezone processing
  - S8181327, CVE-2017-10349: Better X processing
  - S8181370, CVE-2017-10345: Better keystore handling
  - S8181432, CVE-2017-10348: Better processing of unresolved permissions
  - S8181597, CVE-2017-10357: Process Proxy presentation
  - S8181612, CVE-2017-10355: More stable connection processing
  - S8181692, CVE-2017-10356: Update storage implementations
  - S8183028, CVE-2016-10165: Improve CMS header processing
  - S8184682, CVE-2016-9840, CVE-2016-9841, CVE-2016-9842, CVE-2016-9843: Upgrade compression library
* New features
  - PR3469: Alternative path to tzdb.dat
  - PR3483: Separate addition of nss.cfg and tz.properties into separate targets
  - PR3484: Move SystemTap support to its own target
  - PR3485: Support additional targets for the bootstrap build
* Import of OpenJDK 8 u151 build 12
  - S8029659: Keytool, print key algorithm of certificate or key entry
  - S8057810: New defaults for DSA keys in jarsigner and keytool
  - S8075484, PR3473, RH1490713: SocketInputStream.socketRead0 can hang even with soTimeout set
  - S8077670: sun/security/krb5/auto/MaxRetries.java may fail with BindException
  - S8087144: sun/security/krb5/auto/MaxRetries.java fails with Retry count is -1 less
  - S8153146: sun/security/krb5/auto/MaxRetries.java failed with timeout
  - S8157561: Ship the unlimited policy files in JDK Updates
  - S8158517: Minor optimizations to ISO10126PADDING
  - S8171319: keytool should print out warnings when reading or generating cert/cert req using weak algorithms
  - S8177569: keytool should not warn if signature algorithm used in cacerts is weak
  - S8177837: need to upgrade install tools
  - S8178714: PKIX validator nameConstraints check failing after change 8175940
  - S8179423: 2 security tests started failing for JDK 1.6.0 u161 b05
  - S8179564: Missing @bug for tests added with JDK-8165367
  - S8181048: Refactor existing providers to refer to the same constants for default values for key length
  - S8182879: Add warnings to keytool when using JKS and JCEKS
  - S8184937: LCMS error 13: Couldn't link the profiles
  - S8185039: Incorrect GPL header causes RE script to miss swap to commercial header for licensee source bundle
  - S8185040: Incorrect GPL header causes RE script to miss swap to commercial header for licensee source bundle
  - S8185778: 8u151 L10n resource file update
  - S8185845: Add SecurityTools.java test library
  - S8186503: sun/security/tools/jarsigner/DefaultSigalg.java failed after backport to JDK 6/7/8
  - S8186533: 8u151 L10n resource file update md20
  - S8186674: Remove JDK-8174109 from CPU Aug 21 week builds
* Backports
  - S8035496, PR3487: G1 ARM: missing remset entry noticed by VerifyAfterGC for vm/gc/concurrent/lp50yp10rp70mr30st0
  - S8146086, PR3439, RH1478402: Publishing two webservices on same port fails with "java.net.BindException: Address already in use"
  - S8184673, PR3475, RH1487266: Fix compatibility issue in AlgorithmChecker for 3rd party JCE providers
  - S8185164, PR3438: GetOwnedMonitorInfo() returns incorrect owned monitor
  - S8187822, PR3478, RH1494230: C2 conditonal move optimization might create broken graph
* Bug fixes
  - PR3479, RH1486025: ECC and NSS JVM crash
  - PR3486: Path to jvm.cfg is wrong in add-systemtap-boot
  - S8165852, PR3468: (fs) Mount point not found for a file which is present in overlayfs
  - S8188030, PR3459, RH1484079: AWT java apps fail to start when some minimal fonts are present
* PPC port
  - S8145913, PR3466, RH1498309: PPC64: add Montgomery multiply intrinsic
  - S8168318, PR3466, RH1498320: PPC64: Use cmpldi instead of li/cmpld
  - S8170328, PR3466, RH1498321: PPC64: Use andis instead of lis/and
  - S8181810, PR3466, RH1498319: PPC64: Leverage extrdi for bitfield extract
* AArch64 port
  - S8161190, PR3488: AArch64: Fix overflow in immediate cmp instruction
  - S8187224, PR3488: aarch64: some inconsistency between aarch64_ad.m4 and aarch64.ad
* SystemTap
  - PR3467, RH1492139: Hotspot object_alloc tapset uses HeapWordSize incorrectly
* Shenandoah
  - Add missing UseShenandoahGC checks to C2
  - [backport] Add JVMTI notifications to Shenandoah GC pauses.
  - [backport] After Evac verification should run consistently
  - [backport] All definitions should start with Shenandoah*
  - [backport] Allocation latency tracing
  - [backport] Allow allocations in pinned regions
  - [backport] Assorted monitoring support fixes
  - [backport] Avoid Full STW GC on System.gc() + related fixes
  - [backport] BrooksPointer tracing overwhelms -Xlog:gc=trace
  - [backport] Cannot do more than 1000 Full GCs
  - [backport] Cap heap size for TestRegionSizeArgs test
  - [backport] Cleanup "dirty" mentions
  - [backport] Cleanup unused methods and statements + Trivial cleanup: removed unused field, etc.
  - [backport] Common pause marker to capture everything before/after pause
  - [backport] Consistent print_on and tty handling
  - [backport] "continuous" heuristics
  - [backport] Disable biased locking by default
  - [backport] Fix build error: avoid loops with empty bodies
  - [backport] Fix build error: switches over enums should take all enums
  - [backport] Fix build error: verifier liveness should not be implicitly casted to size_t
  - [backport] Fixed assertion failures when printing heap region to trace output
  - [backport] Fixed C calling convention of shenandoah_wb() on Windows
  - [backport] LotsOfCycles test always degrades to Full GC
  - [backport] Made ShenandoahPrinter debug only
  - [backport] Make sure different Verifier levels work
  - [backport] Make sure we have at least one memory pool per memory manager (JMX) + JMX double-counts heap used size
  - [backport] Mark heuristics diagnostic/experimental
  - [backport] Move Verifier "start" message under (gc,start)
  - [backport] On-demand commit as heap resizing strategy
  - [backport] Periodic GC
  - [backport] PhiNode::has_only_data_users() needs to apply to shenandoah barrier only
  - [backport] Pinning humongous regions should be allowed
  - [backport] Reclaimed humongous regions should count towards immediate garbage
  - [backport] Refactor region flags into finite state machine
  - [backport] Refactor ShConcThread dispatch
  - [backport] Refactor ShenandoahFreeSet + Fast-forward over humongous regions to keep "current" non-humongous
  - [backport] Refactor ShenandoahHeapLock
  - [backport] Refactor ShenandoahHeapRegionSet
  - [backport] Region (byte|word) shifts as the replacement for divisions
  - [backport] Rehash -XX:-UseTLAB in tests + Rehash allocation tests
  - [backport] Rename inline guards
  - [backport] Selectable humongous threshold + Humongous top() should be correct for iteration
  - [backport] Shortcut concurrent cycle when enough immediate garbage is reclaimed
  - [backport] Templatize and improve inlining of arraycopy and clone barriers.
  - [backport] TestRegionSampling test
  - [backport] TestSmallHeap test for Shenandoah
  - [backport] Uncommit heap regions after given delay
  - [backport] Underflow in adaptive free_threshold calculation
  - [backport] Unlock more GC-specific tests for Shenandoah
  - [backport] Update counters on slow-path more rarely
  - [backport] Verifier should avoid pushing on stack when walking objects past TAMS
  - [backport] Verifier should walk cset and humongous regions
  - [backport] Verify humongous regions liveness
  - [backport] Verify liveness data
  - Correct way to fix Windows call convention issue
  - Fix build error in release config.
  - Fixed Fixed message logging
  - Handle Java heap initialization and expansion failures
  - Make sure -verbose:gc, PrintGC, PrintGCDetails work consistently
  - Missing barriers on constant oops + acmp rework + cas fix + write barrier on constant oop fix
  - Missing UseShenandoahGC check in LibraryCallKit::inline_multiplyToLen()
  - Missing UseShenandoahGC check to C2
  - OOME in SurrogateLockerThread deadlocks the GC cycle
  - Properly unlock ShenandoahVerify
  - Remove unused memory_for, fixing the build
  - Remove useless code following acmp rework
  - Revert accidental G1 closure rename
  - Test bug: test library and flags in TestHeapAlloc
  - UnlockDiagnosticVMOptions flag is needed for ShenandoahVerify
  - Write barrier pin and expand cleanup

New in release 3.5.1 (2017-07-27):

* Import of OpenJDK 8 u144 build 01
  - S8184993: Jar file verification failing with SecurityException: digest missing xxx
* Shenandoah
  - Amend "ArrayCopy verification code fix" with 8u-specific node hierarchy test
  - Amend "Refactor asm acmp" with a few missing changes
  - [backport] aarch64 store check fix
  - [backport] Account "shared" out-of-LAB allocations separately
  - [backport] Adaptive should not be scared of user-requested System.gc()
  - [backport] Added assertion for page alignment of heap's base address
  - [backport] Add "verify jcstress" acceptance test
  - [backport] "Allocation failure" cause should not be overwritten
  - [backport] ArrayCopy verification code fix
  - [backport] Assorted cleanups
  - [backport] "Before Full GC" verification is too strong for OOME-during-evac
  - [backport] C1 stores constants without read barriers
  - [backport] Cleanup AArch64 code
  - [backport] Cleanup class unloading and string intern code
  - [backport] Cleanup duplicated Shenandoah task queue declarations
  - [backport] Cleanups
  - [backport] Cleanup ShenandoahBarrierSet::write_barrier
  - [backport] Cleanup ShenandoahHeap::do_evacuation
  - [backport] Clean up unused fields and methods
  - [backport] Cleanup: update-refs check in_collection_set twice
  - [backport] Code cache roots styles
  - [backport] Concurrent code cache evacuation + bugfixes
  - [backport] Concurrent preclean + Fix weakref precleaning
  - [backport] Correct prefetch offset for marked object iteration
  - [backport] Deferred region cleanup.
  - [backport] Dense ShenandoahHeapRegion printout
  - [backport] Detailed ParallelCleanupTask statistics + Split out Full GC stats for parallel cleaning
  - [backport] Disable aggressive+verification test configs (jtreg eats up last configuration)
  - [backport] Do not abandon RP discovery on conc GC cancel, do that only before Full GC
  - [backport] Eliminating _num_regions variable in ShenandoahHeap
  - [backport] Ensure collection set and cset map are consistent
  - [backport] Fallback to shared allocation if GCLAB is not available
  - [backport] Fast synchronizer root scanning
  - [backport] "F: Code Cache Roots" is missing from gc+stats
  - [backport] Fix DerivedPointerTable handling when scanning roots twice in init-evac phase
  - [backport] Fixed a few of early returns that calling register_gc_end()
  - [backport] Fix live data accounting for humongous region
  - [backport] Fix memory Phis with only data uses
  - [backport] Fix recycled regions zapping
  - [backport] Fix up pointer volatility
  - [backport] Generic verification should not trust bitmaps
  - [backport] Heap/matrix verification for all reachable objects
  - [backport] Heap memory usage counting not longer needs to be atomic
  - [backport] Heap region recycling should call explicit clear() and request zapping
  - [backport] Heap region verification
  - [backport] Implementation of interpreter matrix barrier on aarch64
  - [backport] Implement early update references phase.
  - [backport] implicit null checks broken on aarch64
  - [backport] Increase timeout for EvilSyncBug test
  - [backport] Lazy parallel code cache iterator
  - [backport] Make statistics gathering span more operations
  - [backport] Make sure atomic operations are done on "volatile" fields
  - [backport] Make sure new_active_workers is used
  - [backport] Make {T,GC}LAB statistics unconditional
  - [backport] Mark-compact and heuristics should consistently process refs and unload classes
  - [backport] minor fix to optimization of java mirror comparison
  - [backport] more barrier on constant oop fixes + couple small unrelated fixes
  - [backport] More collection set and matrix cleanup
  - [backport] Nit: mark-compact phase 3 (Adjust Pointers) should announce itself as "Phase 3"
  - [backport] Optimize heap region size checks
  - [backport] Optimize heap verification
  - [backport] Out-of-TLAB evacuation should overwrite stale copies
  - [backport] Parallel code cache scanning
  - [backport] Parallel verification
  - [backport] Print correct message about gross times in stats
  - [backport] Print heap changes in phases that actually change heap occupancy
  - [backport] Print more detailed final UR stats
  - [backport] Print more details for weak ref and class unloading stats
  - [backport] Properly react on -ClassUnloading
  - [backport] Purge ealier version of redefined classes during class unloading
  - [backport] Purge ratio, global, connections heuristics.
  - [backport] Purge shenandoahHumongous.hpp
  - [backport] Purge ShenandoahVerify(Reads|Writes)ToFromSpace.
  - [backport] Reduce region retirement during tlab allocation
  - [backport] Refactor asm acmp (x86, aarch64, renames)
  - [backport] Refactor BrooksPointer asserts
  - [backport] Refactor heap verification
  - [backport] Reference processing deadlocks with -ParallelRefProcEnabled
  - [backport] Reference processors might use non-forwarded alive checks
  - [backport] Region sampling may not be enabled because last timetick is uninitialized
  - [backport] Rehash ShenandoahHeap section in hs_err
  - [backport] Reinstate "Purge" block in final-mark stats
  - [backport] Relax assert to not fire at safepoint
  - [backport] Remove heap printing routines from ShenandoahHeap
  - [backport] Remove obsolete compile_resolve_oop_runtime() methods
  - [backport] Rename final mark operations
  - [backport] Rename ShenandoahBarriersForConst
  - [backport] Replace ShHeapRegionSet::get with get_fast
  - [backport] Report correct total garbage data. Print out garbage and cset data with -Xlog:gc+ergo
  - [backport] Report oops and fwdptrs verification failures fully
  - [backport] Result of write barrier on constant not used
  - [backport] Separate Full GC root operations in GC stats
  - [backport] ShenandoahCollectionSet refactor
  - [backport] ShenandoahGCSession used wrong timer for full GC
  - [backport] ShenandoahHeap::evacuate_object() with boolean result flag.
  - [backport] Shenandoah options should be uintx
  - [backport] shenandoah_wb should fallback to slow path with -UseTLAB + Fix aarch64 compilation error due to shenandoah_wb change
  - [backport] ShenandoahWriteBarrierNode::memory_dominates_all_paths() assert failure when compiling methods using unsafe
  - [backport] Shortcut reference processing when no work is available
  - [backport] Simplify parallel synchronizer roots iterator
  - [backport] Skip RESOLVE when references update is not needed
  - [backport] Stats should attribute "Resize TLABs" properly, and mention "Pause" for init/final mark
  - [backport] Stats should not record past-shutdown events
  - [backport] "String/Symbol/CodeCache" -> "Str/Sym, Code Cache"
  - [backport] Tests should use all heuristics and pass heap verification + Disable aggressive+verification test configs
  - [backport] Total pauses should include final-mark pauses
  - [backport] Trim down native GC footprint
  - [backport] Update region sampling to include TLAB/GCLAB allocation data
  - [backport] Update roots should always handle derived pointers
  - [backport] Update ShenandoahHeapSampling to avoid double counting.
  - [backport] Update statistics to capture thread data accurately
  - [backport] Use CollectedHeap::base() instead of ShenandoahHeap::first_region_bottom()
  - [backport] Use lock version heap region memory allocator
  - [backport] Use scoped object for gc session/phases recording
  - [backport] Variable steps in adaptive heuristics
  - [backport] Verification error log is truncated
  - [backport] Verification levels
  - [backport] Verification should assert complete bitmaps in most phases + Disable complete bitmap verification in init mark
  - [backport] Verifier performance improvements: scan objects once, avoid double oop checks
  - [backport] Verifier should not assert cset in forwarded test block
  - [backport] Verifier should print extended info on referenced location
  - [backport] Verifier should use non-optimized root scans
  - [backport] Verify marked objects
  - [backport] Verify TAMS and object sizes
  - [backport] write barrier can get stuck below predicates resulting in unschedulable graph
  - S8140584: nmethod::oops_do_marking_epilogue always runs verification code
  - S8180175, S8180599: Cherry-pick/synchronize
  - Cleanup: Removed redundant ClassLoaderData::clear_claimed_marks() calls
  - Cleanup shared code.
  - Fixed memory leak in region garbage cache
  - Fix return type of ShenandoahHeapRegion::region_size_words_jint()
  - Improved comment about AArch64bit addressing in assembler.
  - Leak mutex in ShenandoahTaskTerminator
  - Make sure C2 arguments are not used when C2 is disabled.
  - Refactor parallel ClassLoaderData iterator
  - Revert G1 changes and bring shared BitMap
  - Add missing cmpoops() declaration to AArch64 macro assembler. Back out matrix related code from AArch64 interpreter.
  - Fix build without precompiled headers.
  - Fixed build issues on Windows

New in release 3.5.0 (2017-07-20):

* Security fixes
  - S8163958, CVE-2017-10102: Improved garbage collection
  - S8167228: Update to libpng 1.6.28
  - S8169209, CVE-2017-10053: Improved image post-processing steps
  - S8169392, CVE-2017-10067: Additional jar validation steps
  - S8170966, CVE-2017-10081: Right parenthesis issue
  - S8171539, CVE-2017-10078: Better script accessibility for JavaScript
  - S8172204, CVE-2017-10087: Better Thread Pool execution
  - S8172461, CVE-2017-10089: Service Registration Lifecycle
  - S8172465, CVE-2017-10090: Better handling of channel groups
  - S8172469, CVE-2017-10096: Transform Transformer Exceptions
  - S8173286, CVE-2017-10101: Better reading of text catalogs
  - S8173697, CVE-2017-10107: Less Active Activations
  - S8173770, CVE-2017-10074: Image conversion improvements
  - S8174098, CVE-2017-10110: Better image fetching
  - S8174105, CVE-2017-10108: Better naming attribution
  - S8174113, CVE-2017-10109: Better sourcing of code
  - S8174770: Check registry registration location
  - S8174873: Improved certificate procesing
  - S8175106, CVE-2017-10115: Higher quality DSA operations
  - S8175110, CVE-2017-10118: Higher quality ECDSA operations
  - S8176055: JMX diagnostic improvements
  - S8176067, CVE-2017-10116: Proper directory lookup processing
  - S8176760, CVE-2017-10135: Better handling of PKCS8 material
  - S8178135, CVE-2017-10176: Additional elliptic curve support
  - S8179101, CVE-2017-10193: Improve algorithm constraints implementation
  - S8179998, CVE-2017-10198: Clear certificate chain connections
  - S8181420, CVE-2017-10074: PPC: Image conversion improvements
  - S8183551, CVE-2017-10074, PR3423: AArch64: Image conversion improvements
  - S8184185, CVE-2017-10111: Rearrange MethodHandle arrangements
* New features
  - PR3392, RH1273760: Support using RSAandMGF1 with the SHA hash algorithms in the PKCS11 provider
* Import of OpenJDK 8 u141 build 15
  - S8139870: sun.management.LazyCompositeData.isTypeMatched() fails for composite types with items of ArrayType
  - S8155690: Update libPNG library to the latest up-to-date
  - S8159058: SAXParseException when sending soap message
  - S8162461: Hang due to JNI up-call made whilst holding JNI critical lock
  - S8163889: [macosx] Can't print from browser on Mac OS X
  - S8165231: java.nio.Bits.unaligned() doesn't return true on ppc
  - S8165367: Additional tests for JEP 288: Disable SHA-1 Certificates
  - S8173145: Menu is activated after using mnemonic Alt/Key combination
  - S8173207: Upgrade compression library
  - S8175251: Failed to load RSA private key from pkcs12
  - S8176329: jdeps to detect MR jar file and output a warning
  - S8176536: Improved algorithm constraints checking
  - S8176731: JCK tests in api/javax_xml/transform/ spec conformance started failing after 8172469
  - S8176769: Remove accidental spec change in jdk8u
  - S8177449: (tz) Support tzdata2017b
  - S8178996: [macos] JComboBox doesn't display popup in mixed JavaFX Swing Application on 8u131 and Mac OS 10.12
  - S8179014: JFileChooser with Windows look and feel crashes on win 10
  - S8180582: The bind to rmiregistry is rejected by registryFilter even though registryFilter is set
  - S8181591: 8u141 L10n resource file update
  - S8181698: Remove and retag 8u141-b12 tag from source repository
  - S8181946: JDK 8 THIRD_PARTY_README - Minor Cleanup
  - S8182054: Improve wsdl support
  - S8184235: Backout JDK-8173207 from 8u141, 7u151 and higher updates source base
* Backports
  - S8164293, PR3412, RH1459641: HotSpot leaking memory in long-running requests
  - S8175813, PR3394, RH1448880: PPC64: "mbind: Invalid argument" when -XX:+UseNUMA is used
  - S8175887, PR3415: C1 value numbering handling of Unsafe.get*Volatile is incorrect
  - S8179084, PR3409, RH1455694: HotSpot VM fails to start when AggressiveHeap is set
  - S8180048, PR3411, RH1449870: Interned string and symbol table leak memory during parallel unlinking
  - S8181055, PR3394, RH1448880: PPC64: "mbind: Invalid argument" still seen after 8175813
  - S8181419, PR3413, RH1463144: Race in jdwp invoker handling may lead to crashes or invalid results
* AArch64 port
  - S7009641, PR3423: Don't fail VM when CodeCache is full
  - S8182581, PR3423: aarch64: fix for crash caused by earlyret of compiled method
* AArch32 port
  - PR3391: Revert PR3385 as -Xshare:dump does appear to work on AArch32

New in release 3.4.0 (2017-05-16):

* Security fixes
  - S8163520, CVE-2017-3509: Reuse cache entries
  - S8163528, CVE-2017-3511: Better library loading
  - S8165626, CVE-2017-3512: Improved window framing
  - S8167110, CVE-2017-3514: Windows peering issue
  - S8168699: Validate special case invocations
  - S8169011, CVE-2017-3526: Resizing XML parse trees
  - S8170222, CVE-2017-3533: Better transfers of files
  - S8171121, CVE-2017-3539: Enhancing jar checking
  - S8171533, CVE-2017-3544: Better email transfer
  - S8172299: Improve class processing
* New features
  - PR1969: Add AArch32 JIT port
  - PR3297: Allow Shenandoah to be used on AArch64
  - PR3340: jstack.stp should support AArch64
* Import of OpenJDK 8 u131 build 11
  - S6474807: (smartcardio) CardTerminal.connect() throws CardException instead of CardNotPresentException
  - S6515172, PR3346: Runtime.availableProcessors() ignores Linux taskset command
  - S7155957: closed/java/awt/MenuBar/MenuBarStress1/MenuBarStress1.java hangs on win 64 bit with jdk8
  - S7167293: FtpURLConnection connection leak on FileNotFoundException
  - S8035568: [macosx] Cursor management unification
  - S8079595: Resizing dialog which is JWindow parent makes JVM crash
  - S8130769: The new menu can't be shown on the menubar after clicking the "Add" button.
  - S8146602: jdk/test/sun/misc/URLClassPath/ClassnameCharTest.java test fails with NullPointerException
  - S8147842: IME Composition Window is displayed at incorrect location
  - S8147910, PR3346: Cache initial active_processor_count
  - S8150490: Update OS detection code to recognize Windows Server 2016
  - S8160951: [TEST_BUG] javax/xml/bind/marshal/8134111/UnmarshalTest.java should be added into :needs_jre group
  - S8160958: [TEST_BUG] java/net/SetFactoryPermission/SetFactoryPermission.java should be added into :needs_compact2 group
  - S8161147: jvm crashes when -XX:+UseCountedLoopSafepoints is enabled
  - S8161195: Regression: closed/javax/swing/text/FlowView/LayoutTest.java 
  - S8161993, PR3346: G1 crashes if active_processor_count changes during startup
  - S8162876: [TEST_BUG] sun/net/www/protocol/http/HttpInputStream.java fails intermittently
  - S8162916: Test sun/security/krb5/auto/UnboundSSL.java fails
  - S8164533: sun/security/ssl/SSLSocketImpl/CloseSocket.java failed with "Error while cleaning up threads after test"
  - S8167179: Make XSL generated namespace prefixes local to transformation process
  - S8168774: Polymorhic signature method check crashes javac
  - S8169465: Deadlock in com.sun.jndi.ldap.pool.Connections
  - S8169589: [macosx] Activating a JDialog puts to back another dialog
  - S8170307: Stack size option -Xss is ignored
  - S8170316: (tz) Support tzdata2016j
  - S8170814: Reuse cache entries (part II)
  - S8170888, PR3314, RH1284948: [linux] Experimental support for cgroup memory limits in container (ie Docker) environments
  - S8171388: Update JNDI Thread contexts
  - S8171949: [macosx] AWT_ZoomFrame Automated tests fail with error: The bitwise mask Frame.ICONIFIED is not setwhen the frame is in ICONIFIED state
  - S8171952: [macosx] AWT_Modality/Automated/ModalExclusion/NoExclusion/ModelessDialog test fails as DummyButton on Dialog did not gain focus when clicked.
  - S8173030: Temporary backout fix #8035568 from 8u131-b03
  - S8173031: Temporary backout fix #8171952 from 8u131-b03
  - S8173783, PR3328: IllegalArgumentException: jdk.tls.namedGroups
  - S8173931: 8u131 L10n resource file update
  - S8174844: Incorrect GPL header causes RE script to miss swap to commercial header for licensee source bundle
  - S8174985: NTLM authentication doesn't work with IIS if NTLM cache is disabled
  - S8176044: (tz) Support tzdata2017a
* Backports
  - S6457406, PR3335: javadoc doesn't handle <a href='http://...'> properly in producing index pages
  - S8030245, PR3335: Update langtools to use try-with-resources and multi-catch
  - S8030253, PR3335: Update langtools to use strings-in-switch
  - S8030262, PR3335: Update langtools to use foreach loops
  - S8031113, PR3337: TEST_BUG: java/nio/channels/AsynchronousChannelGroup/Basic.java fails intermittently
  - S8031625, PR3335: javadoc problems referencing inner class constructors
  - S8031649, PR3335: Clean up javadoc tests
  - S8031670, PR3335: Remove unneeded -source options in javadoc tests
  - S8032066, PR3335: Serialized form has broken links to non private inner classes of package private
  - S8034174, PR2290: Remove use of JVM_* functions from java.net code
  - S8034182, PR2290: Misc. warnings in java.net code
  - S8035876, PR2290: AIX build issues after '8034174: Remove use of JVM_* functions from java.net code'
  - S8038730, PR3335: Clean up the way JavadocTester is invoked, and checks for errors.
  - S8040903, PR3335: Clean up use of BUG_ID in javadoc tests
  - S8040904, PR3335: Ensure javadoc tests do not overwrite results within tests
  - S8040908, PR3335: javadoc test TestDocEncoding should use -notimestamp
  - S8041150, PR3335: Avoid silly use of static methods in JavadocTester
  - S8041253, PR3335: Avoid redundant synonyms of NO_TEST
  - S8043780, PR3368: Use open(O_CLOEXEC) instead of fcntl(FD_CLOEXEC)
  - S8061305, PR3335: Javadoc crashes when method name ends with "Property"
  - S8072452, PR3337: Support DHE sizes up to 8192-bits and DSA sizes up to 3072-bits
  - S8075565, PR3337: Define @intermittent jtreg keyword and mark intermittently failing jdk tests
  - S8075670, PR3337: Remove intermittent keyword from some tests
  - S8078334, PR3337: Mark regression tests using randomness
  - S8078880, PR3337: Mark a few more intermittently failuring security-libs
  - S8133318, PR3337: Exclude intermittent failing PKCS11 tests on Solaris SPARC 11.1 and earlier
  - S8144539, PR3337: Update PKCS11 tests to run with security manager
  - S8144566, PR3352: Custom HostnameVerifier disables SNI extension
  - S8153711, PR3313, RH1284948: [REDO] JDWP: Memory Leak: GlobalRefs never deleted when processing invokeMethod command
  - S8155049, PR3352: New tests from 8144566 fail with "No expected Server Name Indication"
  - S8173941, PR3326: SA does not work if executable is DSO
  - S8174164, PR3334, RH1417266: SafePointNode::_replaced_nodes breaks with irreducible loops
  - S8174729, PR3336, RH1420518: Race Condition in java.lang.reflect.WeakCache
  - S8175097, PR3334, RH1417266: [TESTBUG] 8174164 fix missed the test
* Bug fixes
  - PR3348: Architectures unsupported by SystemTap tapsets throw a parse error
  - PR3378: Perl should be mandatory
  - PR3389: javac.in and javah.in should use @PERL@ rather than a hardcoded path
* AArch64 port
  - S8168699, PR3372: Validate special case invocations [AArch64 support]
  - S8170100, PR3372: AArch64: Crash in C1-compiled code accessing References
  - S8172881, PR3372: AArch64: assertion failure: the int pressure is incorrect
  - S8173472, PR3372: AArch64: C1 comparisons with null only use 32-bit instructions
  - S8177661, PR3372: Correct ad rule output register types from iRegX to iRegXNoSp
* AArch32 port
  - PR3380: Zero should not be enabled by default on arm with the AArch32 HotSpot build
  - PR3384, S8139303, S8167584: Add support for AArch32 architecture to configure and jdk makefiles
  - PR3385: aarch32 does not support -Xshare:dump
  - PR3386, S8164652: AArch32 jvm.cfg wrong for C1 build
  - PR3387: Installation fails on arm with AArch32 port as INSTALL_ARCH_DIR is arm, not aarch32
  - PR3388: Wrong path for jvm.cfg being used on arm with AArch32 build
* Shenandoah
  - Fix Shenandoah argument checking on 32bit builds.
  - Import from Shenandoah tag aarch64-shenandoah-jdk8u101-b14-shenandoah-merge-2016-07-25
  - Import from Shenandoah tag aarch64-shenandoah-jdk8u121-b14-shenandoah-merge-2017-02-20
  - Import from Shenandoah tag aarch64-shenandoah-jdk8u121-b14-shenandoah-merge-2017-03-06
  - Import from Shenandoah tag aarch64-shenandoah-jdk8u121-b14-shenandoah-merge-2017-03-09
  - Import from Shenandoah tag aarch64-shenandoah-jdk8u121-b14-shenandoah-merge-2017-03-23

New in release 3.3.0 (2017-01-28):

* Security fixes
  - S8138725: Add options for Javadoc generation
  - S8140353: Improve signature checking
  - S8151934, CVE-2017-3231: Resolve class resolution
  - S8156804, CVE-2017-3241: Better constraint checking
  - S8158406: Limited Parameter Processing
  - S8158997: JNDI Protocols Switch
  - S8159507: RuntimeVisibleAnnotation validation
  - S8161218: Better bytecode loading
  - S8161743, CVE-2017-3252: Provide proper login context
  - S8162577: Standardize logging levels
  - S8162973: Better component components
  - S8164143, CVE-2017-3260: Improve components for menu items
  - S8164147, CVE-2017-3261: Improve streaming socket output
  - S8165071, CVE-2016-2183: Expand TLS support
  - S8165344, CVE-2017-3272: Update concurrency support
  - S8166988, CVE-2017-3253: Improve image processing performance
  - S8167104, CVE-2017-3289: Additional class construction refinements
  - S8167223, CVE-2016-5552: URL handling improvements
  - S8168705, CVE-2016-5547: Better ObjectIdentifier validation
  - S8168714, CVE-2016-5546: Tighten ECDSA validation
  - S8168724, CVE-2016-5549: ECDSA signing improvments
  - S8168728, CVE-2016-5548: DSA signing improvments
* New features
  - PR3300: wget not required when downloading is disabled
  - PR3301: Support RHEL multilib installations which use the /usr/lib/jvm/java-1.x.0-openjdk.${arch} naming
  - PR3303: Allow Kerberos to be detected by old libs & headers method if pkg-config check fails
* Import of OpenJDK 8 u112 build 16
  - S6477756: GraphicsDevice.getConfigurations() is slow taking 3 or more seconds
  - S7172749: Xrender: Class cast exception in 2D code running an AWT regression test
  - S8017629: G1: UseSHM in combination with a G1HeapRegionSize > os::large_page_size() falls back to use small pages
  - S8022203: Intermittent test failures in demo/jvmti/hprof
  - S8022582: Relax response flags checking in sun.security.krb5.KrbKdcRep.check.
  - S8027575: b113 causing a lot of memory allocation and regression for wls_webapp_atomics
  - S8028486: java/awt/Window/WindowsLeak/WindowsLeak.java fails
  - S8030780: test/com/sun/corba/cachedSocket/7056731.sh leaves HelloServer behind
  - S8036630: Null ProtectionDomain in JVM can cause NPE because principals field is not initialized to an empty array
  - S8042660: vm/mlvm/anonloader/stress/byteMutation failed with: assert(index >=0 && index < _length) failed: symbol index overflow
  - S8044193: Need to add known answer tests for AES cipher
  - S8044575: testlibrary_tests/whitebox/vm_flags/UintxTest.java failed: assert(!res || TypeEntriesAtCall::arguments_profiling_enabled()) failed: no profiling of arguments
  - S8048601: Tests for JCE crypto ciphers (part 1)
  - S8048621: Implement basic keystore tests
  - S8048622: Enhance tests for PKCS11 keystores with NSS
  - S8049021: Add smartcardio tests with APDU buffer
  - S8049312: AES/CICO test failed with on several modes
  - S8050402: Tests to check for use of policy files
  - S8050409: Test for JAAS getPrivateCredentials
  - S8054326: Confusing message in "Current rem set statistics"
  - S8055772: get_source.sh : version check assumes English localization
  - S8057791: Selection in JList is drawn with wrong colors in Nimbus L&F
  - S8058865: JMX Test Refactoring
  - S8067964: Native2ascii doesn't close one of the streams it opens
  - S8071487: javax/management/monitor/GaugeMonitorDeadlockTest.java timed out
  - S8071909: Port testlibrary improvments in jdk/test to hotspot/test as required for DCMD test port
  - S8073542: File Leak in jdk/src/java/base/unix/native/libnet/PlainDatagramSocketImpl.c
  - S8074784: Additional tests for XML DSig API
  - S8075007: Additional tests for krb5-related cipher suites with unbound server
  - S8075297: Tests for RFEs 4515853 and 4745056
  - S8075299: Additional tests for krb5 settings
  - S8075301: Tests for sun.security.krb5.principal system property
  - S8077276: allocating heap with UseLargePages and HugeTLBFS may trash existing memory mappings (linux)
  - S8078268: javax.swing.text.html.parser.Parser parseScript incorrectly optimized
  - S8078382: Wrong glyph is displayed for a derived font
  - S8080729: [macosx] java 7 and 8 JDialogs on multiscreen jump to parent frame on focus
  - S8085903: New fix for memory leak in ProtectionDomain cache
  - S8098581: SecureRandom.nextBytes() hurts performance with small size requests
  - S8129740: Incorrect class file created when passing lambda in inner class constructor
  - S8130127: streamline input parameter of Nashorn scripting $EXEC function
  - S8130309: Need to bailout cleanly if creation of stubs fails when codecache is out of space
  - S8130317: "ant test" fails to complete on Windows when run under cygwin shell
  - S8133070: Hot lock on BulkCipher.isAvailable
  - S8133309: Some unicode characters do not display any more after upgrading to Windows 10
  - S8134232: KeyStore.load() throws an IOException with a wrong cause in case of wrong password
  - S8135322: ConstantPool::release_C_heap_structures not run in some circumstances
  - S8136998: JComboBox prevents wheel mouse scrolling of JScrollPane
  - S8137240: Negative lookahead in RegEx breaks backreference
  - S8138906: [TEST_BUG] Test test/script/trusted/JDK-8087292.js intermittently fails.
  - S8141148: LDAP "follow" throws ClassCastException with Java 8
  - S8141541: Simplify Nashorn's Context class loader handling
  - S8143640: Showing incorrect result while passing specific argument in the Java launcher tools
  - S8143642: Nashorn shebang argument handling is broken
  - S8144160: Regression: two tests fail on Windows with "ant test" target
  - S8144221: fix Nashorn shebang argument handling on Mac/Linux
  - S8144703: ClassCastException: sun.font.CompositeFont cannot be cast to PhysicalFont
  - S8145305: fix Nashorn shebang handling on Cygwin
  - S8145984: [macosx] sun.lwawt.macosx.CAccessible leaks
  - S8146975: NullPointerException in IIOPInputStream.inputClassFields
  - S8147026: Convert an assert in ClassLoaderData to a guarantee
  - S8147451: Crash in Method::checked_resolve_jmethod_id(_jmethodID*)
  - S8147585: Annotations with lambda expressions has parameter result in wrong behavior.
  - S8147969: Print size of DH keysize when errors are encountered
  - S8148140: arguments are handled differently in apply for JS functions and AbstractJSObjects
  - S8148984: [macosx] Chinese Comma cannot be entered using Pinyin Input Method on OS X
  - S8150219: ReferenceError in 1.8.0_72
  - S8150234: Windows 10 App Containers disallow access to ICMP calls
  - S8150814: correct package declaration in Nashorn test
  - S8151722: TESTBUG: New test compiler/native/TestDirtyInt.sh should be modified
  - S8153149: Uninitialised memory in WinAccessBridge.cpp:1128
  - S8153192: (se) Selector.select(long) uses wrong timeout after EINTR (lnx)
  - S8153781: Issue in XMLScanner: EXPECTED_SQUARE_BRACKET_TO_CLOSE_INTERNAL_SUBSET when skipping large DOCTYPE section with CRLF at wrong place
  - S8153948: sun/security/mscapi/ShortRSAKey1024.sh fails with "Field length overflow"
  - S8154009: Some methods of java.security.Security require more permissions, than necessary
  - S8154069: Jaws reads wrong values from comboboxes when no element is selected
  - S8154144: Tests in com/sun/jdi fails intermittently with "jdb input stream closed prematurely"
  - S8154469: Update FSF address
  - S8154553: Incorrect GPL header in package-info.java reported
  - S8154558: Incorrect GPL header in ProcessEnvironment_md.c reported
  - S8154816: Caps Lock doesn't work as expected when using Pinyin Simplified input method
  - S8154831: CastII/ConvI2L for a range check is prematurely eliminated
  - S8155001: SystemTray.remove() leaks GDI Objects in Windows
  - S8155106: MHs.Lookup.findConstructor returns handles for array classes
  - S8155214: java/lang/invoke/PermuteArgsTest.java fails due to exhausted code cache
  - S8156478: 3 Buffer overrun defect groups in jexec.c
  - S8156521: Minor fixes and cleanups in NetworkInterface.c
  - S8156714: Parsing issue with automatic semicolon insertion
  - S8156836: SIGSEGV: Test test/compiler/jsr292/VMAnonymousClasses.java fails with JTREG 4.2 b02
  - S8156896: Script stack trace should display function names
  - S8157160: JSON.stringify does not work on ScriptObjectMirror objects
  - S8157242: Some java/lang/invoke tests miss othervm
  - S8157444: exclude jjs shebang handling test from runs
  - S8157603: TestCipher.java doesn't check one of the decrypted message as expected
  - S8157680: Callback parameter of any JS builtin implementation should accept any Callable
  - S8157819: TypeError when a java.util.Comparator object is invoked as a function
  - S8158059: The fix for 8050402 was partially committed
  - S8158072: Need a test for JDK-7172749
  - S8158111: Make handling of 3rd party providers more stable
  - S8158178: java.awt.SplashScreen.getSize() returns incorrect size for high dpi splash screens
  - S8158338: Nashorn's ScriptLoader split delegation has to be adjusted
  - S8158373: SIGSEGV: Metadata::mark_on_stack
  - S8158467: AccessControlException is thrown on public Java class access if "script app loader" is set to null
  - S8158495: CCE: sun.java2d.NullSurfaceData cannot be cast to sun.java2d.opengl.OGLSurfaceData
  - S8158802: com.sun.jndi.ldap.SimpleClientId produces wrong hash code
  - S8158871: Long response times with G1 and StringDeduplication
  - S8159822: Non-synchronized access to shared members of com.sun.jndi.ldap.pool.Pool
  - S8160122: Backport of JDK-8159244 used wrong version of the JDK 9 fix
  - S8160518: Semicolon is not recognized as comment starting character (Kerberos)
  - S8160693: ScriptRunData.java uses bitwise AND instead of logical AND
  - S8161144: Fix for JDK-8147451 failed: Crash in Method::checked_resolve_jmethod_id(_jmethodID*)
  - S8162510: 8u112 L10n resource file updates
  - S8164453: 8u112 L10n resource file update - msgdrop 20
* Import of OpenJDK 8 u121 build 13
  - S8037099: [macosx] Remove all references to GC from native OBJ-C code
  - S8059212: Modify sun/security/smartcardio manual regression tests so that they do not just fail if no cardreader found
  - S8139565: Restrict certificates with DSA keys less than 1024 bits
  - S8140422: Add mechanism to allow non default root CAs to be not subject to algorithm restrictions
  - S8148516: Improve the default strength of EC in JDK
  - S8151893: Add security property to configure XML Signature secure validation mode
  - S8152438: Threads may do significant work out of the non-shared overflow buffer
  - S8153438: Avoid repeated "Please insert a smart card" popup windows
  - S8154005: Add algorithm constraint that specifies the restriction date
  - S8154015: Apply algorithm constraints to timestamped code
  - S8159410: InetAddress.isReachable returns true for non existing IP adresses
  - S8160108: Implement Serialization Filtering
  - S8161228: URL objects with custom protocol handlers have port changed after deserializing
  - S8161571: Verifying ECDSA signatures permits trailing bytes
  - S8163304: jarsigner -verbose -verify should print the algorithms used to sign the jar
  - S8163583: [macosx] Press "To Back" button on the Dialog,the Dialog moves behind the Frame
  - S8164908: ReflectionFactory support for IIOP and custom serialization
  - S8165230: RMIConnection addNotificationListeners failing with specific inputs
  - S8166389: [TEST_BUG] closed/java/security/Security/ReadProp/ReadProp.sh failing
  - S8166393: disabledAlgorithms property should not be strictly parsed
  - S8166432: Bad 8u112 merge of sun/security/tools/jarsigner/warnings/Test.java
  - S8166591: [macos 10.12] Trackpad scrolling of text on OS X 10.12 Sierra is very fast (Trackpad, Retina only)
  - S8166739: Improve extensibility of ObjectInputFilter information passed to the filter
  - S8166875: (tz) Support tzdata2016g
  - S8166878: Connection reset during TLS handshake
  - S8167356: Follow up fix for jdk8 backport of 8164143. Changes for CMenuComponent.m were missed
  - S8167459: Add debug output for indicating if a chosen ciphersuite was legacy
  - S8167472: Chrome interop regression with JDK-8148516
  - S8167591: Add MD5 to signed JAR restrictions
  - S8168861: AnchorCertificates uses hardcoded password for cacerts keystore
  - S8168963: Backout JDK-8154005
  - S8168993: JDK8u121 L10n resource file update
  - S8169072: Backout JDK-8154015
  - S8169191: (tz) Support tzdata2016i
  - S8169688: Backout (remove) MD5 from jdk.jar.disabledAlgorithms for January CPU
  - S8169911: Enhanced tests for jarsigner -verbose -verify after JDK-8163304
  - S8170131: Certificates not being blocked by jdk.tls.disabledAlgorithms property
  - S8170268: 8u121 L10n resource file update - msgdrop 20
* Bug fixes
  - PR3271: Always round glyph advance in 26.6 space
  - PR3271: Fix compatibility with vanilla Fontconfig
  - PR3271: Fix glyph y advance
  - PR3271: Replace 'infinality' with 'improved font rendering' (--enable-improved-font-rendering)
  - PR3271: Simplify glyph advance handling
  - PR3286: -ffp-contract not available on older GCCs
  - PR3302: zip should be optional, as it's only used in the manually invoked dist-openjdk and dist-openjdk-fsg rules
  - PR3304: zip still a requirement of the underlying OpenJDK build
* PPC port
  - S8170873, PR3280: PPC64/aarch64: Poor StrictMath performance due to non-optimized compilation
* AArch64 port
  - S8130309, PR3280: Need to bailout cleanly if creation of stubs fails when codecache is out of space (AArch64 changes)
  - S8132875, PR3280: AArch64: Fix error introduced into AArch64 CodeCache by commit for 8130309
  - S8165673, PR3280: AArch64: Fix JNI floating point argument handling
  - S8170188, PR3280: jtreg test compiler/types/TestMeetIncompatibleInterfaceArrays.java causes JVM crash
  - S8170873, PR3280: PPC64/aarch64: Poor StrictMath performance due to non-optimized compilation

New in release 3.2.0 (2016-11-08):

* Security fixes
  - S8146490: Direct indirect CRL checks
  - S8151921: Improved page resolution
  - S8155968: Update command line options
  - S8155973, CVE-2016-5542: Tighten jar checks
  - S8156794: Extend data sharing
  - S8157176: Improved classfile parsing
  - S8157739, CVE-2016-5554: Classloader Consistency Checking
  - S8157749: Improve handling of DNS error replies
  - S8157753: Audio replay enhancement
  - S8157759: LCMS Transform Sampling Enhancement
  - S8157764: Better handling of interpolation plugins
  - S8158302: Handle contextual glyph substitutions
  - S8158993, CVE-2016-5568: Service Menu services
  - S8159495: Fix index offsets
  - S8159503: Amend Annotation Actions
  - S8159511: Stack map validation
  - S8159515: Improve indy validation
  - S8159519, CVE-2016-5573: Reformat JDWP messages
  - S8160090: Better signature handling in pack200
  - S8160094: Improve pack200 layout
  - S8160098: Clean up color profiles
  - S8160591, CVE-2016-5582: Improve internal array handling
  - S8160838, CVE-2016-5597: Better HTTP service
  - PR3206, RH1367357: lcms2: Out-of-bounds read in Type_MLU_Read()
* New features
  - PR1370: Provide option to build without debugging
  - PR1375: Provide option to strip and link debugging info after build
  - PR1537: Handle alternative Kerberos credential cache locations
  - PR1978: Allow use of system PCSC
  - PR2445: Support system libsctp
  - PR3182: Support building without pre-compiled headers
  - PR3183: Support Fedora/RHEL system crypto policy
  - PR3221: Use pkgconfig to detect Kerberos CFLAGS and libraries
* Import of OpenJDK 8 u102 build 14
  - S4515292: ReferenceType.isStatic() returns true for arrays
  - S4858370: JDWP: Memory Leak: GlobalRefs never deleted when processing invokeMethod command
  - S6976636: JVM/TI test ex03t001 fails assertion
  - S7185591: jcmd-big-script.sh ERROR: could not find app's Java pid.
  - S8017462: G1: guarantee fails with UseDynamicNumberOfGCThreads
  - S8034168: ThreadMXBean/Locks.java failed, blocked on wrong object
  - S8036006: [TESTBUG] sun/tools/native2ascii/NativeErrors.java fails: Process exit code was 0, but error was expected.
  - S8041781: Need new regression tests for PBE keys
  - S8041787: Need new regressions tests for buffer handling for PBE algorithms
  - S8043836: Need new tests for AES cipher
  - S8044199: Tests for RSA keys and key specifications
  - S8044772: TempDirTest.java still times out with -Xcomp
  - S8046339: sun.rmi.transport.DGCAckHandler leaks memory
  - S8047031: Add SocketPermission tests for legacy socket types
  - S8048052: Permission tests for setFactory
  - S8048138: Tests for JAAS callbacks
  - S8048147: Privilege tests with JAAS Subject.doAs
  - S8048356: SecureRandom default provider tests
  - S8048357: PKCS basic tests
  - S8048360: Test signed jar files
  - S8048362: Tests for doPrivileged with accomplice
  - S8048596: Tests for AEAD ciphers
  - S8048599: Tests for key wrap and unwrap operations
  - S8048603: Additional tests for MAC algorithms
  - S8048604: Tests for strong crypto ciphers
  - S8048607: Test key generation of DES and DESEDE
  - S8048610: Implement regression test for bug fix of 4686632 in JCE
  - S8048617: Tests for PKCS12 read operations
  - S8048618: Tests for PKCS12 write operations.
  - S8048619: Implement tests for converting PKCS12 keystores
  - S8048624: Tests for SealedObject
  - S8048819: Implement reliability test for DH algorithm
  - S8048820: Implement tests for SecretKeyFactory
  - S8048830: Implement tests for new functionality provided in JEP 166
  - S8049237: Need new tests for X509V3 certificates
  - S8049321: Support SHA256WithDSA in JSSE
  - S8049429: Tests for java client server communications with various TLS/SSL combinations.
  - S8049432: New tests for TLS property jdk.tls.client.protocols
  - S8049814: Additional SASL client-server tests
  - S8050281: New permission tests for JEP 140
  - S8050370: Need new regressions tests for messageDigest with DigestIOStream
  - S8050371: More MessageDigest tests
  - S8050374: More Signature tests
  - S8050427: LoginContext tests to cover JDK-4703361
  - S8050460: JAAS login/logout tests with LoginContext
  - S8050461: Tests for syntax checking of JAAS configuration file
  - S8054278: Refactor jps utility tests
  - S8055530: assert(_exits.control()->is_top() || !_gvn.type(ret_phi)->empty()) failed: return value must be well defined
  - S8055844: [TESTBUG] test/runtime/NMT/VirtualAllocCommitUncommitRecommit.java fails on Solaris Sparc due to incorrect page size being used
  - S8059677: Thread.getName() instantiates Strings
  - S8061464: A typo in CipherTestUtils test
  - S8062536: [TESTBUG] Conflicting GC combinations in jdk tests
  - S8065076: java/net/SocketPermission/SocketPermissionTest.java fails intermittently
  - S8065078: NetworkInterface.getNetworkInterfaces() triggers intermittent test failures
  - S8066871: java.lang.VerifyError: Bad local variable type - local final String
  - S8068427: Hashtable deserialization reconstitutes table with wrong capacity
  - S8069038: javax/net/ssl/TLS/TLSClientPropertyTest.java needs to be updated for JDK-8061210
  - S8069253: javax/net/ssl/TLS/TestJSSE.java failed on Mac
  - S8071125: Improve exception messages in URLPermission
  - S8072081: Supplementary characters are rejected in comments
  - S8072463: Remove requirement that AKID and SKID have to match when building certificate chain
  - S8072725: Provide more granular levels for GC verification
  - S8073400: Some Monospaced logical fonts have a different width
  - S8073872: Schemagen fails with StackOverflowError if element references containing class
  - S8074931: Additional tests for CertPath API
  - S8075286: Additional tests for signature algorithm OIDs and transformation string
  - S8076486: [TESTBUG] javax/security/auth/Subject/doAs/NestedActions.java fails if extra VM options are given
  - S8076545: Text size is twice bigger under Windows L&F on Win 8.1 with HiDPI display
  - S8076995: gc/ergonomics/TestDynamicNumberOfGCThreads.java failed with java.lang.RuntimeException: 'new_active_workers' missing from stdout/stderr
  - S8079138: Additional negative tests for XML signature processing
  - S8081512: Remove sun.invoke.anon classes, or move / co-locate them with tests
  - S8081771: ProcessTool.createJavaProcessBuilder() needs new addTestVmAndJavaOptions argument
  - S8129419: heapDumper.cpp: assert(length_in_bytes > 0) failed: nothing to copy
  - S8130150: Implement BigInteger.montgomeryMultiply intrinsic
  - S8130242: DataFlavorComparator transitivity exception
  - S8130304: Inference: NodeNotFoundException thrown with deep generic method call chain
  - S8130425: libjvm crash due to stack overflow in executables with 32k tbss/tdata
  - S8133023: ParallelGCThreads is not calculated correctly
  - S8134111: Unmarshaller unmarshalls XML element which doesn't have the expected namespace
  - S8135259: InetAddress.getAllByName only reports "unknown error" instead of actual cause
  - S8136506: Include sun.arch.data.model as a property that can be queried by jtreg
  - S8137068: Tests added in JDK-8048604 fail to compile
  - S8139040: Fix initializations before ShouldNotReachHere() etc. and enable -Wuninitialized on linux.
  - S8139581: AWT components are not drawn after removal and addition to a container
  - S8141243: Unexpected timezone returned after parsing a date
  - S8141420: Compiler runtime entries don't hold Klass* from being GCed
  - S8141445: Use of Solaris/SPARC M7 libadimalloc.so can generate unknown signal in hs_err file
  - S8141551: C2 can not handle returns with inccompatible interface arrays
  - S8143377: Test PKCS8Test.java fails
  - S8143647: Javac compiles method reference that allows results in an IllegalAccessError
  - S8144144: ORB destroy() leaks filedescriptors after unsuccessful connection
  - S8144593: Suppress not recognized property/feature warning messages from SAXParser
  - S8144957: Remove PICL warning message
  - S8145039: JAXB marshaller fails with ClassCastException on classes generated by xjc
  - S8145228: Java Access Bridge, getAccessibleStatesStringFromContext doesn't wrap the call to getAccessibleRole
  - S8145388: URLConnection.guessContentTypeFromStream returns image/jpg for some JPEG images
  - S8145974: XMLStreamWriter produces invalid XML for surrogate pairs on OutputStreamWriter
  - S8146035: Windows - With LCD antialiasing, some glyphs are not rendered correctly
  - S8146192: Add test for JDK-8049321
  - S8146274: Thread spinning on WeakHashMap.getEntry() with concurrent use of nashorn
  - S8147468: Allow users to bound the size of buffers cached in the per-thread buffer caches
  - S8147645: get_ctrl_no_update() code is wrong
  - S8147807: crash in libkcms.so on linux-sparc
  - S8148379: jdk.nashorn.api.scripting spec. adjustments, clarifications
  - S8148627: RestrictTestMaxCachedBufferSize.java to 64-bit platforms
  - S8148820: Missing @since Javadoc tag in Logger.log(Level, Supplier)
  - S8148926: Call site profiling fails on braces-wrapped anonymous function
  - S8149017: Delayed provider selection broken in RSA client key exchange
  - S8149029: Secure validation of XML based digital signature always enabled when checking wrapping attacks
  - S8149330: Capacity of StringBuilder should not get close to Integer.MAX_VALUE unless necessary
  - S8149334: JSON.parse(JSON.stringify([])).push(10) creates an array containing two elements
  - S8149368: [hidpi] JLabel font is twice bigger than JTextArea font on Windows 7,HiDPI, Windows L&F
  - S8149411: PKCS12KeyStore cannot extract AES Secret Keys
  - S8149417: Use final restricted flag
  - S8149450: LdapCtx.processReturnCode() throwing Null Pointer Exception
  - S8149453: [hidpi] JFileChooser does not scale properly on Windows with HiDPI display and Windows L&F
  - S8149543: range check CastII nodes should not be split through Phi
  - S8149743: JVM crash after debugger hotswap with lambdas
  - S8149744: fix testng.jar delivery in Nashorn build.xml
  - S8149915: enabling validate-annotations feature for xsd schema with annotation causes NPE
  - S8150002: Check for the validity of oop before printing it in verify_remembered_set
  - S8150470: JCK: api/xsl/conf/copy/copy19 test failure
  - S8150518: G1 GC crashes at G1CollectedHeap::do_collection_pause_at_safepoint(double)
  - S8150533: Test java/util/logging/LogManagerAppContextDeadlock.java times out intermittently.
  - S8150704: XALAN: ERROR: 'No more DTM IDs are available' when transforming with lots of temporary result trees
  - S8150780: Repeated offer and remove on ConcurrentLinkedQueue lead to an OutOfMemoryError
  - S8151064: com/sun/jdi/RedefineAddPrivateMethod.sh fails intermittently
  - S8151197: [TEST_BUG] Need to backport fix for test/javax/net/ssl/TLS/TestJSSE.java
  - S8151352: jdk/test/sample fails with "effective library path is outside the test suite"
  - S8151431: DateFormatSymbols triggers this.clone() in the constructor
  - S8151535: TESTBUG: java/lang/invoke/AccessControlTest.java should be modified to run with JTREG 4.1 b13
  - S8151731: Add new jtreg keywords to jdk 8
  - S8151998: VS2010 ThemeReader.cpp(758) : error C3861: 'round': identifier not found
  - S8152927: Incorrect GPL header in StubFactoryDynamicBase.java reported
  - S8153252: SA: Hotspot build on Windows fails if make/closed folder does not exist
  - S8153531: Improve exception messaging for RSAClientKeyExchange
  - S8153641: assert(thread_state == _thread_in_native) failed: Assumed thread_in_native while heap dump
  - S8153673: [BACKOUT] JDWP: Memory Leak: GlobalRefs never deleted when processing invokeMethod command
  - S8154304: NullpointerException at LdapReferralException.getReferralContext
  - S8154722: Test gc/ergonomics/TestDynamicNumberOfGCThreads.java fails
  - S8157078: 8u102 L10n resource file updates
  - S8157838: Personalized Windows Font Size is not taken into account in Java8u102
* Import of OpenJDK 8 u111 build 14
  - S6882559: new JEditorPane("text/plain","") fails for null context class loader
  - S8049171: Additional tests for jarsigner's warnings
  - S8063086: Math.pow yields different results upon repeated calls
  - S8140530: Creating a VolatileImage with size 0,0 results in no longer working g2d.drawString
  - S8142926: OutputAnalyzer's shouldXXX() calls return this
  - S8147077: IllegalArgumentException thrown by api/java_awt/Component/FlipBufferStrategy/indexTGF_General
  - S8148127: IllegalArgumentException thrown by JCK test api/java_awt/Component/FlipBufferStrategy/indexTGF_General in opengl pipeline
  - S8150611: Security problem on sun.misc.resources.Messages*
  - S8153399: Constrain AppCDS behavior (back port)
  - S8157653: [Parfait] Uninitialised variable in awt_Font.cpp
  - S8158734: JEditorPane.createEditorKitForContentType throws NPE after 6882559
  - S8158994: Service Menu services
  - S8159684: (tz) Support tzdata2016f
  - S8160904: Typo in code from 8079718 fix : enableCustomValueHanlde
  - S8160934: isnan() is not available on older MSVC compilers
  - S8161141: correct bugId for JDK-8158994 fix push
  - S8162411: Service Menu services 2
  - S8162419: closed/com/oracle/jfr/runtime/TestVMInfoEvent.sh failing after JDK-8155968
  - S8162511: 8u111 L10n resource file updates
  - S8162792: Remove constraint DSA keySize < 1024 from jdk.jar.disabledAlgorithms in jdk8
  - S8164452: 8u111 L10n resource file update - msgdrop 20
  - S8165816: jarsigner -verify shows jar unsigned if it was signed with a weak algorithm
  - S8166381: Back out changes to the java.security file to not disable MD5
* Backports
  - S8078628, PR3208: Zero build fails with pre-compiled headers disabled
  - S8141491, PR3159, G592292: Unaligned memory access in Bits.c
  - S8157306, PR3121: Random infrequent null pointer exceptions in javac (enabled on AArch64 only)
  - S8162384, PR3122: Performance regression: bimorphic inlining may be bypassed by type speculation
* Bug fixes
  - PR3123: Some object files built without -fPIC on x86 only
  - PR3126: pax-mark-vm script calls "exit -1" which is invalid in dash
  - PR3127, G590348: Only apply PaX markings by default on running PaX kernels
  - PR3199: Invalid nashorn URL
  - PR3201: Update infinality configure test
  - PR3218: PR3159 leads to build failure on clean tree
* AArch64 port
  - S8131779, PR3220: AARCH64: add Montgomery multiply intrinsic
  - S8167200, PR3220: AArch64: Broken stack pointer adjustment in interpreter
  - S8167421, PR3220: AArch64: in one core system, fatal error: Illegal threadstate encountered
  - S8167595, PR3220: AArch64: SEGV in stub code cipherBlockChaining_decryptAESCrypt
  - S8168888, PR3220: Port 8160591: Improve internal array handling to AArch64.
* Shenandoah
  - PR3224: Shenandoah broken when building without pre-compiled headers

New in release 3.1.0 (2016-07-25):

* Security fixes
  - S8079718, CVE-2016-3458: IIOP Input Stream Hooking
  - S8145446, CVE-2016-3485: Perfect pipe placement (Windows only)
  - S8146514: Enforce GCM limits
  - S8147771: Construction of static protection domains under Javax custom policy
  - S8148872, CVE-2016-3500: Complete name checking
  - S8149070: Enforce update ordering
  - S8149962, CVE-2016-3508: Better delineation of XML processing
  - S8150752: Share Class Data
  - S8151925: Font reference improvements
  - S8152479, CVE-2016-3550: Coded byte streams
  - S8153312: Constrain AppCDS behavior
  - S8154475, CVE-2016-3587: Clean up lookup visibility
  - S8155981, CVE-2016-3606: Bolster bytecode verification
  - S8155985, CVE-2016-3598: Persistent Parameter Processing
  - S8158571, CVE-2016-3610: Additional method handle validation
* New features
  - S8145547, PR1061: [AWT/Swing] Conditional support for GTK 3 on Linux
  - PR2821: Support building OpenJDK with --disable-headful
  - PR2931, G478960: Provide Infinality Support via fontconfig
  - PR3079: Provide option to build Shenandoah on x86_64
* Import of OpenJDK 8 u92 build 14
  - S6869327: Add new C2 flag to keep safepoints in counted loops.
  - S8022865: [TESTBUG] Compressed Oops testing needs to be revised
  - S8029630: Thread id should be displayed as a hex number in error report
  - S8029726: On OS X some dtrace probe names are mismatched with Solaris
  - S8029727: On OS X dtrace probes Call<type>MethodA/Call<type>MethodV are not fired.
  - S8029728: On OS X dtrace probes SetStaticBooleanField are not fired
  - S8038184: XMLSignature throws StringIndexOutOfBoundsException if ID attribute value is empty String
  - S8038349: Signing XML with DSA throws Exception when key is larger than 1024 bits
  - S8041501: ImageIO reader is not capable of reading JPEGs without JFIF header
  - S8041900: [macosx] Java forces the use of discrete GPU
  - S8044363: Remove special build options for unpack200 executable
  - S8046471: Use OPENJDK_TARGET_CPU_ARCH instead of legacy value for hotspot ARCH
  - S8046611: Build errors with gcc on sparc/fastdebug
  - S8047763: Recognize sparc64 as a sparc platform
  - S8048232: Fix for 8046471 breaks PPC64 build
  - S8052396: Catch exceptions resulting from missing font cmap
  - S8058563: InstanceKlass::_dependencies list isn't cleared from empty nmethodBucket entries
  - S8061624: [TESTBUG] Some tests cannot be ran under compact profiles and therefore shall be excluded
  - S8062901: Iterators is spelled incorrectly in the Javadoc for Spliterator
  - S8064330: Remove SHA224 from the default support list if SunMSCAPI enabled
  - S8065579: WB method to start G1 concurrent mark cycle should be introduced
  - S8065986: Compiler fails to NullPointerException when calling super with Object<>()
  - S8066974: Compiler doesn't infer method's generic type information in lambda body
  - S8067800: Clarify java.time.chrono.Chronology.isLeapYear for out of range years
  - S8068033: JNI exception pending in jdk/src/share/bin/java.c
  - S8068042: Check jdk/src/share/native/sun/misc/URLClassPath.c for JNI pending
  - S8068162: jvmtiRedefineClasses.cpp: guarantee(false) failed: OLD and/or OBSOLETE method(s) found
  - S8068254: Method reference uses wrong qualifying type
  - S8074696: Remote debugging session hangs for several minutes when calling findBootType
  - S8074935: jdk8 keytool doesn't validate pem files for RFC 1421 correctness, as jdk7 did
  - S8078423: [TESTBUG] javax/print/PrintSEUmlauts/PrintSEUmlauts.java relies on system locale
  - S8080492: [Parfait] Uninitialised variable in jdk/src/java/desktop/windows/native/libawt/
  - S8080650: Enable stubs to use frame pointers correctly
  - S8122944: perfdata used is seen as too high on sparc zone with jdk1.9 and causes a test failure
  - S8129348: Debugger hangs in trace mode with TRACE_SENDS
  - S8129847: Compiling methods generated by Nashorn triggers high memory usage in C2
  - S8130506: javac AssertionError when invoking MethodHandle.invoke with lambda parameter
  - S8130910: hsperfdata file is created in wrong directory and not cleaned up if /tmp/hsperfdata_<username> has wrong permissions
  - S8131129: Attempt to define a duplicate BMH$Species class
  - S8131665: Bad exception message in HandshakeHash.getFinishedHash
  - S8131782: C1 Class.cast optimization breaks when Class is loaded from static final
  - S8132503: [macosx] Chinese full stop symbol cannot be entered with Pinyin IM on OS X
  - S8133207: ParallelProbes.java test fails after changes for JDK-8080115
  - S8133924: NPE may be thrown when xsltc select a non-existing node after JDK-8062518
  - S8134007: Improve string folding
  - S8134759: jdb: Incorrect stepping inside finally block
  - S8134963: [Newtest] New stress test for changing the coarseness level of G1 remembered set
  - S8136442: Don't tie Certificate signature algorithms to ciphersuites
  - S8137106: EUDC (End User Defined Characters) are not displayed on Windows with Java 8u60+
  - S8138745: Implement ExitOnOutOfMemory and CrashOnOutOfMemory in HotSpot
  - S8138764: In some cases the usage of TreeLock can be replaced by other synchronization
  - S8139373: [TEST_BUG] java/net/MulticastSocket/MultiDead.java failed with timeout
  - S8139424: SIGSEGV, Problematic frame: # V [libjvm.so+0xd0c0cc] void InstanceKlass::oop_oop_iterate_oop_maps_specialized<true,oopDesc*,MarkAndPushClosure>
  - S8139436: sun.security.mscapi.KeyStore might load incomplete data
  - S8139751: Javac crash with -XDallowStringFolding=false
  - S8139863: [TESTBUG] Need to port tests for JDK-8134903 to 8u-dev
  - S8139985: JNI exception pending in jdk/src/jdk/hprof/agent/share/native/libhprof
  - S8140031: SA: Searching for a value in Threads does not work
  - S8140249: JVM Crashing During startUp If Flight Recording is enabled
  - S8140344: add support for 3 digit update release numbers
  - S8140587: Atomic*FieldUpdaters should use Class.isInstance instead of direct class check
  - S8141260: isReachable crash in windows xp
  - S8143297: Nashorn compilation time reported in nanoseconds
  - S8143397: It looks like InetAddress.isReachable(timeout) works incorrectly
  - S8143855: Bad printf formatting in frame_zero.cpp
  - S8143896: java.lang.Long is implicitly converted to double
  - S8143963: improve ClassLoader::trace_class_path to accept an additional outputStream* arg
  - S8144020: Remove long as an internal numeric type
  - S8144131: ArrayData.getInt implementations do not convert to int32
  - S8144483: One long Safepoint pause directly after each GC log rotation
  - S8144487: PhaseIdealLoop::build_and_optimize() must restore major_progress flag if skip_loop_opts is true
  - S8144885: agent/src/os/linux/libproc.h needs to support Linux/SPARC builds
  - S8144935: C2: safepoint is pruned from a non-counted loop
  - S8144937: [TEST_BUG] testlibrary_tests should be excluded for compact1 and compact2 execution
  - S8145017: Add support for 3 digit hotspot minor version numbers
  - S8145099: Better error message when SA can't attach to a process
  - S8145442: Add the facility to verify remembered sets for G1
  - S8145466: javac: No line numbers in compilation error
  - S8145539: (coll) AbstractMap.keySet and .values should not be volatile
  - S8145550: Megamorphic invoke should use CompiledFunction variants without any LinkLogic
  - S8145669: apply2call optimized callsite fails after becoming megamorphic
  - S8145722: NullPointerException in javadoc
  - S8145754: PhaseIdealLoop::is_scaled_iv_plus_offset() does not match AddI
  - S8146147: Java linker indexed property getter does not work for computed nashorn string
  - S8146566: OpenJDK build can't handle commas in LDFLAGS
  - S8146725: Issues with SignatureAndHashAlgorithm.getSupportedAlgorithms
  - S8146979: Backport of 8046471 breaks ppc64 build in jdk8u because 8072383 was badly backported before
  - S8147087: Race when reusing PerRegionTable bitmaps may result in dropped remembered set entries
  - S8147630: Wrong test result pushed to 8u-dev
  - S8147845: Varargs Array functions still leaking longs
  - S8147857: RMIConnector logs attribute names incorrectly
  - S8148353: [linux-sparc] Crash in libawt.so on Linux SPARC
  - S8150791: 8u76 L10n resource file translation update
* Import of OpenJDK 8 u101 build 13
  - S6483657: MSCAPI provider does not create unique alias names
  - S6675699: need comprehensive fix for unconstrained ConvI2L with narrowed type
  - S8037557: test SessionCacheSizeTests.java timeout
  - S8038837: Add support to jarsigner for specifying timestamp hash algorithm
  - S8081778: Use Intel x64 CPU instructions for RSA acceleration
  - S8130150: Implement BigInteger.montgomeryMultiply intrinsic
  - S8130735: javax.swing.TimerQueue: timer fires late when another timer starts
  - S8143913: MSCAPI keystore should accept Certificate[] in setEntry()
  - S8144313: Test SessionTimeOutTests can be timeout
  - S8146240: Three nashorn files contain "GNU General Public License" header
  - S8146387: Test SSLSession/SessionCacheSizeTests socket accept timed out
  - S8146669: Test SessionTimeOutTests fails intermittently
  - S8146993: Several javax/management/remote/mandatory regression tests fail after JDK-8138811
  - S8147994: [macosx] JScrollPane jitters up/down during trackpad scrolling on MacOS/Aqua
  - S8151522: Disable 8130150 and 8081778 intrinsics by default
  - S8151876: (tz) Support tzdata2016d
  - S8152098: Fix 8151522 caused test compiler/intrinsics/squaretolen/TestSquareToLen.java to fail
  - S8157077: 8u101 L10n resource file updates
* Backports
  - S6260348, PR3066: GTK+ L&F JTextComponent not respecting desktop caret blink rate
  - S6778087, PR1061: getLocationOnScreen() always returns (0, 0) for mouse wheel events
  - S6961123, PR2972: setWMClass fails to null-terminate WM_CLASS string
  - S8008657, PR3077: JSpinner setComponentOrientation doesn't affect on text orientation
  - S8014212, PR2866: Robot captures black screen
  - S8029339, PR1061: Custom MultiResolution image support on HiDPI displays
  - S8031145, PR3077: Re-examine closed i18n tests to see it they can be moved to the jdk repository.
  - S8034856, PR3095: gcc warnings compiling src/solaris/native/sun/security/pkcs11
  - S8034857, PR3095: gcc warnings compiling src/solaris/native/sun/management
  - S8035054, PR3095: JarFacade.c should not include ctype.h
  - S8035287, PR3095: gcc warnings compiling various libraries files
  - S8038631, PR3077: Create wrapper for awt.Robot with additional functionality
  - S8039279, PR3077: Move awt tests to openjdk repository
  - S8041561, PR3077: Inconsistent opacity behaviour between JCheckBox and JRadioButton
  - S8041592, PR3077: [TEST_BUG] Move 42 AWT hw/lw mixing tests to jdk
  - S8041915, PR3077: Move 8 awt tests to OpenJDK regression tests tree
  - S8043126, PR3077: move awt automated functional tests from AWT_Events/Lw and AWT_Events/AWT to OpenJDK repository
  - S8043131, PR3077: Move ShapedAndTranslucentWindows and GC functional AWT tests to regression tree
  - S8044157, PR3077: [TEST_BUG] Improve recently submitted AWT_Mixing tests
  - S8044172, PR3077: [TEST_BUG] Move regtests for 4523758 and AltPlusNumberKeyCombinationsTest to jdk
  - S8044429, PR3077: move awt automated tests for AWT_Modality to OpenJDK repository
  - S8044762, PR2960: com/sun/jdi/OptionTest.java test time out
  - S8044765, PR3077: Move functional tests AWT_SystemTray/Automated to openjdk repository
  - S8047180, PR3077: Move functional tests AWT_Headless/Automated to OpenJDK repository
  - S8047367, PR3077: move awt automated tests from AWT_Modality to OpenJDK repository - part 2
  - S8048246, PR3077: Move AWT_DnD/Clipboard/Automated functional tests to OpenJDK
  - S8049226, PR2960: com/sun/jdi/OptionTest.java test times out again
  - S8049617, PR3077: move awt automated tests from AWT_Modality to OpenJDK repository - part 3
  - S8049694, PR3077: Migrate functional AWT_DesktopProperties/Automated tests to OpenJDK
  - S8050885, PR3077: move awt automated tests from AWT_Modality to OpenJDK repository - part 4
  - S8051440, PR3077: move tests about maximizing undecorated to OpenJDK
  - S8052012, PR3077: move awt automated tests from AWT_Modality to OpenJDK repository - part 5
  - S8052408, PR3077: Move AWT_BAT functional tests to OpenJDK (3 of 3)
  - S8053657, PR3077: [TEST_BUG] move some 5 tests related to undecorated Frame/JFrame to JDK
  - S8054143, PR3077: move awt automated tests from AWT_Modality to OpenJDK repository - part 6
  - S8054358, PR3077: move awt automated tests from AWT_Modality to OpenJDK repository - part 7
  - S8054359, PR3077: move awt automated tests from AWT_Modality to OpenJDK repository - part 8
  - S8055360, PR3077: Move the rest part of AWT ShapedAndTranslucent tests to OpenJDK
  - S8055664, PR3077: move 14 tests about setLocationRelativeTo to jdk
  - S8055836, PR3077: move awt tests from AWT_Modality to OpenJDK repository - part 9
  - S8056911, PR3077: Remove internal API usage from ExtendedRobot class
  - S8057694, PR3077: move awt tests from AWT_Modality to OpenJDK repository - part 10
  - S8058959, PR1061: closed/java/awt/event/ComponentEvent/MovedResizedTwiceTest/MovedResizedTwiceTest.java failed automatically
  - S8062606, PR3077: Fix a typo in java.awt.Robot class
  - S8063102, PR3077: Change open awt regression tests to avoid sun.awt.SunToolkit.realSync, part 1
  - S8063104, PR3077: Change open awt regression tests to avoid sun.awt.SunToolkit.realSync, part 2
  - S8063106, PR3077: Change open swing regression tests to avoid sun.awt.SunToolkit.realSync, part 1
  - S8063107, PR3077: Change open swing regression tests to avoid sun.awt.SunToolkit.realSync, part 2
  - S8064573, PR3077: [TEST_BUG] javax/swing/text/AbstractDocument/6968363/Test6968363.java is asocial pressing VK_LEFT and not releasing
  - S8064575, PR3077: [TEST_BUG] javax/swing/JEditorPane/6917744/bug6917744.java 100 times press keys and never releases
  - S8064809, PR3077: [TEST_BUG] javax/swing/JComboBox/4199622/bug4199622.java contains a lot of keyPress and not a single keyRelease
  - S8067441, PR3077: Some tests fails with error: cannot find symbol getSystemMnemonicKeyCodes()
  - S8068228, PR3077: Test closed/java/awt/Mouse/MaximizedFrameTest/MaximizedFrameTest fails with GTKLookAndFeel
  - S8069361, PR1061: SunGraphics2D.getDefaultTransform() does not include scale factor
  - S8073320, PR1061: Windows HiDPI Graphics support
  - S8074807, PR3077: Fix some tests unnecessary using internal API
  - S8076315, PR3077: move 4 manual functional swing tests to regression suite
  - S8078504, PR3094: Zero lacks declaration of VM_Version::initialize()
  - S8129822, PR3077: Define "headful" jtreg keyword
  - S8132123, PR1061: MultiResolutionCachedImage unnecessarily creates base image to get its size
  - S8133539, PR1061: [TEST_BUG] Split java/awt/image/MultiResolutionImageTest.java in two to allow restricted access
  - S8137571, PR1061: Linux HiDPI Graphics support
  - S8142406, PR1061: [TEST] MultiResolution image: need test to cover the case when @2x image is corrupted
  - S8145188, PR2945: No LocalVariableTable generated for the entire JDK
  - S8150258, PR1061: [TEST] HiDPI: create a test for multiresolution menu items icons
  - S8150724, PR1061: [TEST] HiDPI: create a test for multiresolution icons
  - S8150844, PR1061: [hidpi] [macosx] -Dsun.java2d.uiScale should be taken into account for OS X
  - S8151841, PR2882: Build needs additional flags to compile with GCC 6 [plus parts of 8149647 & 8032045]
  - S8155613, PR1061: [PIT] crash in AWT_Desktop/Automated/Exceptions/BasicTest
  - S8156020, PR1061: 8145547 breaks AIX and and uses RTLD_NOLOAD incorrectly
  - S8156128, PR1061: Tests for [AWT/Swing] Conditional support for GTK 3 on Linux
  - S8158260, PR2991, RH1341258: PPC64: unaligned Unsafe.getInt can lead to the generation of illegal instructions
  - S8159244, PR3074: Partially initialized string object created by C2's string concat optimization may escape
  - S8159690, PR3077: [TESTBUG] Mark headful tests with @key headful.
  - S8160294, PR2882, PR3095: Some client libraries cannot be built with GCC 6
* Bug fixes
  - PR1958: GTKLookAndFeel does not honor gtk-alternative-button-order
  - PR2822: Feed LIBS & CFLAGS into configure rather than make to avoid re-discovery by OpenJDK configure
  - PR2932: Support ccache in a non-automagic manner
  - PR2933: Support ccache 3.2 and later
  - PR2964: Set system defaults based on OS
  - PR2974, RH1337583: PKCS#10 certificate requests now use CRLF line endings rather than system line endings
  - PR3078: Remove duplicated line dating back to 6788347 and 6894807
  - PR3083, RH1346460: Regression in SSL debug output without an ECC provider
  - PR3089: Remove old memory limits patch
  - PR3090, RH1204159: SystemTap is heavily confused by multiple JDKs
  - PR3095: Fix warnings in URLClassPath.c
  - PR3096: Remove dead --disable-optimizations option
  - PR3105: Use version from hotspot.map to create tarball filename
  - PR3106: Handle both correctly-spelt property "enableCustomValueHandler" introduced by S8079718 and typo version
  - PR3108: Shenandoah patches not included in release tarball
  - PR3110: Update hotspot.map documentation in INSTALL
* AArch64 port
  - S8145320, PR3078: Create unsafe_arraycopy and generic_arraycopy for AArch64
  - S8148328, PR3078: aarch64: redundant lsr instructions in stub code.
  - S8148783, PR3078: aarch64: SEGV running SpecJBB2013
  - S8148948, PR3078: aarch64: generate_copy_longs calls align() incorrectly
  - S8149080, PR3078: AArch64: Recognise disjoint array copy in stub code
  - S8149365, PR3078: aarch64: memory copy does not prefetch on backwards copy
  - S8149907, PR3078: aarch64: use load/store pair instructions in call_stub
  - S8150038, PR3078: aarch64: make use of CBZ and CBNZ when comparing narrow pointer with zero
  - S8150045, PR3078: arraycopy causes segfaults in SATB during garbage collection
  - S8150082, PR3078: aarch64: optimise small array copy
  - S8150229, PR3078: aarch64: pipeline class for several instructions is not set correctly
  - S8150313, PR3078: aarch64: optimise array copy using SIMD instructions
  - S8150394, PR3078: aarch64: add support for 8.1 LSE CAS instructions
  - S8151340, PR3078: aarch64: prefetch the destination word for write prior to ldxr/stxr loops.
  - S8151502, PR3078: optimize pd_disjoint_words and pd_conjoint_words
  - S8151775, PR3078: aarch64: add support for 8.1 LSE atomic operations
  - S8152537, PR3078: aarch64: Make use of CBZ and CBNZ when comparing unsigned values with zero.
  - S8152840, PR3078: aarch64: improve _unsafe_arraycopy stub routine
  - S8153713, PR3078: aarch64: improve short array clearing using store pair
  - S8153797, PR3078: aarch64: Add Arrays.fill stub code
  - S8154537, PR3078: AArch64: some integer rotate instructions are never emitted
  - S8154739, PR3078: AArch64: TemplateTable::fast_xaccess loads in wrong mode
  - S8155015, PR3078: Aarch64: bad assert in spill generation code
  - S8155100, PR3078: AArch64: Relax alignment requirement for byte_map_base
  - S8155612, PR3078: Aarch64: vector nodes need to support misaligned offset
  - S8155617, PR3078: aarch64: ClearArray does not use DC ZVA
  - S8155653, PR3078: TestVectorUnalignedOffset.java not pushed with 8155612
  - S8156731, PR3078: aarch64: java/util/Arrays/Correct.java fails due to _generic_arraycopy stub routine
  - S8157841, PR3078: aarch64: prefetch ignores cache line size
  - S8157906, PR3078: aarch64: some more integer rotate instructions are never emitted
  - S8158913, PR3078: aarch64: SEGV running Spark terasort
  - S8159052, PR3078: aarch64: optimise unaligned copies in pd_disjoint_words and pd_conjoint_words
  - S8159063, PR3078: aarch64: optimise unaligned array copy long
  - PR3078: Cleanup remaining differences from aarch64/jdk8u tree

New in release 3.0.1 (2016-04-23):

* Security fixes
  - S8129952, CVE-2016-0686: Ensure thread consistency
  - S8132051, CVE-2016-0687: Better byte behavior
  - S8138593, CVE-2016-0695: Make DSA more fair
  - S8139008: Better state table management
  - S8143167, CVE-2016-3425: Better buffering of XML strings
  - S8143945, CVE-2016-3426: Better GCM validation
  - S8144430, CVE-2016-3427: Improve JMX connections
  - S8146494: Better ligature substitution
  - S8146498: Better device table adjustments
* Import of OpenJDK 8 u91 build 14
  - S8002116: This JdbReadTwiceTest.sh gets an exit 1
  - S8007890: [TESTBUG] JcmdWithNMTDisabled.java fails when invoked with NMT explicitly turned on
  - S8036132: Tab characters in test/com/sun/jdi files
  - S8038963: com/sun/jdi tests fail because cygwin's ps sometimes misses processes
  - S8044419: TEST_BUG: com/sun/jdi/JdbReadTwiceTest.sh fails when run under root
  - S8059661: Test SoftReference and OOM behavior
  - S8067422: Lambda method names are unnecessarily unstable
  - S8073735: [TEST_BUG] compiler/loopopts/CountedLoopProblem.java got OOME
  - S8074146: [TEST_BUG] jdb has succeded to read an unreadable file
  - S8130212: Thread::current() might access freed memory on Solaris
  - S8132890: Text Overlapping on Dot Matrix Printers
  - S8134297: NPE in GSSNameElement nameType check
  - S8134650: Xsl transformation gives different results in 8u66
  - S8134828: Scrollbar thumb disappears with Nimbus L&F
  - S8138589: Correct limits on unlimited cryptography
  - S8138811: Construction of static protection domains
  - S8140268: Generate link to specification license for JavaDoc API documentation
  - S8141229: [Parfait] Null pointer dereference in cmsstrcasecmp of cmserr.c
  - S8143002: [Parfait] JNI exception pending in fontpath.c:1300
  - S8143959: Certificates requiring blacklisting
  - S8146477: [TEST_BUG] ClientJSSEServerJSSE.java failing again
  - S8146518: Zero interpreter broken with better byte behaviour
  - S8146967: [TEST_BUG] javax/security/auth/SubjectDomainCombiner/Optimize.java should use 4-args ProtectionDomain constructor
  - S8147567: InterpreterRuntime::post_field_access not updated for boolean in JDK-8132051
  - S8148446: (tz) Support tzdata2016a
  - S8148475: Missing SA Bytecode updates.
  - S8148487: PPC64: Better byte behavior
  - S8148522: Backout JDK-8138811 from 2016 Apr CPU repo
  - S8149170: Better byte behavior for native arguments
  - S8149367: PolicyQualifierInfo/index_Ctor JCk test fails with IOE: Invalid encoding for PolicyQualifierInfo
  - S8150012: Better byte behavior for reflection
  - S8150790: 8u75 L10n resource file translation update
* Backports
  - S8148752, PR2943: Compiled StringBuilder code throws StringIndexOutOfBoundsException
  - S8154210: Zero: Better byte behaviour
  - S8154413: AArch64: Better byte behaviour
* Bug fixes
  - PR2933: Support ccache 3.2 and later
  - PR2934, G579676: SunEC provider throwing KeyException with current NSS

New in release 3.0.0 (2016-04-08):

* Rebase on jdk8u77-b03
* Backports
  - S4890063, PR2304, RH1214835: HPROF: default text truncated when using doe=n option
  - S6425769, PR2859: Allow specifying an address to bind JMX remote connector
  - S8000650, PR2462: unpack200.exe should check gzip crc
  - S8031668, PR2842: TOOLCHAIN_FIND_COMPILER unexpectedly resolves symbolic links
  - S8035341: Allow using a system installed libpng
  - S8038392, RH1064383: Generating prelink cache breaks JAVA 'jinfo' utility normal behavior
  - S8042159: Allow using a system-installed lcms2
  - S8042806: Splashscreen uses libjpeg-internal macros
  - S8043805: Allow using a system-installed libjpeg
  - S8044235: src.zip should include all sources
  - S8074839, PR2462: Resolve disabled warnings for libunpack and the unpack200 binary
  - S8074859, PR1937: Turn on warnings as error
  - S8087218, PR2740: Constant fold loads from final instance fields in VM anonymous classes
  - S8139932, PR2739: Typo in makefile changes for 8043805 [Allow using a system-installed libjpeg]
  - S8140483, PR2740: Atomic*FieldUpdaters final fields should be trusted
  - S8140620, PR2769: Find and load default.sf2 as the default soundbank on Linux
  - S8145096, PR2854: Undefined behaviour in HotSpot
  - S8145982, PR2859: JMXInterfaceBindingTest is failing intermittently
  - S8146015, PR2859: JMXInterfaceBindingTest is failing intermittently for IPv6 addresses
  - S8148351, PR2842: Only display resolved symlink for compiler, do not change path
  - S8150954, PR2866, RH1176206: AWT Robot not compatible with GNOME Shell
* Bug fixes
  - S8041658: Use of -fdevirtualize on macroAssembler_x86.o (via -O2) with gcc 4.9.0 creates broken VM
  - PR94: empty install target in Makefile.am
  - PR729: GTKLookAndFeel should be the system look&feel on all GNU/Linux desktops
  - PR1275: Provide option to turn off downloading of tarballs
  - PR1281, RH513605: Updating/Installing OpenJDK should recreate the shared class-data archive
  - PR1289: Allow JARs to be optionally compressed by setting COMPRESS_JARS
  - PR1291: Ensure unlimited crypto policy is in place.
  - PR1325: Only add classes to rt-source-files.txt if actually needed
  - PR1341: Remove Rhino support
  - PR1346: Filter out -j option to make
  - PR1347: Update list of checked JDKs
  - PR1348: java -version output is broken
  - PR1357: Make XRender mandatory
  - PR1359: Check for /usr/lib64 JVMs and generic JPackage alternative
  - PR1364: Replace hgforest support
  - PR1367: Support using the system installation of LCMS
  - PR1368: Ensure debug data is available for all libraries and binaries without redundant files
  - PR1369: Remove outdated bootstrap configure tests or make them fail on error
  - PR1377: Forwardport javac detection / usability test from IcedTea 2.x
  - PR1379: Add build support for Zero AArch64
  - PR1413: Undefined reference to libz during link of unpack200
  - PR1741: Break PulseAudio provider out into IcedTea-Sound
  - PR1766: Expand architecture support
  - PR1774: Support GIF lib v5
  - PR1774: Correct #ifdef to #if
  - PR1796: make fails with "computed checksum did NOT match"
  - PR1806: Support Debian/Ubuntu 7 & 8 OpenJDK Installs as Boot JDK
  - PR1812: Unable to locate HotSpot checksum when downloading
  - PR1813: HotSpot URL should be used with --enable-hg
  - PR1815: Split download/extraction rules for OpenJDK so they can run in parallel
  - PR1829: Support AM_MAINTAINER_MODE
  - PR1834, RH1022017: Report elliptic curves supported by NSS, not the SunEC library
  - PR1845: jstack.stp in OpenJDK8 is broken
  - PR1869: Avoid x86 workaround when running Zero rather than a JIT
  - PR1889: Allow tarball checksumming to be disabled
  - PR1935: HotSpot extraction needs to depend on the tarball being downloaded
  - PR1937: Add configure option for -Werror
  - PR1938: Zero broken by enforced use of -Werror
  - PR1942: Bug reports lack IcedTea version & distribution packaging information
  - PR1950: Add build support for Zero SH
  - PR1965, G498288: Allow builds on PaX kernels
  - PR1968: Move to new OpenJDK bug URL format
  - PR1975: SystemTap probes for the garbage collector.
  - PR1977: Support using the system installation of Zlib
  - PR1979: Support using the system installation of libjpeg
  - PR1980: Support using the system installation of giflib
  - PR1981: Support using the system installation of libpng
  - PR1983: Support using the system installation of NSS with the SunEC provider
  - PR1994: make dist broken
  - PR2001: Synchronise HEAD tarball paths with release branch paths
  - PR2066: Unset OS before running OpenJDK build
  - PR2095, RH1163501: 2048-bit DH upper bound too small for Fedora infrastructure
  - PR2126: Synchronise elliptic curves in sun.security.ec.NamedCurve with those listed by NSS
  - PR2127: SunEC provider crashes when built using system NSS
  - PR2199: Support giflib 5.1.0
  - PR2212: DGifCloseFile call should check the return value, not the error code, for failure
  - PR2227: giflib 5.1 conditional excludes 6.0, 7.0, etc.
  - PR2237, RH1194378: ppc64le should report its os.arch as ppc64le so tools can detect it
  - PR2248: HotSpot tarball fails verification after download
  - PR2256: Add SystemTap tests
  - PR2257: clean-extract-nashorn rule is never run
  - PR2321: Checksum of policy JAR files changes on every build
  - PR2329: jamvm parallel unpack failures
  - PR2339: Fail early if there is no native HotSpot JIT & all other options are disabled
  - PR2348: Avoid following symlinks for CACAO and JamVM patches
  - PR2351: Split CACAO rule into configure and make stages
  - PR2352: Split JamVM rule into configure, make and make install stages
  - PR2358: Add aliases for all stamp targets
  - PR2362: Update HACKING & fsg.sh.in
  - PR2363: Remove EC source code prior to build
  - PR2369: SunEC provider is partially installed
  - PR2377: PaX mark the installed JDK so it runs on hardened systems
  - PR2383: Location of docs directory in install-data-local is incorrect
  - PR2392: Make elliptic curve removal optional
  - PR2400, RH1206656: Zero JVM crashes on startup when built with GCC 5
  - PR2407: Fix automatic enabling of the Zero build on non-JIT architectures which don't use CACAO or JamVM
  - PR2408: Enable Zero when Shark is enabled
  - PR2409: Update Zero macro to match one in IcedTea 2.x
  - PR2410: Support PPC64 JIT on ppc64le
  - PR2411: Fix references to hotspot.map following PR2001
  - PR2413: OpenJDK doesn't auto-select Zero on architectures where no server JVM is available
  - PR2414: CFLAGS, CXXFLAGS and LDFLAGS should be passed to OpenJDK build
  - PR2415: JVM -Xmx requirement is too high on s390
  - PR2428: OpenJDK build can't handle commas in LDFLAGS
  - PR2429: OpenJDK build does not copy a symlinked cacerts file
  - PR2432: ppc64 JIT doesn't support class data sharing
  - PR2433: ppc64le does not support -Xshare:dump
  - PR2434: SystemTap support is no longer optional
  - PR2439: NSS PKCS11 regression - due to java.security automatic loading
  - PR2443: install stage fails where BUILD_ARCH_DIR != INSTALL_ARCH_DIR
  - PR2447: Allow greater control of Javadoc installation directory
  - PR2448: Install TRADEMARK, COPYING and ChangeLog as RPM spec file does
  - PR2454: install-data-local needs to check that classes.jsa actually exists
  - PR2456: Installation path for hotspot_gc.stp is wrong, due to changed j2sdk-image location
  - PR2459: Policy JAR files should be timestamped with the date of the policy file they hold
  - PR2511: Reset success following calls in LayoutManager.cpp
  - PR2541: Allow the user to specify the cacerts file to use
  - PR2544: Desktop files do not allow installation from multiple versions of IcedTea 
  - PR2547: Extend tarball checksumming option to allow the checksum to be specified
  - PR2631: jvm.cfg missing for ppc64le
  - PR2633: s390 builds still fail as BUILD_NUM_BITS is never set
  - PR2675: Update ppc64le autotools infrastructure following PR2237
  - PR2691, G564746: ./configure is unable to compile using distcc for icedtea-3.0.0_pre06
  - PR2737: Allow multiple PKCS11 library initialisation to be a non-critical error.
  - PR2738: java.lang.UnsatisfiedLinkError: no javalcms in java.library.path
  - PR2743: Remove bad AArch64 merge fragment
  - PR2759: LCMS library should be named javalcms, not lcms, to avoid potential conflicts with the system library
  - PR2766: Remove all references to GCJ
  - PR2767: Remove remaining rogue binaries from OpenJDK tree
  - PR2768: Move SystemTap GCC 4.5 patch to OpenJDK tree or discard if no longer needed
  - PR2777: Fix MAX/MIN template usage on s390
  - PR2804: test/tapset/jstaptest.pl should be executable
  - PR2815: Race condition in SunEC provider with system NSS
  - PR2825: Placement of -lfreebl matters when using bfd linker
  - PR2826: Provide option to disable SystemTap tests
  - PR2841: Parallelism issues resulting from PR2459
  - PR2863: IcedTea doesn't pass through build and host triplets to OpenJDK's configure
  - PR2865: Handle uninstallation.
  - PR2869: Revert CRC fix (S8000650) backported as part of PR2462
  - PR2873: Fix make distcheck.
  - PR2880: Add missing test directory in make check.
  - PR2885: Location of 'stap' executable is hard-coded
  - PR2888: OpenJDK should check for system cacerts database (e.g. /etc/pki/java/cacerts)
  - PR2899: Don't use WithSeed versions of NSS functions as they don't fully process the seed
  - PR2906: Support prefixed variants of GNU tools used on *BSD systems
  - PR2907: Replace --with-abs-install-dir with usual --prefix
  - PR2917: Don't pass --with-cacerts-file to build if USE_ALT_CACERTS_FILE is not set
  - PR2918: Makefile handles cacerts as a symlink, but the configure check doesn't
  - PR2920: PaX marking fails on filesystems which don't support extended attributes
  - PR2921: Uninstallation of docs deletes too much
  - Don't substitute 'j' for '-j' inside -I directives
  - Extend 8041658 to all files in the HotSpot build.
  - Remove jcheck
* AArch64 port
  - PR1970: Imported from aarch64 jdk8 repository.
  - PR2853: Fix build for aarch64/zero
  - PR2853: Remaining miscellaneous synchronisation changes from aarch64/jdk8u
  - PR2853: Remove AArch64-specific code in generateOptoStub.cpp.
  - PR2853: Remove some AArch64-specific code in share/.
  - PR2853: Remove some unnecessary divergences from jdk8u.
  - PR2853: Revert AArch64 jvm.cfg divergence
  - PR2853: Revert changes to libpng source code now 8078245 is in place.
  - PR2922: Import latest AArch64 changes from aarch64-port/jdk8u (aarch64-jdk8u77-b03)
  - S8150652, PR2922: Remove unused code in AArch64 back end
* JamVM
  - JSR 292: Invoke Dynamic
  - JSR 308: Type Annotations
  - JSR 335: Lambda Expressions
  - JSR 901: VM support for method parameter reflection
  - JEP 171: Implement fence methods in sun.misc.Unsafe
  - sun.misc.Unsafe: additional methods get/putAddress.
  - FreeClassData: adjust method count for Miranda methods
  - Fix invokesuper check in invokespecial opcode
  - Fix non-direct interpreter invokespecial super-class check
  - When GC'ing a native method don't try to free code
  - Do not free unprepared Miranda method code data
  - Set anonymous class protection domain
  - JVM_IsVMGeneratedMethodIx stub
  - Dummy implementation of sun.misc.Perf natives
  - JVM_NewMultiArray: element class may be an array
  - jtreg test java/lang/reflect/Array/ExceedMaxDim
  - OpenJDK: Fix Local/Anonymous class checks
  - classlibMarkThreadTerminated should return Object*
  - Fix race-condition in constant-pool resolution code
  - JSR 292: MethodHandle constant-pool refs may be resolved
  - JSR 292: bootstrap method args error handling
  - JSR 308: update to match OpenJDK changes
  - JSR 292: correct intrinsic cache COMPARE function
  - Race condition in setting up imethod table
  - GC: Minor performance improvement
  - PR2034: --enable-jamvm builds broken, missing JVM_GetTemporaryDirectory impl
  - PR2336: JamVM lacks JVM_FindClassFromCaller
  - PR2523: Add executable stack markings to callNative.S on JamVM
  - PR2775: JamVM lacks JVM_GetResourceLookupCacheURLs introduced by jdk8u40
* CACAO
  - PR1277: Synchronise CACAO rules between IcedTea6/7/8 where possible
  - PR1279: Synchronise CACAO versions between IcedTea6/7/8 where possible
  - PR2035: --enable-cacao builds broken, missing JVM_GetTemporaryDirectory impl.
  - PR2330, CA172, G453612: Add ARM hardfloat support to CACAO on Gentoo
  - PR2331: IcedTea8 fails to build with IcedTea7 CACAO due to low max heap size
  - PR2335: CACAO lacks JVM_FindClassFromCaller
  - PR2347: Fix CACAO patches to apply again
  - PR2349: ‘struct jvm_version_info’ has no member named ‘is_kernel_jvm’
  - PR2350: Update to latest CACAO
  - PR2354: stamps/cacao.stamp tries to touch a file in a directory which doesn't exist
  - PR2355: CACAO build fails to use JRE layout
  - PR2776: CACAO lacks JVM_GetResourceLookupCacheURLs introduced by jdk8u40
  - PR2832, CA195: typeinfo.cpp: typeinfo_merge_nonarrays: Assertion `dest && result && x.any && y.any' failed
  - PR2908: Add missing functions for CACAO OpenJDK JVM implementation
  - PR2909: Install CACAO in same way as JamVM
  - PR2910: Add rudimentary support for OpenJDK 8 class files to CACAO
  - PR2916: Update CACAO drop to use the latest from cacao-staging

New in release 2.6.5 (2016-03-24):

* Security fixes
  - S8152335, CVE-2016-0636: Improve MethodHandle consistency
* Import of OpenJDK 7 u99 build 0
  - S6425769, PR2858: Allow specifying an address to bind JMX remote connector
  - S6961123: setWMClass fails to null-terminate WM_CLASS string
  - S8145982, PR2858: JMXInterfaceBindingTest is failing intermittently
  - S8146015, PR2858: JMXInterfaceBindingTest is failing intermittently for IPv6 addresses
* Backports
  - S8028727, PR2814: [parfait] warnings from b116 for jdk.src.share.native.sun.security.ec: JNI pending exceptions
  - S8048512, PR2814: Uninitialised memory in jdk/src/share/native/sun/security/ec/ECC_JNI.cpp
  - S8071705, PR2819, RH1182694: Java application menu misbehaves when running multiple screen stacked vertically
  - S8150954, PR2866, RH1176206: AWT Robot not compatible with GNOME Shell
* Bug fixes
  - PR2803: Make system CUPS optional
  - PR2886: Location of 'stap' executable is hard-coded
  - PR2893: test/tapset/jstaptest.pl should be executable
  - PR2894: Add missing test directory in make check.
* CACAO
  - PR2781, CA195: typeinfo.cpp: typeinfo_merge_nonarrays: Assertion `dest && result && x.any && y.any' failed
* AArch64 port
  - PR2852: Add support for large code cache
  - PR2852: Apply ReservedCodeCacheSize default limiting to AArch64 only.
  - S8081289, PR2852: aarch64: add support for RewriteFrequentPairs in interpreter
  - S8131483, PR2852: aarch64: illegal stlxr instructions
  - S8133352, PR2852: aarch64: generates constrained unpredictable instructions
  - S8133842, PR2852: aarch64: C2 generates illegal instructions with int shifts >=32
  - S8134322, PR2852: AArch64: Fix several errors in C2 biased locking implementation
  - S8136615, PR2852: aarch64: elide DecodeN when followed by CmpP 0
  - S8138575, PR2852: Improve generated code for profile counters
  - S8138641, PR2852: Disable C2 peephole by default for aarch64
  - S8138966, PR2852: Intermittent SEGV running ParallelGC
  - S8143067, PR2852: aarch64: guarantee failure in javac
  - S8143285, PR2852: aarch64: Missing load acquire when checking if ConstantPoolCacheEntry is resolved
  - S8143584, PR2852: Load constant pool tag and class status with load acquire
  - S8144201, PR2852: aarch64: jdk/test/com/sun/net/httpserver/Test6a.java fails with --enable-unlimited-crypto
  - S8144582, PR2852: AArch64 does not generate correct branch profile data
  - S8146709, PR2852: AArch64: Incorrect use of ADRP for byte_map_base
  - S8147805, PR2852: aarch64: C1 segmentation fault due to inline Unsafe.getAndSetObject
  - S8148240, PR2852: aarch64: random infrequent null pointer exceptions in javac
* PPC & AIX port
  - S8034797, PR2851: AIX: Fix os::naked_short_sleep() in os_aix.cpp after 8028280
  - S8139258, PR2851: PPC64LE: argument passing problem when passing 15 floats in native call
  - S8139421, PR2851: PPC64LE: MacroAssembler::bxx64_patchable kill register R12

New in release 2.6.4 (2016-01-19):

* Security fixes
  - S8059054, CVE-2016-0402: Better URL processing
  - S8130710, CVE-2016-0448: Better attributes processing
  - S8132210: Reinforce JMX collector internals
  - S8132988: Better printing dialogues
  - S8133962, CVE-2016-0466: More general limits
  - S8137060: JMX memory management improvements
  - S8139012: Better font substitutions
  - S8139017, CVE-2016-0483: More stable image decoding
  - S8140543, CVE-2016-0494: Arrange font actions
  - S8143185: Cleanup for handling proxies
  - S8143941, CVE-2015-8126, CVE-2015-8472: Update splashscreen displays
  - S8144773, CVE-2015-7575: Further reduce use of MD5 (SLOTH)
* Import of OpenJDK 7 u95 build 0
  - S7167988: PKIX CertPathBuilder in reverse mode doesn't work if more than one trust anchor is specified
  - S8068761: [TEST_BUG] java/nio/channels/ServerSocketChannel/AdaptServerSocket.java failed with SocketTimeoutException
  - S8074068: Cleanup in src/share/classes/sun/security/x509/
  - S8075773: jps running as root fails after the fix of JDK-8050807
  - S8081297: SSL Problem with Tomcat
  - S8131181: Increment minor version of HSx for 7u95 and initialize the build number
  - S8132082: Let OracleUcrypto accept RSAPrivateKey
  - S8134605: Partial rework of the fix for 8081297
  - S8134861: XSLT: Extension func call cause exception if namespace URI contains partial package name
  - S8135307: CompletionFailure thrown when calling FieldDoc.type, if the field's type is missing
  - S8138716: (tz) Support tzdata2015g
  - S8140244: Port fix of JDK-8075773 to MacOSX
  - S8141213: [Parfait]Potentially blocking function GetArrayLength called in JNI critical region at line 239 of jdk/src/share/native/sun/awt/image/jpeg/jpegdecoder.c in function GET_ARRAYS
  - S8141287: Add MD5 to jdk.certpath.disabledAlgorithms - Take 2
  - S8142928: [TEST_BUG] sun/security/provider/certpath/ReverseBuilder/ReverseBuild.java 8u71 failure
  - S8143132: L10n resource file translation update
  - S8144955: Wrong changes were pushed with 8143942
  - S8145551: Test failed with Crash for Improved font lookups
  - S8147466: Add -fno-strict-overflow to IndicRearrangementProcessor{,2}.cpp
* Backports
  - S8140244: Port fix of JDK-8075773 to AIX

New in release 2.6.3 (2015-11-13):

* Security fixes
  - S8142882, CVE-2015-4871: rebinding of the receiver of a DirectMethodHandle may allow a protected method to be accessed
* Backports
  - S8133196, PR2712, RH1251935: HTTPS hostname invalid issue with InetAddress
  - S8140620, PR2710: Find and load default.sf2 as the default soundbank on Linux

New in release 2.6.2 (2015-10-22):

* Security fixes
  - S8048030, CVE-2015-4734: Expectations should be consistent
  - S8068842, CVE-2015-4803: Better JAXP data handling
  - S8076339, CVE-2015-4903: Better handling of remote object invocation
  - S8076383, CVE-2015-4835: Better CORBA exception handling
  - S8076387, CVE-2015-4882: Better CORBA value handling
  - S8076392, CVE-2015-4881: Improve IIOPInputStream consistency
  - S8076413, CVE-2015-4883: Better JRMP message handling
  - S8078427, CVE-2015-4842: More supportive home environment
  - S8078440: Safer managed types
  - S8080541: More direct property handling
  - S8080688, CVE-2015-4860: Service for DGC services
  - S8081760: Better group dynamics
  - S8086092, CVE-2015-4840: More palette improvements
  - S8086733, CVE-2015-4893: Improve namespace handling
  - S8087350: Improve array conversions
  - S8103671, CVE-2015-4805: More objective stream classes
  - S8103675: Better Binary searches
  - S8130078, CVE-2015-4911: Document better processing
  - S8130193, CVE-2015-4806: Improve HTTP connections
  - S8130864: Better server identity handling
  - S8130891, CVE-2015-4843: (bf) More direct buffering
  - S8131291, CVE-2015-4872: Perfect parameter patterning
  - S8132042, CVE-2015-4844: Preserve layout presentation
* Import of OpenJDK 7 u85 build 2
  - S8133968: Revert 8014464 on OpenJDK 7
  - S8133993: [TEST_BUG] Make CipherInputStreamExceptions compile on OpenJDK 7
  - S8134248: Fix recently backported tests to work with OpenJDK 7u
  - S8134610: Mac OS X build fails after July 2015 CPU
  - S8134618: test/javax/xml/jaxp/transform/8062923/XslSubstringTest.java has bad license header
* Import of OpenJDK 7 u91 build 0
  - S6854417: TESTBUG: java/util/regex/RegExTest.java fails intermittently
  - S6966259: Make PrincipalName and Realm immutable
  - S8005226: java/rmi/transport/pinClientSocketFactory/PinClientSocketFactory.java fails intermittently
  - S8014097: add doPrivileged methods with limited privilege scope
  - S8021191: Add isAuthorized check to limited doPrivileged methods
  - S8028780: JDK KRB5 module throws OutOfMemoryError when CCache is corrupt
  - S8064331: JavaSecurityAccess.doIntersectionPrivilege() drops the information about the domain combiner of the stack ACC
  - S8076506: Increment minor version of HSx for 7u91 and initialize the build number
  - S8078822: 8068842 fix missed one new file PrimeNumberSequenceGenerator.java
  - S8079323: Serialization compatibility for Templates: need to exclude Hashtable from serialization
  - S8087118: Remove missing package from java.security files
  - S8098547: (tz) Support tzdata2015e
  - S8130253: ObjectStreamClass.getFields too restrictive
  - S8133321: (tz) Support tzdata2015f
  - S8135043: ObjectStreamClass.getField(String) too restrictive
* Import of OpenJDK 7 u91 build 1
  - S8072932: Test fails with java.security.AccessControlException: access denied ("java.security.SecurityPermission" "getDomainCombiner")
* Backports
  - S6880559, PR2674: Enable PKCS11 64-bit windows builds
  - S6904403, PR2674: assert(f == k-&gt;has_finalizer(),&quot;inconsistent has_finalizer&quot;) with debug VM
  - S7011441, PR2674: jndi/ldap/Connection.java needs to avoid spurious wakeup
  - S7059542, PR2674: JNDI name operations should be locale independent
  - S7105461, PR2571: Large JTables are not rendered correctly with Xrender pipeline
  - S7105883, PR2560, RH1245855: JDWP: agent crash if there exists a ThreadGroup with null name
  - S7107611, PR2674: sun.security.pkcs11.SessionManager is scalability blocker
  - S7127066, PR2674: Class verifier accepts an invalid class file
  - S7150092, PR2674: NTLM authentication fail if user specified a different realm
  - S7150134, PR2571: JCK api/java_awt/Graphics/index.html#DrawLine fails with OOM for jdk8 with XRender pipeline
  - S7152582, PR2674: PKCS11 tests should use the NSS libraries available in the OS
  - S7156085, PR2674: ArrayIndexOutOfBoundsException throws in UTF8Reader of SAXParser
  - S7177045, PR2674: Rework the TestProviderLeak.java regression test, it is too fragile to low memory errors.
  - S7190945, PR2674: pkcs11 problem loading NSS libs on Ubuntu
  - S8005226, PR2674: java/rmi/transport/pinClientSocketFactory/PinClientSocketFactory.java fails intermittently
  - S8009438, PR2674: sun/security/pkcs11/Secmod tests failing on Ubuntu 12.04
  - S8011709, PR2509: [parfait] False positive: memory leak in jdk/src/share/native/sun/font/layout/CanonShaping.cpp
  - S8012971, PR2674: PKCS11Test hiding exception failures
  - S8016105, PR2560, RH1245855: Add complementary RETURN_NULL allocation macros in allocation.hpp
  - S8020424, PR2674: The NSS version should be detected before running crypto tests
  - S8020443, PR2674: Frame is not created on the specified GraphicsDevice with two monitors
  - S8021897, PR2560, RH1245855: EXCEPTION_ACCESS_VIOLATION on debugging String.contentEquals()
  - S8022683, PR2560, RH1245855: JNI GetStringUTFChars should return NULL on allocation failure not abort the VM
  - S8023052, PR2509: JVM crash in native layout
  - S8025922, PR2560, RH1245855: JNI access to Strings need to check if the value field is non-null
  - S8026119, PR2679: Regression test DHEKeySizing.java failing intermittently
  - S8027624, PR2674: com/sun/crypto/provider/KeyFactory/TestProviderLeak.java unstable again
  - S8033069, PR2674: mouse wheel scroll closes combobox popup
  - S8035150, PR2674: ShouldNotReachHere() in ConstantPool::copy_entry_to
  - S8039212, PR2674: SecretKeyBasic.sh needs to avoid NSS libnss3 and libsoftokn3 version mismatches
  - S8042855, PR2509: [parfait] Potential null pointer dereference in IndicLayoutEngine.cpp
  - S8044364, PR2674: runtime/RedefineFinalizer test fails on windows
  - S8048353, PR2674: jstack -l crashes VM when a Java mirror for a primitive type is locked
  - S8050123, PR2674: Incorrect property name documented in CORBA InputStream API
  - S8056122, PR1896: Upgrade JDK to use LittleCMS 2.6
  - S8056124, PR2674: Hotspot should use PICL interface to get cacheline size on SPARC
  - S8057934, PR1896: Upgrade to LittleCMS 2.6 breaks AIX build
  - S8059200, PR2674: Promoted JDK9 b31 for Solaris-amd64 fails (Error: dl failure on line 744, no picl library) on Solaris 11.1
  - S8059588, PR2674: deadlock in java/io/PrintStream when verbose java.security.debug flags are set
  - S8062518, PR2674: AIOBE occurs when accessing to document function in extended function in JAXP
  - S8062591, PR2674: SPARC PICL causes significantly longer startup times
  - S8072863, PR2674: Replace fatal() with vm_exit_during_initialization() when an incorrect class is found on the bootclasspath
  - S8073453, PR2674: Focus doesn't move when pressing Shift + Tab keys
  - S8074350, PR2674: Support ISO 4217 "Current funds codes" table (A.2)
  - S8074869, PR2674: C2 code generator can replace -0.0f with +0.0f on Linux
  - S8075609, PR2674: java.lang.IllegalArgumentException: aContainer is not a focus cycle root of aComponent
  - S8075773, PR2674: jps running as root fails after the fix of JDK-8050807
  - S8076040, PR2674: Test com/sun/crypto/provider/KeyFactory/TestProviderLeak.java fails with -XX:+UseG1GC
  - S8076328, PR2679: Enforce key exchange constraints
  - S8076455, PR2674: IME Composition Window is displayed on incorrect position
  - S8076968, PR2674: PICL based initialization of L2 cache line size on some SPARC systems is incorrect
  - S8077102, PR2674: dns_lookup_realm should be false by default
  - S8077409, PR2674: Drawing deviates when validate() is invoked on java.awt.ScrollPane
  - S8078113, PR2674: 8011102 changes may cause incorrect results
  - S8078331, PR1896: Upgrade JDK to use LittleCMS 2.7
  - S8080012, PR2674: JVM times out with vdbench on SPARC M7-16
  - S8081392, PR2674: getNodeValue should return 'null' value for Element nodes
  - S8081470, PR2674: com/sun/jdi tests are failing with "Error. failed to clean up files after test" with jtreg 4.1 b12
  - S8081756, PR1896: Mastering Matrix Manipulations
  - S8130297, PR2674: com/sun/crypto/provider/KeyFactory/TestProviderLeak.java still failing after JDK-8076040
  - S8133636, PR2674: [TEST_BUG] Import/add tests for the problem seen in 8076110
* Bug fixes
  - PR2512: Reset success following calls in LayoutManager.cpp
  - PR2557, G390663: Update Gentoo font configuration and allow font directory to be specified 
  - PR2568: openjdk causes a full desktop crash on RHEL 6 i586
  - PR2683: AArch64 port has broken Zero on AArch64
  - PR2684: AArch64 port not selected on architectures where host_cpu != aarch64
  - PR2686: Add generated Fedora & Gentoo font configurations for bootstrap stage
* CACAO
  - PR2652: Set classLoader field in java.lang.Class as expected by JDK

New in release 2.5.6 (2015-07-22):

* Security fixes
  - S8043202, CVE-2015-2808: Prohibit RC4 cipher suites
  - S8067694, CVE-2015-2625: Improved certification checking
  - S8071715, CVE-2015-4760: Tune font layout engine
  - S8071731: Better scaling for C1
  - S8072490: Better font morphing redux
  - S8072887: Better font handling improvements
  - S8073334: Improved font substitutions
  - S8073773: Presume path preparedness
  - S8073894: Getting to the root of certificate chains
  - S8074330: Set font anchors more solidly
  - S8074335: Substitute for substitution formats
  - S8074865, CVE-2015-2601: General crypto resilience changes
  - S8074871: Adjust device table handling
  - S8075374, CVE-2015-4748: Responding to OCSP responses
  - S8075378, CVE-2015-4749: JNDI DnsClient Exception Handling
  - S8075738: Better multi-JVM sharing
  - S8075833, CVE-2015-2613: Straighter Elliptic Curves
  - S8075838: Method for typing MethodTypes
  - S8075853, CVE-2015-2621: Proxy for MBean proxies
  - S8076328, CVE-2015-4000: Enforce key exchange constraints
  - S8076376, CVE-2015-2628: Enhance IIOP operations
  - S8076397, CVE-2015-4731: Better MBean connections
  - S8076401, CVE-2015-2590: Serialize OIS data
  - S8076405, CVE-2015-4732: Improve serial serialization
  - S8076409, CVE-2015-4733: Reinforce RMI framework
  - S8077520, CVE-2015-2632: Morph tables into improved form
  - PR2487, CVE-2015-4000: Make jdk8 mode the default for jdk.tls.ephemeralDHKeySize
* Backports
  - S4890063, PR2305, RH1214835: HPROF: default text truncated when using doe=n option
  - S6991580, PR2308: IPv6 Nameservers in resolv.conf throws NumberFormatException
  - S7124253: [macosx] Flavor change notification not coming
  - S8007219: [macosx] Frame size reverts meaning of maximized attribute if frame size close to display
  - S8013581: [macosx] Key Bindings break with awt GraphicsEnvironment setFullScreenWindow
  - S8020210: [macosx] JVM crashes in CWrapper$NSWindow.screen(long)
  - S8021120, PR2301: TieredCompilation can be enabled even if TIERED is undefined
  - S8027058: sun/management/jmxremote/bootstrap/RmiBootstrapTest.sh Failed to initialize connector
  - S8027561: [macosx] Cleanup "may not respond to selector" warnings in native code
  - S8029607, PR2418: Type of Service (TOS) cannot be set in IPv6 header
  - S8029868: Fix KSS issues in sun.lwawt.macosx
  - S8039921, PR2421: SHA1WithDSA with key > 1024 bits not working
  - S8042205: javax/management/monitor/*: some tests didn't  get all the notifications
  - S8042982: Unexpected RuntimeExceptions being thrown by SSLEngine
  - S8043201: Deprecate RC4 in SunJSSE provider
  - S8043129, PR2338: JAF initialisation in SAAJ clashing with the one in javax.mail
  - S8046817: JDK 8 schemagen tool does not generate xsd files for enum types
  - S8048194: GSSContext.acceptSecContext fails when a supported mech is not initiator preferred
  - S8048212, PR2418: Two tests failed with "java.net.SocketException: Bad protocol option" on Windows after 8029607
  - S8048214, PR2357: Linker error when compiling G1SATBCardTableModRefBS after include order changes
  - S8062923: XSL: Run-time internal error in 'substring()'
  - S8062924: XSL: wrong answer from substring() function
  - S8064546: CipherInputStream throws BadPaddingException if stream is not fully read
  - S8065238, PR2478: javax.naming.NamingException after upgrade to JDK 8
  - S8065764: javax/management/monitor/CounterMonitorTest.java hangs
  - S8066952: [TEST-BUG] javax/management/monitor/CounterMonitorTest.java hangs
  - S8071668: [macosx] Clipboard does not work with 3rd parties Clipboard Managers
  - S8072385, PR2387: Only the first DNSName entry is checked for endpoint identification
  - S8073357: schema1.xsd has wrong content. Sequence of the enum values has been changed
  - S8073385: Bad error message on parsing illegal character in XML attribute
  - S8074098: 2D_Font/Bug8067699 test fails with SIGBUS crash on Solaris Sparc
  - S8074297: substring in XSLT returns wrong character if string contains supplementary chars
  - S8074761, PR2470: Empty optional parameters of LDAP query are not interpreted as empty
  - S8075575: com/sun/security/auth/login/ConfigFile/InconsistentError.java failed in certain env.
  - S8075576: com/sun/security/auth/module/KeyStoreLoginModule/OptionTest.java failed in certain env.
  - S8075667: (tz) Support tzdata2015b
  - S8076290: JCK test api/xsl/conf/string/string17 starts failing after JDK-8074297
  - S8077685: (tz) Support tzdata2015d
  - S8078348: sun/security/pkcs11/sslecc/ClientJSSEServerJSSE.java fails with BindException
  - S8078439: SPNEGO auth fails if client proposes MS krb5 OID
  - S8078562: Add modified dates
  - S8078654, PR2333: CloseTTFontFileFunc callback should be removed
  - S8078666, PR2326: JVM fastdebug build compiled with GCC 5 asserts with "widen increases"
  - S8080318: jdk8u51 l10n resource file translation update
  - S8081315, PR2405: Avoid giflib interlacing workaround with giflib 5.0.0 on
  - S8081386: Test sun/management/jmxremote/bootstrap/RmiSslBootstrapTest.sh test has RC4 dependencies
  - S8081475, PR2494: SystemTap does not work when JDK is compiled with GCC 5
  - S8081775: two lib/testlibrary tests are failing with "Error. failed to clean up files after test" with jtreg 4.1 b12
  - S8087120, RH1206656, PR2553: [GCC5] java.lang.StackOverflowError on Zero JVM initialization on non x86 platforms.
  - S8133970: Only apply PaX-marking when needed by a running PaX kernel
  - S8133990: Revert introduction of lambda expression in sun.lwawt.macosx.LWCToolkit
  - S8133991: Fix mistake in 8075374 backport
* Bug fixes
  - PR2328: GCJ uses ppc64el named libarch directory on ppc64le
  - PR2341: Update README & INSTALL files
  - PR2367: 7 no longer builds with 6 - Util is not public in sun.management
  - PR2390: Make elliptic curve removal optional
  - PR2395: Path to jvm.cfg is wrong in add-systemtap-boot
  - PR2458: Policy JAR files should be timestamped with the date of the policy file they hold
  - PR2482, RH489586, RH1236619: OpenJDK can't handle spaces in zone names in /etc/sysconfig/clock
  - PR2499: Update remove-intree-libraries.sh script
  - PR2502: Remove -fno-tree-vectorize workaround now https://gcc.gnu.org/PR63341 is fixed
  - PR2507, G541462: Only apply PaX markings by default on running PaX kernels
* CACAO
  - PR2380: Raise javadoc and JAVAC_FLAGS memory limits for CACAO
* JamVM
  - PR2500: Add executable stack markings to callNative.S on JamVM
* AArch64 port
  - Changes to make aix compile after the merge
  - S8025613, PR2437: clang: remove -Wno-unused-value
  - S8035938: Memory leak in JvmtiEnv::GetConstantPool
  - S8058113: Execution of OnOutOfMemoryError command hangs on linux-sparc
  - S8068674: Increment minor version of HSx for 7u85 and initialize the build number
  - S8069593: Changes to JavaThread::_thread_state must use acquire and release
  - S8071423: Increment hsx 24.80 build to b08 for 7u80-b07
  - S8071807: Increment hsx 24.80 build to b09 for 7u80-b08
  - S8072639: Increment hsx 24.80 build to b10 for 7u80-b09
  - S8074349: AARCH64: C2 generates poor code for some byte and character stores
  - S8075045: AARCH64: Stack banging should use store rather than load
  - S8075136: Unnecessary sign extension for byte array access
  - S8075324: Costs of memory operands in aarch64.ad are inconsistent
  - S8075443: AARCH64: Missed L2I optimizations in C2
  - S8075930: AARCH64: Use FP Register in C2
  - S8076212, PR2314: AllocateHeap() and ReallocateHeap() should be inlined.
  - S8076467: AARCH64: assertion fail with -XX:+UseG1GC
  - S8078529: Increment the build value to b02 for hs24.85 in 8u85
  - S8079203: AARCH64: Need to cater for different partner implementations
  - S8080586: aarch64: hotspot test compiler/codegen/7184394/TestAESMain.java fails
  - S8081622: Increment the build value to b03 for hs24.85 in 8u51
* PPC & AIX port
  - S8069590: AIX port of "8050807: Better performing performance data handling"
  - S8078482, PR2307: ppc: pass thread to throw_AbstractMethodError
  - S8080190: PPC64: Fix wrong rotate instructions in the .ad file

New in release 2.6.1 (2015-07-21):

* Security fixes
  - S8043202, CVE-2015-2808: Prohibit RC4 cipher suites
  - S8067694, CVE-2015-2625: Improved certification checking
  - S8071715, CVE-2015-4760: Tune font layout engine
  - S8071731: Better scaling for C1
  - S8072490: Better font morphing redux
  - S8072887: Better font handling improvements
  - S8073334: Improved font substitutions
  - S8073773: Presume path preparedness
  - S8073894: Getting to the root of certificate chains
  - S8074330: Set font anchors more solidly
  - S8074335: Substitute for substitution formats
  - S8074865, CVE-2015-2601: General crypto resilience changes
  - S8074871: Adjust device table handling
  - S8075374, CVE-2015-4748: Responding to OCSP responses
  - S8075378, CVE-2015-4749: JNDI DnsClient Exception Handling
  - S8075738: Better multi-JVM sharing
  - S8075833, CVE-2015-2613: Straighter Elliptic Curves
  - S8075838: Method for typing MethodTypes
  - S8075853, CVE-2015-2621: Proxy for MBean proxies
  - S8076328, CVE-2015-4000: Enforce key exchange constraints
  - S8076376, CVE-2015-2628: Enhance IIOP operations
  - S8076397, CVE-2015-4731: Better MBean connections
  - S8076401, CVE-2015-2590: Serialize OIS data
  - S8076405, CVE-2015-4732: Improve serial serialization
  - S8076409, CVE-2015-4733: Reinforce RMI framework
  - S8077520, CVE-2015-2632: Morph tables into improved form
  - PR2487, CVE-2015-4000: Make jdk8 mode the default for jdk.tls.ephemeralDHKeySize
* OpenJDK
  - S7124253: [macosx] Flavor change notification not coming
  - S8007219: [macosx] Frame size reverts meaning of maximized attribute if frame size close to display
  - S8013581: [macosx] Key Bindings break with awt GraphicsEnvironment setFullScreenWindow
  - S8014464: Update jcheck for OpenJDK 7
  - S8020210: [macosx] JVM crashes in CWrapper$NSWindow.screen(long)
  - S8027058: sun/management/jmxremote/bootstrap/RmiBootstrapTest.sh Failed to initialize connector
  - S8027561: [macosx] Cleanup "may not respond to selector" warnings in native code
  - S8029868: Fix KSS issues in sun.lwawt.macosx
  - S8042205: javax/management/monitor/*: some tests didn't  get all the notifications
  - S8043201: Deprecate RC4 in SunJSSE provider
  - S8046817: JDK 8 schemagen tool does not generate xsd files for enum types
  - S8048194: GSSContext.acceptSecContext fails when a supported mech is not initiator preferred
  - S8064546: CipherInputStream throws BadPaddingException if stream is not fully read
  - S8065764: javax/management/monitor/CounterMonitorTest.java hangs
  - S8066952: [TEST-BUG] javax/management/monitor/CounterMonitorTest.java hangs
  - S8068674: Increment minor version of HSx for 7u85 and initialize the build number
  - S8071668: [macosx] Clipboard does not work with 3rd parties Clipboard Managers
  - S8073357: schema1.xsd has wrong content. Sequence of the enum values has been changed
  - S8073385: Bad error message on parsing illegal character in XML attribute
  - S8074098: 2D_Font/Bug8067699 test fails with SIGBUS crash on Solaris Sparc
  - S8074297: substring in XSLT returns wrong character if string contains supplementary chars
  - S8075575: com/sun/security/auth/login/ConfigFile/InconsistentError.java failed in certain env.
  - S8075576: com/sun/security/auth/module/KeyStoreLoginModule/OptionTest.java failed in certain env.
  - S8075667: (tz) Support tzdata2015b
  - S8076290: JCK test api/xsl/conf/string/string17 starts failing after JDK-8074297
  - S8077685: (tz) Support tzdata2015d
  - S8078348: sun/security/pkcs11/sslecc/ClientJSSEServerJSSE.java fails with BindException
  - S8078439: SPNEGO auth fails if client proposes MS krb5 OID
  - S8078529: Increment the build value to b02 for hs24.85 in 7u85
  - S8078562: Add modified dates
  - S8080318: jdk8u51 l10n resource file translation update
  - S8081386: Test sun/management/jmxremote/bootstrap/RmiSslBootstrapTest.sh test has RC4 dependencies
  - S8081622: Increment the build value to b03 for hs24.85 in 7u85
  - S8081775: two lib/testlibrary tests are failing with "Error. failed to clean up files after test" with jtreg 4.1 b12
  - S8133966: Allow OpenJDK to build on PaX-enabled kernels
  - S8133967: Fix build where PAX_COMMAND is not specified
  - S8133970: Only apply PaX-marking when needed by a running PaX kernel
  - S8133990: Revert introduction of lambda expression in sun.lwawt.macosx.LWCToolkit
  - S8133991: Fix mistake in 8075374 backport
* Backports
  - S8087120, RH1206656, PR2553: [GCC5] java.lang.StackOverflowError on Zero JVM initialization on non x86 platforms.
* Bug fixes
  - PR2501: libjavasctp.so doesn't need to link against libdl when linking against libsctp
  - PR2502: Remove -fno-tree-vectorize workaround now https://gcc.gnu.org/PR63341 is fixed
  - PR2503: Add existence check for all optional dependencies in jdk_generic_profile.sh
  - PR2521: Systems with a GLib without libgio segfault when obtaining proxy information

New in release 2.6.0 (2015-07-17):

* OpenJDK
  - S4792059: test/java/io/pathNames/GeneralSolaris.java fails on symbolic links
  - S4991647: PNGMetadata.getAsTree() sets bitDepth to invalid value
  - S5036554: unmarshal error on CORBA alias type in CORBA any
  - S6458027: Disabling IPv6 on a specific network interface causes problems
  - S6642881: Improve performance of Class.getClassLoader()
  - S6695379: Copy method annotations and parameter annotations to synthetic bridge methods
  - S6883953: java -client -XX:ValueMapInitialSize=0 crashes
  - S6931564: Incorrect display name of Locale for south africa
  - S6976528: PS: assert(!limit_exceeded || softrefs_clear) failed: Should have been cleared
  - S6984762: Invalid close of file descriptor '-1' in findZoneinfoFile
  - S6993873: java/awt/Focus/FocusOwnerFrameOnClick/FocusOwnerFrameOnClick.java test indicates ".a frame wasn't focused on click" jdk7 issue on linux
  - S7010989: Duplicate closure of file descriptors leads to unexpected and incorrect closure of sockets
  - S7017962: Obsolete link is used in URL class level spec
  - S7033533: realSync() doesn't work with Xfce
  - S7036518: TEST_BUG: add cygwin support to test/java/nio/charset/coders/CheckSJISMappingProp.sh
  - S7052170: javadoc -charset option generates wrong meta tag
  - S7145454: JVM wide monitor lock in Currency.getInstance(String)
  - S7152892: some jtreg tests fail with permission denied
  - S7153157: ClassValue.get does not return if computeValue calls remove
  - S7156459: Remove unnecessary get() from Currency.getInstance()
  - S7158636: InterfaceAddress.getBroadcast() returns invalid broadcast address on WLAN
  - S7160604: Using non-opaque windows - popups are initially not painted correctly
  - S7161320: TEST_BUG: java/awt/event/KeyEvent/SwallowKeyEvents/SwallowKeyEvents.java fails (Invalid key code)
  - S7164841: Improvements to the GC log file rotation
  - S7172176: test/sun/tools/jconsole/ImmutableResourceTest.sh failing
  - S7172865: PropertyDescriptor fails to work with setter method name if setter is non-void
  - S7178362: Socket impls should ignore unsupported proxy types rather than throwing
  - S7180038: regression test failure, SSLEngineBadBufferArrayAccess.java
  - S7180557: InetAddress.getLocalHost throws UnknownHostException on java7u5 on OSX
  - S7196009: SunPkcs11 provider fails to parse config path containing parenthesis
  - S7199674: (props) user.home property does not return an accessible location in sandboxed environment [macosx]
  - S8001633: Wrong alt processing during switching between windows.
  - S8002148: [TEST_BUG] The four lines printed are not the bold typeface.
  - S8004488: wrong permissions checked in krb5
  - S8006023: Embedded Builds fail management test because of requirement for UsePerfData being enabled.
  - S8008328: [partfait] Null pointer defererence in hotspot/src/cpu/x86/vm/frame_x86.inline.hpp
  - S8008386: (cs) Unmappable leading should be decoded to replacement.
  - S8008759: Do not let internal JDK zlib symbols leak out of fastdebug libzip.so
  - S8009258: TEST_BUG:java/io/pathNames/GeneralWin32.java fails intermittently
  - S8010371: getaddrinfo can fail with EAI_SYSTEM/EAGAIN, causes UnknownHostException to be thrown
  - S8010738: G1: Output for full GCs with +PrintGCDetails should contain perm gen/meta data size change info
  - S8011795: DOM Serializer prints stack traces to System.err
  - S8012625: Incorrect handling of HTTP/1.1 " Expect: 100-continue " in HttpURLConnection
  - S8012941: JSR 292: too deep inlining might crash compiler because of stack overflow
  - S8013098: [macosx] localized aqua_xx.properties are not included in rt.jar
  - S8013485: javac can't handle annotations with a <clinit> from a previous compilation unit
  - S8013849: Awt assert on Hashtable.cpp:124
  - S8014254: Selector in HttpServer introduces a 1000 ms delay when using KeepAlive
  - S8015586: [macosx] Test closed/java/awt/print/PrinterJob/PrintToDir.java fails on MacOSX
  - S8015628: Test Failure in closed/java/io/pathNames/GeneralSolaris.java
  - S8015780: java/lang/reflect/Method/GenericStringTest.java failing
  - S8016579: (process) IOException thrown by ProcessBuilder.start() method is incorrectly encoded
  - S8017212: File.createTempFile requires unnecessary "read" permission
  - S8019800: Test sun/tools/jcmd/jcmd-f.sh failing after JDK-8017011
  - S8019834: InetAddress.getByName hangs for bad IPv6 literals
  - S8020675: invalid jar file in the bootclasspath could lead to jvm fatal error
  - S8020829: NMT tests fail on platforms if NMT detail is not supported
  - S8022229: Intermittent test failures in sun/tools/jstatd
  - S8022531: [TEST_BUG] After double-click on the folder names , there is no 'OK' button in the dialog.
  - S8022836: JVM crashes in JVMTIENVBASE::GET_CURRENT_CONTENDED_MONITOR and GET_OWNED_MONITOR
  - S8024675: java/net/NetworkInterface/UniqueMacAddressesTest.java fails on Windows
  - S8024677: [TESTBUG] Move tests for classes in /testlibrary
  - S8024932: [TEST_BUG] [macosx] javax/swing/text/StyledEditorKit/8016833/bug8016833.java failed
  - S8025644: java/util/stream/test/org/openjdk/tests/java/util/stream/ToArrayOpTest.java fails with TestData): failure java.lang.AssertionError: expected [true] but found [false]
  - S8025710: Proxied HTTPS connections reused by HttpClient can send CONNECT to the server
  - S8025917: JDK demo applets not running with >=7u40 or (JDK 8 and JDK 9)
  - S8026245: InetAddress.getLocalHost crash if IPv6 disabled (macosx)
  - S8026303: CMS: JVM intermittently crashes with "FreeList of size 258 violates Conservation Principle" assert
  - S8027026: Change keytool -genkeypair to use -keyalg RSA
  - S8027348: (process) Enhancement of handling async close of ProcessInputStream
  - S8027695: There should be a space before % sign in Swedish locale
  - S8027961: Inet[4|6]Address native initializing code should check field/MethodID values
  - S8028073: race condition in ObjectMonitor implementation causing deadlocks
  - S8028074: InetAddress.getByName fails with UHE "invalid IPv6 address" if host name starts with a-f
  - S8028159: C2: compiler stack overflow during inlining of @ForceInline methods
  - S8028280: ParkEvent leak when running modified runThese which only loads classes
  - S8028484: [TEST_BUG][macosx] closed/java/awt/MouseInfo/JContainerMousePositionTest fails
  - S8029073: (corba) New connection reclaimed when number of connection is greater than highwatermark
  - S8029190: VM_Version::determine_features() asserts on Fujitsu Sparc64 CPUs
  - S8029302: Performance regression in Math.pow intrinsic
  - S8029607, RH1230702, PR2418: Type of Service (TOS) cannot be set in IPv6 header
  - S8029775: Solaris code cleanup
  - S8030114: [parfait] warnings from b119 for jdk.src.share.native.sun.security.smartcardio: JNI exception pending
  - S8030192: TESTFAIL: java/util/logging/TestLoggerBundleSync.java failed with NPE
  - S8030712: TEST_BUG : java/lang/ProcessBuilder/BasicLauncher.java fails if java output contains VM warning
  - S8030878: JConsole issues meaningless message if SSL connection fails
  - S8030976: Untaken paths should be more vigorously pruned at highest optimization level
  - S8031061: new hotspot build - hs24.60-b07
  - S8031068: java/util/logging/ParentLoggersTest.java: checkLoggers: getLoggerNames() returned unexpected loggers
  - S8031435: Ftp download does not work properly for ftp user without password
  - S8031471: Test closed/java/awt/dnd/FileDialogDropTargetTest/FileDialogDropTargetTest.java fails on Solaris zones virtual hosts
  - S8031566: regression test failure, SSLEngineBadBufferArrayAccess.java
  - S8031572: jarsigner -verify exits with 0 when a jar file is not properly signed
  - S8031743: C2: loadI2L_immI broken for negative memory values
  - S8031764: tmtools/jmap/heap_config tests fail on Linux-ia32 because it Cant attach to the core file
  - S8031765: Child process error stream is not empty!
  - S8032466: serviceability/sa/jmap-hashcode/Test8028623.java fails with compilation errors
  - S8032573: CertificateFactory.getInstance("X.509").generateCertificates(InputStream) does not throw CertificateException for invalid input
  - S8032808: Support Solaris SO_FLOW_SLA socket option
  - S8032832: Applet/browser deadlocks, when IIS integrated authentication is used
  - S8032864: [macosx] sigsegv (0Xb) Being Generated When Starting JDev With Voiceover Running
  - S8032901: WaitForMultipleObjects() return value not handled appropriately
  - S8032908: getTextContent doesn't return string in JAXP
  - S8033524: Set minor version for hotspot in 7u80 to 80 and build number to b01
  - S8033571: [parfait] warning from b128 for security/smartcardio/pcsc_md.c: JNI exception pending
  - S8033627: UTC+02:00 time zones are not detected correctly on Windows
  - S8033699: Incorrect radio button behavior
  - S8033970: new hotspot build - hs24.80-b02
  - S8034118: [parfait] JNI exception pending in macosx/native/sun/awt/JavaComponentAccessibility.m
  - S8034262: Test java/lang/ProcessBuilder/CloseRace.java fails
  - S8034768: [parfait] JNI exception pending in jdk/src/macosx/native/sun/awt/JavaTextAccessibility.m
  - S8034920: new hotspot build - hs24.80-b03
  - S8035435: new hotspot build - hs24.80-b04
  - S8035973: NPE in ForwardBuilder
  - S8035938: Memory leak in JvmtiEnv::GetConstantPool
  - S8036778: new hotspot build - hs24.80-b05
  - S8036823: Stack trace sometimes shows 'locked' instead of 'waiting to lock'
  - S8036981: JAXB not preserving formatting for xsd:any Mixed content
  - S8037502: build.tools.javazic.Zoneinfo incorrectly calculates raw GMT offset change time
  - S8037945: Paths.get("").normalize() throws ArrayIndexOutOfBoundsException
  - S8038274: update 8u fix for 8028073 now that 8028280 is backported to 8u
  - S8038440: backport few C2 fixes
  - S8038481: CMM Testing: Min/MaxHeapFreeRatio flags should be manageable through the API
  - S8038640: new hotspot build - hs24.80-b06
  - S8038785: hot workaround fix for a crash in C2 compiler at Node::rematerialize
  - S8038919: Requesting focus to a modeless dialog doesn't work on Safari
  - S8038961: kinit, klist and ktab aren't built from jdk7u51 in licensee src bundles
  - S8038966: JAX-WS handles wrongly xsd:any arguments for Web services
  - S8039042: G1: Phantom zeros in cardtable
  - S8039118: Windows build failure (j2pcsc.dll : fatal error unresolved external symbol throwByName)
  - S8039292: new hotspot build - hs24.80-b07
  - S8039368: Remove testcase from npt utf.c
  - S8039891: Remove ppcsflt builds from JPRT
  - S8039899: Missing licence headers in test for JDK-8033113
  - S8040076: Memory leak: java.awt.List objects allowing multiple selections are not GC-ed.
  - S8040664: Revert temporary fix JDK-8038785
  - S8041351: Crash in src/share/vm/opto/loopnode.cpp:3215 - assert(! had_error) failed: bad dominance
  - S8041507: Java Access Bridge version strings need to be fixed
  - S8041725: Nimbus JList selection colors persist across L&F changes
  - S8041791: String.toLowerCase regression - violates Unicode standard
  - S8041918: BootstrapMethods attribute cannot be empty.
  - S8041931: test/sun/net/www/http/HttpClient/B8025710.java fails with cannot find keystore
  - S8041980: (hotspot) sun/jvmstat/monitor/MonitoredVm/CR6672135.java failing on all platforms
  - S8041984: CompilerThread seems to occupy all CPU in a very rare situation
  - S8042052: assert(t != NULL) failed: must set before get
  - S8042235: redefining method used by multiple MethodHandles crashes VM
  - S8042247: Make 7u60 the default jprt release for hs24.80
  - S8042250: Misleading command line output for ReservedCodeCacheSize validation
  - S8042465: Applet menus not rendering when browser is full screen on Mac
  - S8042835: Remove mnemonic character from open, save and open directory JFileChooser's buttons
  - S8042982: Unexpected RuntimeExceptions being thrown by SSLEngine
  - S8043129: JAF initialisation in SAAJ clashing with the one in javax.mail
  - S8043354: OptimizePtrCompare too aggressive when allocations are present
  - S8043413: REGRESSION: Hotspot causes segmentation fault in jdk8ux, but not in jdk7ux
  - S8043720: (smartcardio) Native memory should be handled more accurately
  - S8044406: JVM crash with JDK8 (build 1.8.0-b132) with G1 GC
  - S8044614: [macosx] Focus issue with 2 applets in firefox
  - S8044725: Bug in zlib 1.2.5 prevents inflation of some gzipped files (zlib 1.2.8 port)
  - S8046007: Java app receives javax.print.PrintException: Printer is not accepting job
  - S8046024: JDI shared memory transport failed with "Observed abandoned IP mutex"
  - S8046233: VerifyError on backward branch
  - S8046269: Build broken : THIS_FILE : undeclared identifier
  - S8046275: Fastdebug build failing on jdk9/hs/ control jobs after pulling some hs-comp changes
  - S8046287: [TESTBUG] runtime/Thread/TestThreadDumpMonitorContention.java failed error_cnt=12
  - S8046289: compiler/6340864/TestLongVect.java timeout with
  - S8046495: KeyEvent can not be accepted in quick mouse clicking
  - S8046516: Segmentation fault in JVM (easily reproducible)
  - S8046559: NPE when changing Windows theme
  - S8046588: test for SO_FLOW_SLA availability does not check for EACCESS
  - S8047186: jdk.net.Sockets throws InvocationTargetException instead of original runtime exceptions
  - S8047187: Test jdk/net/Sockets/Test.java fails to compile after fix JDK-8046588
  - S8047340: (process) Runtime.exec() fails in Turkish locale
  - S8048050: Agent NullPointerException when rmi.port in use
  - S8048110: Using tables in JTextPane leads to infinite loop in FlowLayout.layoutRow
  - S8048170: Test closed/java/text/Normalizer/ConformanceTest.java failed
  - S8048212, PR2418: Two tests failed with "java.net.SocketException: Bad protocol option" on Windows after 8029607
  - S8048271: Minor GC times doubled from JDK 6u35 to JDK 7u51
  - S8048506: [macosx] javax.swing.PopupFactory issue with null owner
  - S8048887: SortingFocusTraversalPolicy throws IllegalArgumentException from the sort method
  - S8049514: FEATURE_SECURE_PROCESSING can not be turned off on a validator through SchemaFactory
  - S8049684: pstack crashes on java core dump
  - S8050022: linux-sparcv9: assert(SharedSkipVerify || obj->is_oop()) failed: sanity check
  - S8050386: javac, follow-up of fix for JDK-8049305
  - S8050983: Misplaced parentheses in sun.net.www.http.HttpClient break HTTP PUT streaming
  - S8051004: javac, incorrect bug id in tests for JDK-8050386
  - S8051844: BootstrapMethods attribute cannot be empty again
  - S8051857: OperationTimedOut exception inside from XToolkit.syncNativeQueue call
  - S8052159: TEST_BUG: javax/swing/JTextField/8036819/bug8036819.java fails to compile
  - S8052406: SSLv2Hello protocol may be filter out unexpectedly
  - S8054019: Keytool Error publicKey's is not X.509, but X509
  - S8054478: C2: Incorrectly compiled char[] array access crashes JVM
  - S8054530: C2: assert(res == old_res) failed: Inconsistency between old and new
  - S8054817: File ccache only recognizes Linux and Solaris defaults
  - S8054841: (process) ProcessBuilder leaks native memory
  - S8054883: Segmentation error while running program
  - S8055045: StringIndexOutOfBoundsException while reading krb5.conf
  - S8055421: (fs) bad error handling in java.base/unix/native/libnio/fs/UnixNativeDispatcher.c
  - S8055731: sun/security/smartcardio/TestDirect.java throws java.lang.IndexOutOfBoundsException
  - S8055949: ByteArrayOutputStream capacity should be maximal array size permitted by VM
  - S8056026: Debug security logging should print Provider used for each crypto operation
  - S8056156: [TEST_BUG] Test javax/swing/JFileChooser/8046391/bug8046391.java fails in Windows
  - S8056309: Set minor version for hotspot in 7u76 to 76 and build number to b01
  - S8056914: Right Click Menu for Paste not showing after upgrading to java 7
  - S8057008: [TEST_BUG] Test java/awt/Focus/SortingFPT/JDK8048887.java fails with compilation error
  - S8057530: (process) Runtime.exec throws garbled message in jp locale
  - S8057564: JVM hangs at getAgentProperties after attaching to VM with lower
  - S8057813: Alterations to jdk_security3 test target
  - S8058113: Execution of OnOutOfMemoryError command hangs on linux-sparc
  - S8058120: Rendering / caret errors with HTMLDocument
  - S8058473: "Comparison method violates its general contract" when using Clipboard
  - S8058583: Remove CompilationRepeat
  - S8058608: JVM crash during Kerberos logins using des3-cbc-md5 on OSX
  - S8058927: ATG throws ClassNotFoundException
  - S8058932: java/net/InetAddress/IPv4Formats.java failed because hello.foo.bar does exist
  - S8058935: CPU detection gives 0 cores per cpu, 2 threads per core in Amazon EC2 environment
  - S8058936: hotspot/test/Makefile should use jtreg script from $JT_HOME/bin/jreg (instead of $JT_HOME/win32/bin/jtreg)
  - S8059216: Make PrintGCApplicationStoppedTime print information about stopping threads
  - S8059299: assert(adr_type != NULL) failed: expecting TypeKlassPtr
  - S8059327: XML parser returns corrupt attribute value
  - S8059563: (proxy) sun.misc.ProxyGenerator.generateProxyClass should create intermediate directories
  - S8060006: No Russian time zones mapping for Windows
  - S8060169: Update the Crash Reporting URL in the Java crash log
  - S8060170: Support SIO_LOOPBACK_FAST_PATH option on Windows
  - S8061507: Increment hsx 24.76 build to b02 for 7u76-b05
  - S8061694: Increment hsx 24.76 build to b03 for 7u76-b06
  - S8061954: 7u76 - deployment warning dialogs do not work on Linux
  - S8062021: NPE in sun/lwawt/macosx/CPlatformWindow::toFront after JDK-8060146
  - S8062170: java.security.ProviderException: Error parsing configuration with space
  - S8062178: merge issue: Test closed/java/util/TimeZone/Bug6329116.java fails in 7u-cpu nightly
  - S8062608: BCEL corrupts debug data of methods that use generics
  - S8062672: JVM crashes during GC on various asserts which checks that HeapWord ptr is an oop
  - S8062744: jdk.net.Sockets.setOption/getOption does not support IP_TOS
  - S8062771: Core reflection should use final fields whenever possible
  - S8062923: XSL: Run-time internal error in 'substring()'
  - S8062924: XSL: wrong answer from substring() function
  - S8064391: More thread safety problems in core reflection
  - S8064407: (fc) FileChannel transferTo should use TransmitFile on Windows
  - S8064493: Increment the build value to b04 for hs24.76 in 7u76-b08
  - S8064516: BCEL still corrupts generic methods if bytecode offsets are modified
  - S8064533: Remove and retag jdk7u76-b08 tag in 7u76/jdk repo
  - S8064667: Add -XX:+CheckEndorsedAndExtDirs flag to JDK 8
  - S8064846: Lazy-init thread safety problems in core reflection
  - S8065098: JColorChooser no longer supports drag and drop between two JVM instances
  - S8065238, PR2478: javax.naming.NamingException after upgrade to JDK 8
  - S8065552: setAccessible(true) on fields of Class may throw a SecurityException
  - S8065553: Failed Java web start via IPv6 (Java7u71 or later)
  - S8065609: 7u76 l10n resource file translation update
  - S8065618: C2 RA incorrectly removes kill projections
  - S8065674: javac generates incorrect LVT table for trivial cases
  - S8065765: Missing space in output message from -XX:+CheckEndorsedAndExtDirs
  - S8065994: HTTP Tunnel connection to NTLM proxy reauthenticates instead of using keep-alive
  - S8066045: opto/node.hpp:355, assert(i < _max) failed: oob: i=1, _max=1
  - S8066103: C2's range check smearing allows out of bound array accesses
  - S8066612: Add a test that will call getDeclaredFields() on all classes and try to set them accessible.
  - S8066649: 8u backport for 8065618 is incorrect
  - S8066756: Test test/sun/awt/dnd/8024061/bug8024061.java fails
  - S8066775: opto/node.hpp:355, assert(i < _max) failed: oob: i=1, _max=1
  - S8068338: Better message about incompatible zlib in Deflater.init
  - S8068507: (fc) Rename the new jdk.net.enableFastFileTransfer system property to jdk.nio.enableFastFileTransfer
  - S8068625: Remove extra year check for GenerateCurrencyData fix
  - S8068639: Make certain annotation classfile warnings opt-in
  - S8071423: Increment hsx 24.80 build to b08 for 7u80-b07
  - S8071499: java/net/InetAddress/B5087907.java fails with jdk7u85
  - S8071807: Increment hsx 24.80 build to b09 for 7u80-b08
  - S8072040: jdk7u80 l10n resource file translation update
  - S8072458: jdk/test/Makefile references (to be removed) win32 directory in jtreg
  - S8072639: Increment hsx 24.80 build to b10 for 7u80-b09
  - S8074855: [Regression] Test closed/java/awt/image/Raster/IncorrectScanlineStrideTest.java fails
  - S8075092: Remove erroneous println statement from DoubleByteDecoder
* Backports
  - S4890063, PR2305, RH1214835: HPROF: default text truncated when using doe=n option
  - S6991580, PR2308, RH1210739: IPv6 Nameservers in resolv.conf throws NumberFormatException
  - S8021120, PR2301: TieredCompilation can be enabled even if TIERED is undefined
  - S8025613, PR2437: clang: remove -Wno-unused-value
  - S8039921, PR2421: SHA1WithDSA with key > 1024 bits not working
  - S8048214, PR2357, G548784: Linker error when compiling G1SATBCardTableModRefBS after include order changes
  - S8072385, PR2387: Only the first DNSName entry is checked for endpoint identification
  - S8074761, PR2470, RH1194226: Empty optional parameters of LDAP query are not interpreted as empty
  - S8075136: Unnecessary sign extension for byte array access
  - S8076212, PR2314: AllocateHeap() and ReallocateHeap() should be inlined.
  - S8078654, PR2333: CloseTTFontFileFunc callback should be removed
  - S8078666, PR2326: JVM fastdebug build compiled with GCC 5 asserts with "widen increases"
  - S8081315, PR2405: Avoid giflib interlacing workaround with giflib 5.0.0 on
  - S8081475, PR2494: SystemTap does not work when JDK is compiled with GCC 5
* Bug fixes
  - PR94: empty install target in Makefile.am
  - PR1374: Provide option to strip and link debugging info after build
  - PR1661: Cleanup SYSTEM_GCONF option and allow it to be set false
  - PR1786: Allow x86 build to occur on x86_64 using a previously built x86_64 build
  - PR1816: Split download/extraction rules for OpenJDK so they can run in parallel
  - PR1846: Build fails when using IcedTea7 as bootstrap JDK with native ecj
  - PR1847: Synchronise javac.in with IcedTea6
  - PR1883: Search Debian multiarch paths when looking for pcsclite
  - PR1888: Allow tarball checksumming to be disabled
  - PR2060: Fix warnings found by Gentoo ebuild QA with gcc 4.9.1
  - PR2144: make dist fails due to lack of HotSpot-specific patches
  - PR2161: RHEL 6 has a version of GIO which meets the version criteria, but has no g_settings_*
  - PR2233, RH1190835: Discover gsettings symbols separately so early versions of GLib can be used (e.g. on RHEL 6)
  - PR2236, RH1191652: ppc64le should report its os.arch as ppc64le so tools can detect it
  - PR2320: Allow use of system GConf
  - PR2323: System GConf without system GIO configuration broken
  - PR2328: GCJ uses ppc64el named libarch directory on ppc64le
  - PR2341: Update README & INSTALL files
  - PR2359: Ensure all stamp targets have aliases
  - PR2390: Make elliptic curve removal optional
  - PR2394: ppc64le does not support -Xshare:dump
  - PR2395: Path to jvm.cfg is wrong in add-systemtap-boot
  - PR2446: Support system libsctp
  - PR2458: Policy JAR files should be timestamped with the date of the policy file they hold
  - PR2482, RH489586, RH1236619: OpenJDK can't handle spaces in zone names in /etc/sysconfig/clock
  - PR2496: Enable system PCSC support by default
  - PR2499: Update remove-intree-libraries.sh script
  - PR2507, G541462: Only apply PaX markings by default on running PaX kernels
  - PR2530: PaX mark the installed JDK so it runs on hardened systems
  - PR2531: Location of docs directory in install-data-local is incorrect
  - PR2532: install stage fails where BUILD_ARCH_DIR != INSTALL_ARCH_DIR
  - PR2533: Allow greater control of Javadoc installation directory
  - PR2534: Install TRADEMARK, COPYING and ChangeLog as RPM spec file does
  - PR2535: install-data-local needs to check that classes.jsa actually exists
  - PR2537: Desktop files do not allow installation from multiple versions of IcedTea 
  - PR2539: Libraries in some subdirectories of jre/lib/{arch} are not installed
  - PR2540: Specify a cacerts file for the OpenJDK build as we do for OpenJDK 8
  - PR2545: Extend tarball checksumming option to allow the checksum to be specified
  - PR2548: install stage doesn't install symbolic links
  - PR2550: Desktop file doesn't reference versioned icon
* CACAO
  - PR2380: Raise javadoc and JAVAC_FLAGS memory limits for CACAO
  - PR2519: Update to latest CACAO
  - PR2520: --enable-cacao builds broken, missing JVM_GetTemporaryDirectory impl.
* JamVM
  - PR2172: --enable-jamvm builds broken, missing JVM_GetTemporaryDirectory impl
  - PR2500: Add executable stack markings to callNative.S on JamVM
* AArch64 port
  - Add copyright to aarch64_ad.m4
  - S8069593: Changes to JavaThread::_thread_state must use acquire and release
  - S8074349: AARCH64: C2 generates poor code for some byte and character stores
  - S8075045: AARCH64: Stack banging should use store rather than load
  - S8075324: Costs of memory operands in aarch64.ad are inconsistent
  - S8075443: AARCH64: Missed L2I optimizations in C2
  - S8075930: AARCH64: Use FP Register in C2
  - S8076467: AARCH64: assertion fail with -XX:+UseG1GC
  - S8079203: AARCH64: Need to cater for different partner implementations
  - S8080586: aarch64: hotspot test compiler/codegen/7184394/TestAESMain.java fails
* PPC & AIX port
  - Changes to make aix compile after the merge
  - S8069590: AIX port of "8050807: Better performing performance data handling"
  - S8078482, PR2307, RH1201393: ppc: pass thread to throw_AbstractMethodError
  - S8080190: PPC64: Fix wrong rotate instructions in the .ad file

New in release 2.5.5 (2015-04-14):

* Security fixes
  - S8059064: Better G1 log caching
  - S8060461: Fix for JDK-8042609 uncovers additional issue
  - S8064601, CVE-2015-0480: Improve jar file handling
  - S8065286: Fewer subtable substitutions
  - S8065291: Improved font lookups
  - S8066479: Better certificate chain validation
  - S8067050: Better font consistency checking
  - S8067684: Better font substitutions
  - S8067699, CVE-2015-0469: Better glyph storage
  - S8068320, CVE-2015-0477: Limit applet requests
  - S8068720, CVE-2015-0488: Better certificate options checking
  - S8069198: Upgrade image library
  - S8071726, CVE-2015-0478: Better RSA optimizations
  - S8071818: Better vectorization on SPARC
  - S8071931, CVE-2015-0460: Return of the phantom menace
* Backports
  - S6584008, PR2193, RH1173326: jvmtiStringPrimitiveCallback should not be invoked when string value is null
  - S6956398, PR2250: make ephemeral DH key match the length of the certificate key
  - S7090424: TestGlyphVectorLayout failed automately with java.lang.StackOverflowError
  - S7142035: assert in j.l.instrument agents during shutdown when daemon thread is running
  - S7195480: javax.smartcardio does not detect cards on Mac OS X
  - S8001472: api/java_awt/Window/indexTGF_* tests fail because expected colors aren't equal
  - S8011646: SEGV in compiled code with loop predication
  - S8016545: java.beans.XMLEncoder.writeObject output is wrong
  - S8019324: assert(_f2 == 0 || _f2 == f2) failed: illegal field change
  - S8019623: Lack of synchronization in AppContext.getAppContext()
  - S8021804: Certpath validation fails if validity period of root cert does not include validity period of intermediate cert
  - S8022070: Compilation error in stubGenerator_sparc.cpp with some compilers
  - S8024061: Exception thrown when drag and drop between two components is executed quickly
  - S8028616: Htmleditorkit parser doesn't handle leading slash (/)
  - S8028617: Dvorak keyboard mapping not honored when ctrl key pressed
  - S8029837: NPE seen in XMLDocumentFragmentScannerImpl.setProperty since 7u40b33
  - S8031290: Adjust call to getisax() for additional words returned
  - S8032872: [macosx] Cannot select from JComboBox in a JWindow
  - S8032874: ArrayIndexOutOfBoundsException in JTable while clearing data in JTable
  - S8032878: Editable combos in table do not behave as expected
  - S8033113: wsimport fails on WSDL:header parameter name customization
  - S8033696: "assert(thread != NULL) failed: just checking" due to Thread::current() and JNI pthread interaction
  - S8036022: D3D: rendering with XOR composite causes InternalError.
  - S8036709: Java 7 jarsigner displays warning about cert policy tree
  - S8036819: JAB: mneumonics not read for textboxes
  - S8036983: JAB:Multiselection Ctrl+CursorUp/Down and ActivateDescenderPropertyChanged event
  - S8037477: Reproducible hang of JAWS and webstart application with JAB 2.0.4
  - S8038925: Java with G1 crashes in dump_instance_fields using jmap or jcmd without fullgc
  - S8039050: Crash in C2 compiler at Node::rematerialize
  - S8039298: assert(base == NULL || t_adr->isa_rawptr() || ! phase->type(base)->higher_equal(TypePtr::NULL_PTR))
  - S8039319: (smartcardio) Card.transmitControlCommand() does not work on Mac OS X
  - S8040228: TransformerConfigurationException occurs with security manager, FSP and XSLT Ext
  - S8040790: [TEST_BUG] tools/javac/innerClassFile/Driver.sh fails to cleanup files after it
  - S8041451: com.sun.jndi.ldap.Connection:ReadTimeout should abandon ldap request
  - S8041740: Test sun/security/tools/keytool/ListKeychainStore.sh fails on Mac
  - S8041979: sun/jvmstat/monitor/MonitoredVm/CR6672135.java failing on all platforms
  - S8042059: Various fixes to linux/sparc
  - S8042857: 14 stuck threads waiting for notification on LDAPRequest
  - S8043123: Hard crash with access violation exception when blitting to very large image
  - S8043200: Decrease the preference mode of RC4 in the enabled cipher suite list
  - S8043205: Incorrect system traps.h include path
  - S8043206: Fix signed vs. unsigned comparison warning in copy_sparc.hpp
  - S8043207: Add const to Address argument for Assembler::swap
  - S8043210: Add _BIG_ENDIAN define on linux/sparc
  - S8043507: javax.smartcardio.CardTerminals.list() fails on MacOSX
  - S8044602: Increment minor version of HSx for 7u72 and initialize the build number
  - S8044659: Java SecureRandom on SPARC T4 much slower than on x86/Linux
  - S8046769: Set T family feature bit on Niagara systems
  - S8048080: (smartcardio) javax.smartcardio.Card.openLogicalChannel() dosn't work on MacOSX
  - S8049081: Increment hsx 24.72 build to b02 for 7u72-b03
  - S8049542: C2: assert(size_in_words <= (julong)max_jint) failed: no overflow
  - S8049787: Increment hsx 24.72 build to b03 for 7u72-b04
  - S8050158: Introduce system property to maintain RC4 preference order
  - S8050165: linux-sparcv9: NMT detail causes assert((intptr_t*)younger_sp[FP->sp_offset_in_saved_window()] == (intptr_t*)((intptr_t)sp - STACK_BIAS)) failed: younger_sp must be valid
  - S8050167: linux-sparcv9: hs_err file does not show any stack information
  - S8055714: Increment hsx 24.72 build to b04 for 7u72-b11
  - S8056211: api/java_awt/Event/InputMethodEvent/serial/index.html#Input[serial2002] failure
  - S8060072: Increment minor version of HSx for 7u79 and initialize the build number
  - S8064454: [TEST_BUG] Test tools/javac/innerClassFile/Driver.sh fails for Mac and Linux
  - S8064532: 7u76 build failed with # 8041979
  - S8065072: sun/net/www/http/HttpClient/StreamingRetry.java failed intermittently
  - S8065373: [macosx] jdk8, jdk7u60 Regression in Graphics2D drawing of derived Fonts
  - S8065709: Deadlock in awt/logging apparently introduced by 8019623
  - S8065991: LogManager unecessarily calls JavaAWTAccess from within a critical section
  - S8068405: GenerateCurrencyData throws RuntimeException for old data
  - S8071591: java/util/logging/LogManagerAppContextDeadlock.java test started to fail due to JDK-8065991
  - S8072039: jdk7u79 l10n resource file translation update
  - S8072042: (tz) Support tzdata2015a
  - S8073226: Increment hsx 24.79 build to b02 for 7u79-b10
  - S8074312, PR2254, G541270: Enable hotspot builds on 4.x Linux kernels
  - S8074662: Update 3rd party readme and license for LibPNG v 1.6.16
  - S8075211: [TEST_BUG] Test sun/net/www/http/HttpClient/StreamingRetry.java fails with compilation error
* Bug fixes
  - PR2196, RH1164762: jhat man page has broken URL
  - PR2200, G531686: Support giflib 5.1.0
  - PR2210: DGifCloseFile call should check the return value, not the error code, for failure
  - PR2225: giflib 5.1 conditional excludes 6.0, 7.0, etc.
  - PR2250: JSSE server is still limited to 768-bit DHE
* ARM32 port
  - PR2228: Add ARM32 JIT
  - PR2297: Use the IcedTea 2.6.0 HotSpot on ARM32 by default
  - Several bug fixes to get Eclipse working
* AArch64 port
  - Add java.lang.ref.Reference.get intrinsic to template interpreter
  - Fix implementation of InterpreterMacroAssembler::increment_mdp_data_at().
  - Remove insanely large stack allocation in entry frame.
  - S6976528: PS: assert(!limit_exceeded || softrefs_clear) failed: Should have been cleared
  - S8020675: invalid jar file in the bootclasspath could lead to jvm fatal error
  - S8020829: NMT tests fail on platforms if NMT detail is not supported
  - S8026303: CMS: JVM intermittently crashes with "FreeList of size 258 violates Conservation Principle" assert
  - S8029775: Solaris code cleanup
  - S8041980: (hotspot) sun/jvmstat/monitor/MonitoredVm/CR6672135.java failing on all platforms
  - S8042235: redefining method used by multiple MethodHandles crashes VM
  - S8044406: JVM crash with JDK8 (build 1.8.0-b132) with G1 GC
  - S8046233: VerifyError on backward branch
  - S8046289: compiler/6340864/TestLongVect.java timeout with
  - S8048170: Test closed/java/text/Normalizer/ConformanceTest.java failed
  - S8050022: linux-sparcv9: assert(SharedSkipVerify || obj->is_oop()) failed: sanity check
  - S8054478: C2: Incorrectly compiled char[] array access crashes JVM
  - S8054530: C2: assert(res == old_res) failed: Inconsistency between old and new
  - S8054883: Segmentation error while running program
  - S8056309: Set minor version for hotspot in 7u76 to 76 and build number to b01
  - S8058583: Remove CompilationRepeat
  - S8058935: CPU detection gives 0 cores per cpu, 2 threads per core in Amazon EC2 environment
  - S8059216: Make PrintGCApplicationStoppedTime print information about stopping threads
  - S8060169: Update the Crash Reporting URL in the Java crash log
  - S8061507: Increment hsx 24.76 build to b02 for 7u76-b05
  - S8061694: Increment hsx 24.76 build to b03 for 7u76-b06
  - S8062229: Test failure of test_loggc_filename in 7u-cpu
  - S8062672: JVM crashes during GC on various asserts which checks that HeapWord ptr is an oop
  - S8064493: Increment the build value to b04 for hs24.76 in 7u76-b08
  - S8064667: Add -XX:+CheckEndorsedAndExtDirs flag to JDK 8
  - S8065618: C2 RA incorrectly removes kill projections
  - S8065765: Missing space in output message from -XX:+CheckEndorsedAndExtDirs
  - S8066045: opto/node.hpp:355, assert(i < _max) failed: oob: i=1, _max=1
  - S8066103: C2's range check smearing allows out of bound array accesses
  - S8066649: 8u backport for 8065618 is incorrect
  - S8066775: opto/node.hpp:355, assert(i < _max) failed: oob: i=1, _max=1
  - S8071947: AARCH64: frame::safe_for_sender() computes incorrect sender_sp value for interpreted frames
  - S8072129: [AARCH64] missing fix for 8066900
  - S8072483: AARCH64: aarch64.ad uses the wrong operand class for some operations

New in release 2.5.4 (2015-01-21):

* Security fixes
  - S8046656: Update protocol support
  - S8047125, CVE-2015-0395: (ref) More phantom object references
  - S8047130: Fewer escapes from escape analysis
  - S8048035, CVE-2015-0400: Ensure proper proxy protocols
  - S8049253: Better GC validation
  - S8050807, CVE-2015-0383: Better performing performance data handling
  - S8054367, CVE-2015-0412: More references for endpoints
  - S8055304, CVE-2015-0407: More boxing for DirectoryComboBoxModel
  - S8055309, CVE-2015-0408: RMI needs better transportation considerations
  - S8055479: TLAB stability
  - S8055489, CVE-2014-6585: Better substitution formats
  - S8056264, CVE-2014-6587: Multicast support improvements
  - S8056276, CVE-2014-6591: Fontmanager feature improvements
  - S8057555, CVE-2014-6593: Less cryptic cipher suite management
  - S8058982, CVE-2014-6601: Better verification of an exceptional invokespecial
  - S8059485, CVE-2015-0410: Resolve parsing ambiguity
  - S8061210, CVE-2014-3566: Issues in TLS
* Backports
  - S6461635: [TESTBUG] BasicTests.sh test fails intermittently
  - S6545422: [TESTBUG] NativeErrors.java uses wrong path name in exec
  - S6653795: C2 intrinsic for Unsafe.getAddress performs pointer sign extension on 32-bit systems
  - S7028073: The currency symbol for Peru is wrong
  - S7047033: (smartcardio) Card.disconnect(boolean reset) does not reset when reset is true
  - S7077119, PR2165, G534118: remove past transition dates from CurrencyData.properties file
  - S7085757: Currency Data: ISO 4217 Amendment 152
  - S7169142: CookieHandler does not work with localhost
  - S7172012, PR2067: Make test-in-build an option (Queens)
  - S7183753: [TEST] Some colon in the diff for this test
  - S7185456: (ann) Optimize Annotation handling in java/sun.reflect.* code for small number of annotations
  - S7195759: ISO 4217 Amendment 154
  - S8000897, RH1155012: VM crash in CompileBroker
  - S8001105: findVirtual of Object[].clone produces internal error
  - S8005232: (JEP-149) Class Instance size reduction
  - S8006748: getISO3Country() returns wrong value
  - S8012026: [macosx] Component.getMousePosition() does not work in an applet on MacOS
  - S8015421: NegativeArraySizeException occurs in ChunkedOutputStream() with Integer.MAX_VALUE
  - S8020190, PR2160, RH1176718: Fatal: Bug in native code: jfieldID must match object
  - S8021121: ISO 4217 Amendment Number 156
  - S8021372: NetworkInterface.getNetworkInterfaces() returns duplicate hardware address
  - S8022721: TEST_BUG: AnnotationTypeDeadlockTest.java throws java.lang.IllegalStateException: unexpected condition
  - S8025051: Update resource files for TimeZone display names
  - S8026792: HOTSPOT: licensee reports a JDK8 build failure after 8005849/8005008 fixes integrated.
  - S8027359: XML parser returns incorrect parsing results
  - S8028623, PR2112, RH1168693: SA: hash codes in SymbolTable mismatching java_lang_String::hash_code for extended characters.
  - S8028627: Unsynchronized code path from javax.crypto.Cipher to the WeakHashMap used by JceSecurity to store codebase mappings
  - S8028726: (prefs) Check src/solaris/native/java/util/FileSystemPreferences.c for JNI pending exceptions
  - S8029153: [TESTBUG] test/compiler/7141637/SpreadNullArg.java fails because it expects NullPointerException
  - S8031046: Native Windows ccache might still get unsupported ticket
  - S8031502: JSR292: IncompatibleClassChangeError in LambdaForm for CharSequence.toString() method handle type converter
  - S8032078: [macosx] CPlatformWindow.setWindowState throws RuntimeException, if windowState=ICONIFIED|MAXIMIZED_BOTH
  - S8032669: Mouse release not being delivered to Swing component in 7u45
  - S8032788: ImageIcon constructor throws an NPE and hangs when passed a null String parameter
  - S8032909: XSLT string-length returns incorrect length when string includes complementary chars
  - S8034200: Test java/net/CookieHandler/LocalHostCookie.java fails after fix of JDK-7169142
  - S8036863: Update jdk7 testlibrary to match jdk8 in hotspot
  - S8040168: Set hotspot version to hs24.66 and build to b01 for 7u66
  - S8040617: [macosx] Large JTable cell results in a OutOfMemoryException
  - S8041132: Increment hsx 24.66 build to b02 for 7u66-b09
  - S8041408: Increment hsx 24.55 build to b04 for 7u55-b34
  - S8041572: [macosx] huge native memory leak in AWTWindow.m
  - S8041990: [macosx] Language specific keys does not work in applets when opened outside the browser
  - S8043610: Sorting columns in JFileChooser fails with AppContext NPE
  - S8044603: Increment minor version of HSx for 7u71 and initialize the build number
  - S8046343: (smartcardio) CardTerminal.connect('direct') does not work on MacOSX
  - S8049250: Need a flag to invert the Card.disconnect(reset) argument
  - S8049343: (tz) Support tzdata2014g
  - S8049758: Increment minor version of HSx for 7u75 and initialize the build number
  - S8050485: super() in a try block in a ctor causes VerifyError
  - S8051359: JPopupMenu creation in headless mode with JDK9b23 causes NPE
  - S8051614: smartcardio TCK tests fail due to lack of 'reset' permission
  - S8055222: Currency update needed for ISO 4217 Amendment #159
  - S8056211: api/java_awt/Event/InputMethodEvent/serial/index.html#Input[serial2002] failure
  - S8057184: JCK8's api/javax_swing/JDesktopPane/descriptions.html#getset failed with GTKLookAndFeel on Linux and Solaris
  - S8058715: stability issues when being launched as an embedded JVM via JNI
  - S8059206: (tz) Support tzdata2014i
  - S8060474: Resolve more parsing ambiguity
  - S8061685: Increment hsx 24.75 build to b02 for 7u75-b06
  - S8061785: [TEST_BUG] serviceability/sa/jmap-hashcode/Test8028623.java has utf8 character corrupted by earlier merge
  - S8061826: Part of JDK-8060474 should be reverted
  - S8062561: Test bug8055304 fails if file system default directory has read access
  - S8062807: Exporting RMI objects fails when run under restrictive SecurityManager
  - S8064300: Increment hsx 24.75 build to b03 for 7u75-b06
  - S8064560: (tz) Support tzdata2014j
  - S8065608: 7u75 l10n resource file translation update
  - S8065787: Increment hsx 24.75 build to b04 for 7u75-b10
  - S8066747: Backing out Japanese translation change in awt_ja.properties
  - S8067364, PR2145, RH114622: Printing to Postscript doesn't support dieresis
* Bug fixes
  - PR2064: Unset OS before running OpenJDK build
  - PR2069: Type-punning warnings still evident on RHEL 5
  - PR2094, RH1163501: 2048-bit DH upper bound too small for Fedora infrastructure
  - PR2123: SunEC provider crashes when built using system NSS
  - PR2124: Synchronise elliptic curves in sun.security.ec.NamedCurve with those listed by NSS
  - PR2135: Race condition in SunEC provider with system NSS
  - PR2161: RHEL 6 has a version of GIO which meets the version criteria, but has no g_settings_*
* CACAO
  - PR2032: CACAO lacks JVM_FindClassFromCaller introduced by security patch in 2.5.3
* JamVM
  - PR2050: JamVM lacks JVM_FindClassFromCaller introduced by security patch in 2.5.3
  - PR2171: JamVM builds with executable stack, causing failures on SELinux & PaX kernels
* AArch64 port
  - Use the IcedTea7 fork version rather than the one based on HotSpot 25.
  - Add arch-specific processing of tmp1 register needed for d/f2i
  - Add char_array_equals intrinsic
  - Add CNEG and CNEGW to macro assembler.
  - Add frame anchor fences.
  - Add missing instruction synchronization barriers and cache flushes.
  - Add some memory barriers for object creation and runtime calls.
  - Add support for A53 multiply accumulate
  - Add support for AES Intrinsics
  - Add support for pipeline scheduling
  - Add support for String.indexOf intrinsic
  - Added make rules to allow aarch64-x86 hybrid build to progress
  - Added missing aarch64-specific include
  - Added missing aarch64-specific make file
  - Added missing changes for debug code
  - Added missing inline method
  - Added missing shared global UseCRC32Intrinsics
  - Added pd global UseVectoredExceptions
  - Add local method to redirect to AbstractAssembler::relocate
  - Add missing declarations for CRC32 methods
  - Add missing include
  - Add missing special case code for aarch64
  - Add rules to assemble .S files
  - Add support for storing aarch64 call format
  - Add wrapper method to avoid dependency on not yet defined code buffer class
  - Added missing endif
  - Allow for 0x400 aligned offsets for byte_map_base
  - Array load must only read 32 bits
  - A more efficient sequence for C1_MacroAssembler::float_cmp.
  - Backout 8c8b5e62e624 and instead move .S rule from zeroshark.make to rules.make
  - Backout additional changes made in ec6a6772fed6, which revert parts of the PPC/AIX port and IcedTea fixes.
  - Call ICache::invalidate_range() from Relocation::pd_set_data_value().
  - Changed klass oop encode to heap oop encode
  - Changed Method* to methodOop
  - Correct assert to allow for AArch64
  - Correct for difference in include hierarchy
  - Correct typos
  - Corrected error in disassembler code
  - Corrected include
  - Corrected include path
  - Corrected pipeline class for countTrailingZerosL
  - Corrected type
  - Corrected typo
  - Correct includes
  - Correct Method to methdoOopDesc
  - Define uabs().  Use it everywhere an absolute value is wanted.
  - Defn of BIND does not need to use __ macro
  - Delete dead code.
  - Disassembler library should be built as hsdis-aarch64.so
  - Don't test arraycopy routines when using AArch64 simulator
  - Emit_int64 is renamed
  - Ensure byte_map_base can be loaded using adrp with no need for following ldr
  - Ensure C1 static call stub employs absolute move to allow patching
  - Ensure C2 static calls use correct call adddress in static stub reloc
  - Ensure perm gen size is not rounded down to zero
  - Ensure rmethod is reloaded from stack when interpreter makes non leaf VM call
  - Ensure we pick up hsdis-aarch64.so if BUILTIN_SIM is true
  - Fix couple of mistakes in generate of method handle dispatch
  - Fix cut and paste-o in header
  - Fixed another typo
  - Fixed error in include
  - Fixed hsdis for aarch64 native or simulated
  - Fixed various typos and omissions
  - Fixed various typos, overlooked cases and wrong accessors
  - Fix error introduced into profiling code
  - Fix guarantee failure in synchronizer.cpp
  - Fix more errors introduced into interpreter profile counter increment
  - Fix relocations
  - Fix several small typos
  - Fix some typos
  - Fix thinko in Atomic::xchg_ptr.
  - Fix typo
  - Fix up aarch64-specific patching code
  - Fix up crc32 support
  - Fix various typos
  - Get rid of unnecessary declaration
  - Guess at how to implement C1 deoptimize_trap generator
  - Initial cut of aarch64 code pulled from jdk8 tree
  - Make aarch64-x86 hybrid build use correct paths
  - Make hsdis handle aarch64 native case
  - Make static stubs load methodOop in cpool to avoid problems at GC
  - Miscellaneous bug fixes.
  - Missing change needed to support aarch64 build
  - Modified make files to support aarch64 build
  - Modified shared src to support full aarch64 backport
  - Moved fields which need access from java to top level
  - Need to actually return the adapter code size
  - Need to pass CFLAGS when assembling .S files using CC_COMPILE
  - Need to use class handle not class
  - Provide missing CRC32 methods
  - Reload rcpool register after a VM call in case a permgen GC has moved the cache
  - Relocated aarch64 vtable generate code to conform to jdk7
  - Remove comment to avoid breaking macro
  - Removed aarch64 compiled_IC implementation to conform to jdk7
  - Removed metaspaceShared code to conform to jdk7
  - Removed redundant field use_XOR_for_compressed_class_base
  - Removed some errors in signal handling code
  - Removed undefined metadata case
  - Remove redundant bracket
  - Remove support for volatile load/store rules in ad file
  - Renamed emit_int32 to emit_long and added local emit_long64 in place of missing emit_int64
  - Restored missing open brace
  - Restored several load_heap_oop calls lost in translation
  - Restore working x86 build
  - Reverted aarch64 architecture description (ad) file to conform to jdk7
  - Reverted aarch64 c1_xxx files to conform to jdk7
  - Reverted aarch64 c2 globals to conform to jdk7
  - Reverted aarch64 frame code to conform to jdk7
  - Reverted aarch64 runtime code to conform to jdk7
  - Reverted aarch64 stubs code to conform to jdk7
  - Reverted aarch64 template interpreter code to conform to jdk7
  - Reverted aarch64 vm structs code to conform to jdk7
  - Reverted aarch64 vm version code to conform to jdk7
  - Reverted aarch64 vtable stubs code to conform to jdk7
  - Reverted assembler_aarch64.cpp/hpp to conform to jdk7
  - Reverted bytecodeInterpreter_aarch64 to conform to jdk7
  - Reverted global defs code to conform to jdk7
  - Reverted instr cache code to conform to jdk7
  - Reverted interpreter code to conform to jdk7
  - Reverted interpreter masm code to conform to jdk7
  - Reverted jni code to conform to jdk7
  - Reverted method handles code to conform to jdk7
  - Reverted native instr code to conform to jdk7
  - Reverted os_cpu/linux_aarch64 code to conform to jdk7
  - Reverted reloc info code to conform to jdk7
  - Revert Method:: etc to methodOopDesc:: etc
  - Scripts to build aarch64-x86 hybrid and aarch64 native debug images
  - Some errors revealed when building debug image
  - Temporarily disable running test_gamma
  - Tidy up allocation prefetch
  - Use correct post-increment size in repne_scanw
  - Use membar rules and delete special case volatile rules
  - Use method register to access counter increment field
  - Use movoop in C1 ic_call to keep verifier happy
  - Use os::malloc to allocate the register map.
  - Use the correct return value from the VM resolve call
  - Use TLS for ThreadLocalStorage::thread()
  - Various changes to accommodate inclusion of ppc port in icedtea7
  - Various concurrency fixes.
  - Work around weird compiler issue

New in release 2.5.3 (2014-10-14):

* Security fixes
  - S8015256: Better class accessibility
  - S8022783, CVE-2014-6504: Optimize C2 optimizations
  - S8035162: Service printing service
  - S8035781: Improve equality for annotations
  - S8036805: Correct linker method lookup.
  - S8036810: Correct linker field lookup
  - S8036936: Use local locales
  - S8037066, CVE-2014-6457: Secure transport layer
  - S8037846, CVE-2014-6558: Ensure streaming of input cipher streams
  - S8038364: Use certificate exceptions correctly
  - S8038899: Safer safepoints
  - S8038903: More native monitor monitoring
  - S8038908: Make Signature more robust
  - S8038913: Bolster XML support
  - S8039509, CVE-2014-6512: Wrap sockets more thoroughly
  - S8039533, CVE-2014-6517: Higher resolution resolvers
  - S8041529: Better parameterization of parameter lists
  - S8041540, CVE-2014-6511: Better use of pages in font processing
  - S8041545: Better validation of generated rasters
  - S8041564, CVE-2014-6506: Improved management of logger resources
  - S8041717, CVE-2014-6519: Issue with class file parser
  - S8042609, CVE-2014-6513: Limit splashiness of splash images
  - S8042797, CVE-2014-6502: Avoid strawberries in LogRecord
  - S8044274, CVE-2014-6531: Proper property processing
* Backports
  - S4963723, RH1145848: Implement SHA-224
  - S7044060, RH1145848: Need to support NSA Suite B Cryptography algorithms
  - S7122142: (ann) Race condition between isAnnotationPresent and getAnnotations
  - S7160837: DigestOutputStream does not turn off digest calculation when "close()" is called
  - S8006935, RH1145848: Need to take care of long secret keys in HMAC/PRF compuation
  - S8012637: Adjust CipherInputStream class to work in AEAD/GCM mode
  - S8028192: Use of PKCS11-NSS provider in FIPS mode broken
  - S8038000: java.awt.image.RasterFormatException: Incorrect scanline stride
  - S8039396: NPE when writing a class descriptor object to a custom ObjectOutputStream
  - S8042603: 'SafepointPollOffset' was not declared in static member function 'static bool Arguments::check_vm_args_consistency()'
  - S8042850: Extra unused entries in ICU ScriptCodes enum
  - S8052162: REGRESSION: sun/java2d/cmm/ColorConvertOp tests fail since 7u71 b01
  - S8053963: (dc) Use DatagramChannel.receive() instead of read() in connect()
  - S8055176: 7u71 l10n resource file translation update
* Bug fixes
  - PR1988: C++ Interpreter should no longer be used on ppc64
  - PR1989: Make jdk_generic_profile.sh handle missing programs better and be more verbose
  - PR1992, RH735336: Support retrieving proxy settings on GNOME 3.12.2
  - PR2000: Synchronise HEAD tarball paths with release branch paths
  - PR2002: Fix references to hotspot.map following PR2000
  - PR2003: --disable-system-gtk option broken by refactoring in PR1736
  - PR2009: Checksum of policy JAR files changes on every build
  - PR2014: Use version from hotspot.map to create tarball filename
  - PR2015: Update hotspot.map documentation in INSTALL
  - PR2025: LCMS_CFLAGS & LCMS_LIBS should not be used unless SYSTEM_LCMS is enabled
  - RH1015432: java-1.7.0-openjdk: Fails on PPC with StackOverflowError (revised comprehensive fix)
* CACAO
  - PR2030, G453612, CA172: ARM hardfloat support for CACAO
* AArch64 port
  - AArch64 C2 instruct for smull
  - Add frame anchor fences.
  - Add MacroAssembler::maybe_isb()
  - Add missing instruction synchronization barriers and cache flushes.
  - Add support for a few simple intrinsics
  - Add support for builtin crc32 instructions
  - Add support for Neon implementation of CRC32
  - All address constants are 48 bits in size.
  - array load must only read 32 bits
  - Define uabs().  Use it everywhere an absolute value is wanted.
  - Fast string comparison
  - Fast String.equals()
  - Fix register usage in generate_verify_oop().
  - Fix thinko in Atomic::xchg_ptr.
  - Fix typo in fsqrts
  - Improve C1 performance improvements in ic_cache checks
  - Performance improvement and ease of use changes pulled from upstream
  - Remove obsolete C1 patching code.
  - Replace hotspot jtreg test suite with tests from jdk7u
  - S8024648: 7141246 breaks Zero port
  - Save intermediate state before removing C1 patching code.
  - Unwind native AArch64 frames.
  - Use 2- and 3-instruction immediate form of movoop and mov_metadata in C2-generated code.
  - Various concurrency fixes.

New in release 2.5.2 (2014-08-29):

* Backports
  - S8049480: Current versions of Java can't verify jars signed and timestamped with Java 9
  - S8051012, LP1360392: Regression in verifier for <init> method call from inside of a branch
* Bug fixes
  - PR1903: [REGRESSION] Bug reports now lack IcedTea version & distribution packaging information
  - PR1948: Only try and symlink debuginfo if STRIP_POLICY is other than no_strip
  - PR1948: Fix indenting
  - PR1966: Move to new OpenJDK bug URL format
  - RH1015432: java-1.7.0-openjdk: Fails on PPC with StackOverflowError (revised fix for PPC32)
* PPC & AIX port
  - Adapt AIX port to 5049299: (process) Use posix_spawn, not fork, on S10 to avoid swap exhaustion
  - Adapt aix to 8022507
  - Fix aix after 8022507: SIGSEGV at ParMarkBitMap::verify_clear()
  - S8050942: PPC64: implement template interpreter for ppc64le
  - S8050972: Concurrency problem in PcDesc cache

New in release 2.4.8 (2014-07-23):

* Security fixes
  - S8029755, CVE-2014-4209: Enhance subject class
  - S8030763: Validate global memory allocation
  - S8031340, CVE-2014-4264: Better TLS/EC management
  - S8031346, CVE-2014-4244: Enhance RSA key handling
  - S8031540: Introduce document horizon
  - S8032536: JVM resolves wrong method in some unusual cases
  - S8033055: Issues in 2d
  - S8033301, CVE-2014-4266: Build more informative InfoBuilder
  - S8034267: Probabilistic native crash
  - S8034272: Do not cram data into CRAM arrays
  - S8034985, CVE-2014-2483: Better form for Lambda Forms
  - S8035004, CVE-2014-4252: Provider provides less service
  - S8035009, CVE-2014-4218: Make Proxy representations consistent
  - S8035119, CVE-2014-4219: Fix exceptions to bytecode verification
  - S8035699, CVE-2014-4268: File choosers should be choosier
  - S8035788. CVE-2014-4221: Provide more consistency for lookups
  - S8035793, CVE-2014-4223: Maximum arity maxed out
  - S8036571: (process) Process process arguments carefully
  - S8036800: Attribute OOM to correct part of code
  - S8037046: Validate libraries to be loaded
  - S8037076, CVE-2014-2490: Check constant pool constants
  - S8037157: Verify <init> call
  - S8037162, CVE-2014-4263: More robust DH exchanges
  - S8037167, CVE-2014-4216: Better method signature resolution
  - S8039520, CVE-2014-4262: More atomicity of atomic updates
* Backports
  - S5049299: (process) Use posix_spawn, not fork, on S10 to avoid swap exhaustion
  - S6571600: JNI use results in UnsatisfiedLinkError looking for libmawt.so
  - S7131153: GetDC called way too many times - causes bad performance.
  - S7190349: [macosx] Text (Label) is incorrectly drawn with a rotated g2d
  - S8001108: an attempt to use "<init>" as a method name should elicit NoSuchMethodException
  - S8001109: arity mismatch on a call to spreader method handle should elicit IllegalArgumentException
  - S8008118: (process) Possible null pointer dereference in jdk/src/solaris/native/java/lang/UNIXProcess_md.c
  - S8013611: Modal dialog fails to obtain keyboard focus
  - S8013809: deadlock in SSLSocketImpl between between write and close
  - S8013836: getFirstDayOfWeek reports wrong day for pt-BR locale
  - S8014460: Need to check for non-empty EXT_LIBS_PATH before using it
  - S8019853: Break logging and AWT circular dependency
  - S8019990: IM candidate window appears on the South-East corner of the display.
  - S8020191: System.getProperty("os.name") returns "Windows NT (unknown)" on Windows 8.1
  - S8022452: Hotspot needs to know about Windows 8.1 and Windows Server 2012 R2
  - S8023990: Regression: postscript size increase from 6u18
  - S8024283: 10 nashorn tests fail with similar stack trace InternalError with cause being NoClassDefFoundError
  - S8024616: JSR292: lazily initialize core NamedFunctions used for bootstrapping
  - S8024648: 7141246 & 8016131 break Zero port (AArch64 only)
  - S8024830: SEGV in org.apache.lucene.codecs.compressing.CompressingTermVectorsReader.get
  - S8025588: [macosx] Frozen AppKit thread in 7u40
  - S8026404: Logging in Applet can trigger ACE: access denied ("java.lang.RuntimePermission" "modifyThreadGroup")
  - S8026705: [TEST_BUG] java/beans/Introspector/TestTypeResolver.java failed
  - S8027196: Increment minor version of HSx for 7u55 and initialize the build number
  - S8027212: java/nio/channels/Selector/SelectAfterRead.java fails intermittently
  - S8028285: RMI Thread can no longer call out to AWT
  - S8029177: [Parfait] warnings from b117 for jdk.src.share.native.com.sun.java.util.jar: JNI exception pending
  - S8030655: Regression: 14_01 Security fix 8024306 causes test failures
  - S8030813: Signed applet fails to load when CRLs are stored in an LDAP directory
  - S8030822: (tz) Support tzdata2013i
  - S8031050: (thread) Change Thread initialization so that thread name is set before invoking SecurityManager
  - S8031075: [Regression] focus disappears with shift+tab on dialog having one focus component
  - S8031462: Fonts with morx tables are broken with latest ICU fixes
  - S8032585: JSR292: IllegalAccessError when attempting to invoke protected method from different package
  - S8032740: Need to create SE Embedded Source Bundles in 7 Release
  - S8033278: Missed access checks for Lookup.unreflect* after 8032585
  - S8034772: JDK-8028795 brought a specification change to 7u55 release and caused JCK7 signature test failure
  - S8035283: Second phase of branch shortening doesn't account for loop alignment
  - S8035613: With active Securitymanager JAXBContext.newInstance fails
  - S8035618: Four api/org_omg/CORBA TCK tests fail under plugin only
  - S8036147: Increment hsx 24.55 build to b02 for 7u55-b11
  - S8036786: Update jdk7 testlibrary to match jdk8
  - S8036837: Increment hsx 24.55 build to b03 for 7u55-b12
  - S8037012: (tz) Support tzdata2014a
  - S8038306: (tz) Support tzdata2014b
  - S8038392, RH1064383: Generating prelink cache breaks JAVA 'jinfo' utility normal behavior
  - S8042264: 7u65 l10n resource file translation update 1
  - S8042582: Test java/awt/KeyboardFocusmanager/ChangeKFMTest/ChangeKFMTest.html fails on Windows x64
  - S8042590: Running form URL throws NPE
  - S8042789: org.omg.CORBA.ORBSingletonClass loading no longer uses context class loader
  - S8043012: (tz) Support tzdata2014c
* Bug fixes
  - Fix accidental reversion of PR1188 for armel
  - PR1781: NSS PKCS11 provider fails to handle multipart AES encryption
  - PR1830: Drop version requirement for LCMS 2
  - PR1833, RH1022017: Report elliptic curves supported by NSS, not the SunEC library
  - RH905128: [CRASH] OpenJDK-1.7.0 while using NSS security provider and kerberos
* AArch64 port
  - AArch64 C2 instruct for smull
  - Add a constructor as a conversion from Register - RegSet.  Use it.
  - Add RegSet::operator+=.
  - Add support for a few simple intrinsics
  - Add support for builtin crc32 instructions
  - Add support for CRC32 intrinsic
  - Add support for Neon implementation of CRC32
  - All address constants are 48 bits in size.
  - C1: Fix offset overflow when profiling.
  - Common frame handling for C1/C2 which correctly handle all frame sizes
  - Correct costs for operations with shifts.
  - Correct OptoAssembly for prologs and epilogs.
  - Delete useless instruction.
  - Don't use any form of _call_VM_leaf when we're calling a stub.
  - Fast string comparison
  - Fast String.equals()
  - Fix a tonne of bogus comments.
  - Fix biased locking and enable as default
  - Fix instruction size from 8 to 4
  - Fix opto assembly for shifts.
  - Fix register misuse in verify_method_data_pointer
  - Fix register usage in generate_verify_oop().
  - Implement various locked memory operations.
  - Improve C1 performance improvements in ic_cache checks
  - Improve code generation for pop(), as suggested by Edward Nevill.
  - Improvements to safepoint polling
  - Make code entry alignment 64 for C2
  - Minor optimisation for divide by 2
  - New cost model for instruction selection.
  - Offsets in lookupswitch instructions should be signed.
  - Optimise addressing of card table byte map base
  - Optimise C2 entry point verification
  - Optimise long divide by 2
  - Performance improvement and ease of use changes pulled from upstream
  - Preserve callee save FP registers around call to java code
  - Remove obsolete C1 patching code.
  - Remove special-case handling of division arguments.  AArch64 doesn't need it.
  - Remove unnecessary memory barriers around CAS operations
  - Restore sp from sender sp, r13 in crc32 code
  - Restrict default ReservedCodeCacheSize to 128M
  - Rewrite CAS operations to be more conservative
  - Save intermediate state before removing C1 patching code.
  - Tidy up register usage in push/pop instructions.
  - Tidy up stack frame handling.
  - Use 2- and 3-instruction immediate form of movoop and mov_metadata in C2-generated code.
  - Use an explicit set of registers rather than a bitmap for psh and pop operations.
  - Use explicit barrier instructions in C1.
  - Use gcc __clear_cache instead of doing it ourselves

New in release 2.5.1 (2014-07-16):

* Security fixes
  - S8029755, CVE-2014-4209: Enhance subject class
  - S8030763: Validate global memory allocation
  - S8031340, CVE-2014-4264: Better TLS/EC management
  - S8031346, CVE-2014-4244: Enhance RSA key handling
  - S8031540: Introduce document horizon
  - S8032536: JVM resolves wrong method in some unusual cases
  - S8033055: Issues in 2d
  - S8033301, CVE-2014-4266: Build more informative InfoBuilder
  - S8034267: Probabilistic native crash
  - S8034272: Do not cram data into CRAM arrays
  - S8034985, CVE-2014-2483: Better form for Lambda Forms
  - S8035004, CVE-2014-4252: Provider provides less service
  - S8035009, CVE-2014-4218: Make Proxy representations consistent
  - S8035119, CVE-2014-4219: Fix exceptions to bytecode verification
  - S8035699, CVE-2014-4268: File choosers should be choosier
  - S8035788. CVE-2014-4221: Provide more consistency for lookups
  - S8035793, CVE-2014-4223: Maximum arity maxed out
  - S8036571: (process) Process process arguments carefully
  - S8036800: Attribute OOM to correct part of code
  - S8037046: Validate libraries to be loaded
  - S8037076, CVE-2014-2490: Check constant pool constants
  - S8037157: Verify <init> call
  - S8037162, CVE-2014-4263: More robust DH exchanges
  - S8037167, CVE-2014-4216: Better method signature resolution
  - S8039520, CVE-2014-4262: More atomicity of atomic updates
* Backports
  - S8001108: an attempt to use "<init>" as a method name should elicit NoSuchMethodException
  - S8001109: arity mismatch on a call to spreader method handle should elicit IllegalArgumentException
  - S8013611: Modal dialog fails to obtain keyboard focus
  - S8013836: getFirstDayOfWeek reports wrong day for pt-BR locale
  - S8019990: IM candidate window appears on the South-East corner of the display.
  - S8023990: Regression: postscript size increase from 6u18
  - S8024283: 10 nashorn tests fail with similar stack trace InternalError with cause being NoClassDefFoundError
  - S8024616: JSR292: lazily initialize core NamedFunctions used for bootstrapping
  - S8027212: java/nio/channels/Selector/SelectAfterRead.java fails intermittently
  - S8028285: RMI Thread can no longer call out to AWT
  - S8029177: [Parfait] warnings from b117 for jdk.src.share.native.com.sun.java.util.jar: JNI exception pending
  - S8031075: [Regression] focus disappears with shift+tab on dialog having one focus component
  - S8032585: JSR292: IllegalAccessError when attempting to invoke protected method from different package
  - S8033278: Missed access checks for Lookup.unreflect* after 8032585
  - S8034926: Attribute classes properly
  - S8035613: With active Securitymanager JAXBContext.newInstance fails
  - S8035834: InetAddress.getLocalHost() can hang after JDK-8030731 was fixed
  - S8035923: Set minor version for hotspot in 7u65 to 65 and build number to b01
  - S8036786: Update jdk7 testlibrary to match jdk8
  - S8039324: Increment hsx 24.65 build to b02 for 7u65-b07
  - S8040156: Increment hsx 24.65 build to b03 for 7u65-b08
  - S8041264: Increment hsx 24.65 build to b04 for 7u65-b09
  - S8042264: 7u65 l10n resource file translation update 1
  - S8042582: Test java/awt/KeyboardFocusmanager/ChangeKFMTest/ChangeKFMTest.html fails on Windows x64
  - S8042590: Running form URL throws NPE
  - S8042789: org.omg.CORBA.ORBSingletonClass loading no longer uses context class loader
  - S8043012: (tz) Support tzdata2014c
* Bug fixes
  - PR1853: Revert PR729 from minor release
  - PR1864: PCSC + OpenJDK 1.7 crash on Fedora 20
  - PR1867: Turn the infinality patch off by default
  - PR1868: Avoid x86 workaround when running Zero rather than a JIT
* AArch64 port
  - Common frame handling for C1/C2 which correctly handle all frame sizes
  - Fix register misuse in verify_method_data_pointer
  - Fix register usage in generate_verify_oop().
  - Restrict default ReservedCodeCacheSize to 128M
  - Use explicit barrier instructions in C1.

New in release 2.5.0 (2014-06-13):

* OpenJDK
  - S5049299: (process) Use posix_spawn, not fork, on S10 to avoid swap exhaustion
  - S6412968: CMS: Long initial mark pauses
  - S6571600: JNI use results in UnsatisfiedLinkError looking for libmawt.so
  - S6889597: TEST_BUG: javax/management/remote/mandatory/URLTest.java test should be updated in jdk7 Workspace
  - S6900441: PlatformEvent.park(millis) on Linux could still be affected by changes to the time-of-day clock
  - S6989981: jstack causes "fatal error: ExceptionMark destructor expects no pending exceptions"
  - S7074436: (sc) SocketChannel can do short gathering writes when channel configured blocking (win)
  - S7123493: (proxy) Proxy.getProxyClass doesn't scale under high load
  - S7124232: [TEST_BUG] [macosx] JSplitPane has wrong divider location
  - S7124314: [TEST_BUG] [macosx] Aqua LAF: JTree doesn't select element by keyboards left and right keys
  - S7124320: [TEST_BUG] [macosx] JComboBox doesn't change selection on mouse over
  - S7124338: [macosx] Selection lost if a selected item removed from a java.awt.List
  - S7129133: [macosx] Accelerators are displayed as Meta instead of the Command symbol
  - S7131153: GetDC called way too many times - causes bad performance.
  - S7133122: SA throws sun.jvm.hotspot.debugger.UnmappedAddressException when it should not
  - S7133146: [macosx] closed/javax/swing/JInternalFrame/4193219/IconCoord fails on MacOS
  - S7133154: [TEST_BUG] [macosx] closed/javax/swing/JInternalFrame/4251301/bug4251301.java fails on MacOS
  - S7145569: G1: optimize nmethods scanning
  - S7147084: (process) appA hangs when read output stream of appB which starts appC that runs forever
  - S7171591: getDefaultScopeID() in src/solaris/native/java/net/net_util_md.c should return a value
  - S7173464: Clipboard.getAvailableDataFlavors: Comparison method violates contract
  - S7176574: sun/security/krb5/auto/TcpTimeout.java failed with solaris-i586
  - S7186887: Test T6567415.java can fail on a slow machine
  - S7187554: JSR 292: JVMTI PopFrame needs to handle appendix arguments
  - S7190349: [macosx] Text (Label) is incorrectly drawn with a rotated g2d
  - S7191817: -XX:+UseSerialGC -XX:+UseLargePages crashes with SIGFPE on MacOS X
  - S7194607: VerifyLocalVariableTableOnRetransformTest.sh fails after JSR-292 merge
  - S7197210: java/lang/invoke/CallSiteTest.java failing on armsflt.
  - S8003253: TEST_BUG: java/nio/channels/AsynchronousChannelGroup/Unbounded.java hang intermittently [win]
  - S8003262: reverse translation required changes in xalan resource bundles
  - S8003285: TEST_BUG: java/nio/channels/AsynchronousChannelGroup/Unbounded.java fails again [macosx]
  - S8003895: java/nio/channels/AsynchronousChannelGroup/Unbounded.java failing again [win64]
  - S8004032: [TEST_BUG] [macosx] There is no effect when double clicking on the Icon, after right clicking on the Icon and the Icon disappear
  - S8004051: assert(_oprs_len[mode] < maxNumberOfOperands) failed: array overflow
  - S8004476: XSLT Extension Functions Don't Work in WebStart
  - S8005128: JSR 292: the mlvm redefineClassInBootstrap test crashes in ConstantPool::compare_entry_to
  - S8006395: Race in async socket close on Linux
  - S8006542: JSR 292: the VM_RedefineClasses::append_entry() must support invokedynamic entry kinds
  - S8006546: JSR 292: typos in the ConstantPool::copy_cp_impl()
  - S8006628: NEED_TEST for JDK-8002870
  - S8006731: JSR 292: the VM_RedefineClasses::rewrite_cp_refs_in_method() must support invokedynamic
  - S8007037: JSR 292: the VM_RedefineClasses::append_entry() should do cross-checks with indy operands
  - S8007454: (process) SetHandleInformation parameters DWORD (not BOOLEAN)
  - S8008118: (process) Possible null pointer dereference in jdk/src/solaris/native/java/lang/UNIXProcess_md.c
  - S8008511: JSR 292: MemberName vmtarget refs to methods must be updated at class redefinition
  - S8008733: Psr:perf:osb performance regression (18%) in wss_bodyenc
  - S8009062: poor performance of JNI AttachCurrentThread after fix for 7017193
  - S8009213: sun/management/jdp/JdpTest.sh fails with exit code 1
  - S8009222: java.lang.IllegalArgumentException: not invocable, no method type when attempting to get getter method handle for a static field
  - S8011194: Apps launched via double-clicked .jars have file.encoding value of US-ASCII on Mac OS X
  - S8011343: Add new flag for verifying the heap during startup
  - S8011944: Sort fails with ArrayIndexOutOfBoundsException
  - S8011955: Lunar screen reader crashes intermittently in WindowsAccessBridge-32.DLL
  - S8012244: java/net/Socket/asyncClose/Race.java fails intermittently on Windows
  - S8012326: Deadlock occurs when Charset.availableCharsets() is called by several threads at the same time
  - S8012615: Realm.getRealmsList returns realms list in wrong
  - S8012925: [parfait] Missing return value in jdk/src/macosx/native/sun/awt/AWTEvent.m
  - S8013132: Add a flag to turn off the output of the verbose verification code
  - S8013895: G1: G1SummarizeRSetStats output on Linux needs improvement
  - S8013945: CMS fatal error: must own lock MemberNameTable_lock
  - S8014052: JSR292: assert(end_offset == next_offset) failed: matched ending
  - S8014078: G1: improve remembered set summary information by providing per region type information
  - S8014240: G1: Add remembered set size information to output of G1PrintRegionLivenessInfo
  - S8014288: perf regression in nashorn JDK-8008448.js test after 8008511 changes
  - S8014394: (fs) WatchService failing when watching \\server\$d
  - S8014460: Need to check for non-empty EXT_LIBS_PATH before using it
  - S8014555: G1: Memory ordering problem with Conc refinement and card marking
  - S8015092: SchemaFactory cannot parse schema if whitespace added within patterns in Selector XPath expression
  - S8015243: SchemaFactory does not catch enum. value that is not in the value space of the base type, anyURI
  - S8015244: G1: Verification after a full GC is incorrectly placed.
  - S8015599: [TEST_BUG] [macosx] Test closed/javax/swing/Popup/TaskbarPositionTest.java fails since JDK 8 b75 on MacOSX
  - S8015600: [TEST_BUG] [macosx] Test closed/javax/swing/plaf/basic/BasicMenuUI/4983388/bug4983388.java fails since JDK 8 b75 on MacOSX
  - S8016018: Typo in AbstractStringBuilder#indexOf and #lastIndexOf descriptions
  - S8016110: Japanese char (MS932) 0x5C cannot be used as an argument when quoted
  - S8016271: wsimport -clientjar does not create portable jars on Windows due to hardcoded backslash
  - S8016328: Regression : Javadoc i18n regression caused by fix for 8012375
  - S8016500: Unlocalized warnings.
  - S8017180: [macosx] [TEST_BUG] alt-key doesn't work on macos for menu
  - S8017195: Introduce option to setKeepAlive parameter on CORBA sockets
  - S8017456: [TEST_BUG] java/awt/DataFlavor/MissedHtmlAndRtfBug/MissedHtmlAndRtfBug.html: test frames remain after test execution
  - S8017498: JVM crashes when native code calls sigaction(sig) where sig>=0x20
  - S8017779: java/net/Authenticator/B4769350.java fails
  - S8019184: MethodHandles.catchException() fails when methods have 8 args + varargs
  - S8019389: SA-JDI JSR292: sun.jvm.hotspot.jdi.StackFrame.thisObject() throws sun.jvm.hotspot.utilities.AssertionFailure: sanity check
  - S8019396: SA-JDI: OSThread class initialization throws an exception
  - S8019853: Break logging and AWT circular dependency
  - S8020123: Test gc/g1/TestPrintRegionRememberedSetInfo.java fails with "test result: Error. No action after @build"
  - S8020191: System.getProperty("os.name") returns "Windows NT (unknown)" on Windows 8.1
  - S8020530: Non heap memory size calculated incorrectly
  - S8020791: [TESTBUG] runtime/jsig/Test8017498.sh failed to compile native code
  - S8021296: [TESTBUG] Test8017498.sh fails to find "gcc" and fails to compile on some Linux releases
  - S8021368: Launch of Java Web Start app fails with ClassCircularityError exception in 7u25
  - S8021898: Broken JIT compiler optimization for loop unswitching
  - S8021943: FileDialog getFile returns corrupted string after previous setFile
  - S8022213: Intermittent test failures in java/net/URLClassLoader
  - S8022452: Hotspot needs to know about Windows 8.1 and Windows Server 2012 R2
  - S8022507: SIGSEGV at ParMarkBitMap::verify_clear()
  - S8022584: Memory leak in some NetworkInterface methods
  - S8022585: VM crashes when ran with -XX:+PrintInlining
  - S8022993: Convert MAX_UNROLL constant to LoopMaxUnroll C2 flag
  - S8023004: JSR 292: java.lang.RuntimeException: Original target method was called.
  - S8023130: (process) ProcessBuilder#inheritIO does not work on Windows
  - S8023145: G1: G1CollectedHeap::mark_strong_code_roots() needs to handle ParallelGCThreads=0
  - S8023472: C2 optimization breaks with G1
  - S8023580: Add jtreg test for 8004051 and 8005722
  - S8023720: (hotspot) setjmp/longjmp changes the process signal mask on OS X
  - S8023786: (jdk) setjmp/longjmp changes the process signal mask on OS X
  - S8023881: IDN.USE_STD3_ASCII_RULES option is too strict to use Unicode in IDN.toASCII
  - S8023956: Provide a work-around to broken Linux 32 bit "Exec Shield" using CS for NX emulation (crashing with SI_KERNEL)
  - S8024027: Test sun/misc/IoTrace/IoTraceSocketReadWrite.java crashes VM
  - S8024163: [macosx] NullPointerException at javax.swing.TransferHandler$DropHandler.handleDrag since jdk8b93, 7u40b28
  - S8024521: (process) Async close issues with Process InputStream
  - S8024648: 7141246 & 8016131 break Zero port
  - S8024707: TransformerException : item() return null with node list of length != 1
  - S8024788: (fs) Files.readAllBytes uses FileChannel which may not be supported by all providers
  - S8024830: SEGV in org.apache.lucene.codecs.compressing.CompressingTermVectorsReader.get
  - S8024861: Incomplete token triggers GSS-API NullPointerException
  - S8024876: [TEST_BUG] javax/xml/jaxp/parsers/8022548/XOMParserTest.java failed when testbase dir has read only permissions
  - S8024952: ClassCastException in PlainSocketImpl.accept() when using custom socketImpl
  - S8025145: [macosx]: java 7 does not recognize tiff image on clipboard
  - S8025204: Intermittent test failure: javax/management/remote/mandatory/connection/IdleTimeoutTest.java
  - S8025205: Intermittent test failure: javax/management/remote/mandatory/connection/BrokenConnectionTest.java
  - S8025206: Intermittent test failure:     javax/management/monitor/NullAttributeValueTest.java
  - S8025207: Intermittent test failure: javax/management/monitor/CounterMonitorThresholdTest.java
  - S8025305: Cleanup CardTableModRefBS usage in G1
  - S8025512: NPE with logging while launching webstart on jre7u40 if logging is disabled
  - S8025541: G1: assert "assert(thread < _num_vtimes) failed: just checking" fails when G1ConcRefinementThreads > ParallelGCThreads
  - S8025588: [macosx] Frozen AppKit thread in 7u40
  - S8025713: Syncing indendation/comment/copyright year differences with upstream projects
  - S8025775: JNI warnings in TryXShmAttach
  - S8025860: new hotspot build - hs24.60-b02
  - S8025861: Set minor version for hotspot in 7u60 to 60 and build number to b01
  - S8025920: webrev.ksh does not provide any details about changes in zip files
  - S8026293: Schedule part of G1 pre-barrier late
  - S8026404: Logging in Applet can trigger ACE: access denied ("java.lang.RuntimePermission" "modifyThreadGroup")
  - S8026405: javax/xml/ws/clientjar/TestWsImport.java failing on JDK 8 nightly aurora test runs
  - S8026486: Significant slowdown due to transparent huge pages
  - S8026502: java/lang/invoke/MethodHandleConstants.java fails on all platforms
  - S8026705: [TEST_BUG] java/beans/Introspector/TestTypeResolver.java failed
  - S8026794: Test tools/pack200/TimeStamp.java fails while opening golden.jar.native.IST on linux-ppc(v2)
  - S8026848: -XX:+G1SummarizeRSetStats can result in wrong exit code and crash
  - S8027066: XMLDecoder in java 7 cannot properly deserialize object arrays
  - S8027172: new hotspot build - hs24.60-b03
  - S8027196: Increment minor version of HSx for 7u55 and initialize the build number
  - S8027351: (ref) Private finalize method invoked in preference to protected superclass method
  - S8027426: String.toLowerCase incorrectly increases length, if string contains \u0130 char
  - S8027454: Do not traverse string table during G1 remark when treating them as strong roots during initial mark
  - S8027476: Improve performance of Stringtable unlink
  - S8027579: new hotspot build - hs24.60-b04
  - S8027756: assert(!hr->isHumongous()) failed: code root in humongous region?
  - S8027839: C1 crashes in Weblogic with G1 enabled
  - S8027840: C2 allows safepoint checks to leak into G1 pre-barriers
  - S8027860: [TEST_BUG] File not closed in javax/xml/jaxp/parsers/8022548/XOMParserTest.java
  - S8027973: javax/xml/jaxp/transform/jdk8004476/XSLTExFuncTest.java hangs (win)
  - S8027997: G1: SPECjbb2013 crashes due to a broken object reference
  - S8028054: com.sun.beans.finder.MethodFinder has unsynchronized access to a static Map
  - S8028208: (aio) Assertion in clearPendingIoMap when closing at around time file lock is acquired immediately (win)
  - S8028351: JWS doesn't get authenticated when using kerberos auth proxy
  - S8028391: Make the Min/MaxHeapFreeRatio flags manageable
  - S8028412: AsyncGetCallTrace() is broken on x86 in JDK 7u40
  - S8028520: JVM should not throw VerifyError when a private method overrides a final method
  - S8028583: Add helper methods to test libraries
  - S8028814: new hotspot build - hs24.60-b06
  - S8029281: Synchronization issues in Logger and LogManager
  - S8029304: JFR broken in 7u train for JDK Linux for ARM or OpenJDK
  - S8029318: Native Windows ccache still reads DES tickets
  - S8029366: ShouldNotReachHere error when creating an array with component type of void
  - S8029599: JVM crashes on solaris-i586 with -Xverify:all if stack overflow happens during recursive reflective call
  - S8029903: Add a type safe alternative for working with counter based data
  - S8030061: new hotspot build - hs24.60-b05
  - S8030070: Test java/io/File/CheckPermission.java fails due to unfinished recursion (java.lang.StackOverflowError) when JIT'ed code (-client,-server) is running
  - S8030655: Regression: 14_01 Security fix 8024306 causes test failures
  - S8030698: Several GUI labels in jconsole need correction
  - S8030813: Signed applet fails to load when CRLs are stored in an LDAP directory
  - S8030822: (tz) Support tzdata2013i
  - S8031050: (thread) Change Thread initialization so that thread name is set before invoking SecurityManager
  - S8031394: (sl) Fix exception handling in ServiceLoader
  - S8031462: Fonts with morx tables are broken with latest ICU fixes
  - S8031787: Remove fix JDK-8026887 from 7u60
  - S8031980: Add new j.u.l deadlock test for JDK-8027670 and JDK-8029281
  - S8032013: new hotspot build - hs24.60-b08
  - S8032207: C2: assert(VerifyOops || MachNode::size(ra_) <= (3+1)*4) failed: bad fixed size
  - S8032740: Need to create SE Embedded Source Bundles in 7 Release
  - S8032771: The flag VerifySilently misses a test case
  - S8032960: Running forms URL throws NullPointerException in Javaconsole.
  - S8032986: new hotspot build - hs24.60-b09
  - S8033294: javac, spurious warning for instanceof operator
  - S8033443: Test8000311 fails after latest changes to parallelize string and symbol table unlink
  - S8033487: Improve GC option handling
  - S8034181: SIGBUS in SctpChannelImpl receive
  - S8034772: JDK-8028795 brought a specification change to 7u55 release and caused JCK7 signature test failure
  - S8035283: Second phase of branch shortening doesn't account for loop alignment
  - S8035618: Four api/org_omg/CORBA TCK tests fail under plugin only
  - S8035893: JVM_GetVersionInfo fails to zero structure
  - S8035897: Better memory allocation for file descriptors greater than 1024 on macosx
  - S8035963: The failed Kerberos tests due to timeouts
  - S8035988: 7u60 l10n resource file translation update 1
  - S8036027: Increment hsx 24.51 build to b04 for 7u51-b34
  - S8036147: Increment hsx 24.55 build to b02 for 7u55-b11
  - S8036584: Review comments from 8035897
  - S8036837: Increment hsx 24.55 build to b03 for 7u55-b12
  - S8036861: Application can't be loaded fine,the save dialog can't show up.
  - S8037012: (tz) Support tzdata2014a
  - S8037340: Linux semaphores to use CLOCK_REALTIME
  - S8037510: CMM Testing: Min/MaxHeapFreeRatio flags should be manageable through the API
  - S8038306: (tz) Support tzdata2014b
  - S8039097: Some tests fail with NPE since 7u60 b12
* Backports
  - S7103549: Remove dependencies on libjava and libjvm from security libraries
  - S8000204: Memory leak in com/sun/security/auth/module/Unix.c
  - S8000476: Memory Leaks and uninitialized memory access in PKCS11 and other native code
  - S8001579: Cleanup warnings in security native code
  - S8007607: security native code doesn't always use malloc, realloc, and calloc correctly
  - S8008509: 6588413 changed JNIEXPORT visibility for GCC on HSX, jdk's jni_md.h needs similar change
  - S8012224: AWT_TopLevels/TopLevelEvents/Automated/WindowIconifyDeiconifyEventsTest02 fails on Ubuntu 12.04 Unity shell
  - S8014307: Memory leak ... security/jgss/wrapper/GSSLibStub.c
  - S8038392, RH1064383: Generating prelink cache breaks JAVA 'jinfo' utility normal behavior
* Bug fixes
  - Fix implicit function declarations in j2secmod_md.c introduced by 7103549.
  - PR1617: Include defs.make in vm.make so zeroshark.make is included
  - Remove binary files and unlicensed generated files
  - PR1655: Don't add IcedTea-Web jars to bootclasspath
  - Enable CC_INTERP on ppc64
  - Fix Zero following integration of PPC port
  - PR1660: Allow use of system PCSC
  - PR1661: Cleanup COMPILE_AGAINST_SYSCALLS option and allow it to be set false
  - PR1661: Cleanup COMPRESS_JARS option and allow it to be set false
  - PR1661: Cleanup SYSTEM_CUPS option and allow it to be set false
  - PR1661: Cleanup SYSTEM_FONTCONFIG option and allow it to be set false
  - PR1661: Cleanup SYSTEM_GIF option and allow it to be set false
  - PR1661: Cleanup SYSTEM_GIO option and allow it to be set false
  - PR1661: Cleanup SYSTEM_GTK option and allow it to be set false
  - PR1661: Cleanup SYSTEM_JPEG option and allow it to be set false
  - PR1661: Cleanup SYSTEM_LCMS option and allow it to be set false
  - PR1661: Cleanup SYSTEM_PCSC option and allow it to be set false
  - PR1661: Cleanup SYSTEM_PNG option and allow it to be set false
  - PR1664: Ensure all SYSTEM_* options are in jdk_generic_profile.sh
  - Only get CFLAGS/LIBS for libpcsclite if installed
  - Add lost #endif
  - Add new files from 8019229
  - Remove duplicate ElfFuncDescTable code in elfSymbolTable.cpp
  - Remove duplicate ElfFuncDescTable code in elfSymbolTable.hpp
  - PR1699: Support building the SunEC provider with system NSS
  - PR1393: JPEG support in build is broken on non-system-libjpeg builds
  - Fix merge duplication in com.sun.script.javascript.RhinoTopLevel
  - S8041658: Use of -fdevirtualize on macroAssembler_x86.o (via -O2) with gcc 4.9.0 creates broken VM
  - Extend 8041658 to all files in the HotSpot build.
  - Correct placement of S8041658 fix
  - PR1753: Ant does not respect JAVA_HOME/jdk.home setting
  - PR1757: register_method usage in sharkCompiler.cpp needs to be adjusted following S7196199
  - PR1781: NSS PKCS11 provider fails to handle multipart AES encryption
  - RH1059925: RFE: Version Java libraries to allow using multiple Java versions with Linux capabilities enabled
  - RH905128: [CRASH] OpenJDK-1.7.0 while using NSS security provider and kerberos
  - PR1742: Allow SunEC provider to be built with changes in NSS >= 3.16.1
  - PR1762: Undefined references when building with NSS 3.16.1
  - PR1737: Support prefixed variants of GNU tools used on *BSD systems
  - PR1756: Bootstrap with IcedTea broken
  - PR1758: Support PPC64 JIT on ppc64le
  - PR1763: ppc64 JIT doesn't support class data sharing
  - PR1765: Boot JDK on ppc64le uses differently named arch directory to final build
  - PR1807: Support Debian/Ubuntu 7 OpenJDK Install as Boot JDK
  - PR1365: Replace hgforest support
  - PR1814: HotSpot URL should be used with --enable-hg
  - PR1371: Provide option to build without debugging
  - PR1827: Support AM_MAINTAINER_MODE
  - PR1830: Drop version requirement for LCMS 2
  - PR1833, RH1022017: Report elliptic curves supported by NSS, not the SunEC library
  - PR1741: Break PulseAudio provider out into IcedTea-Sound
  - PR1736: AWT loads gtk3 in all the look and feel configurations
  - PR1808: Type-punning Warnings in Demos on PPC
  - PR1835: Missing file in backport of ppc64le JIT support
  - PR1839, G478960: Provide Infinality Support via fontconfig
  - PR729: GTKLookAndFeel should be the system look&feel on all GNU/Linux desktops
  - PR1843: Fail early if there is no native HotSpot JIT & all other options are disabled
  - PR1848: Removal of project support leaves trailing '-' in version
* PPC & AIX port
  - Add AIX-specific build instructions to README-ppc.html
  - Added AIX as testing platform for more jtreg tests written in shell-script
  - Added AIX specific build defs file
  - Added AIX to list of operating systems to include in static jli build
  - Added AIX version of classlist
  - Added enumIPv4Interfaces, enumIPv6Interfaces and getMacAddress implementation for AIX.
  - Added initial AIX version of UNIXProcess.java  copied from existing Solaris one
  - Added missing B_FALSE and B_TRUE definitions for AIX when building ec component.
  - Added missing Dlinfo structure for SAP version of hprof_md.c
  - Added section about problems with pre-installed ANT and our bootstrap JDK on Linux and how to solve them
  - Added UnixOperatingSystem.getTotalPhysicalMemorySize and getFreePhysicalMemorySize implementation for AIX by facilitating perfstat APIs.
  - add "<jrepath>/lib/<arch>/jli/" to the runtime library path in the java launcher for AIX because AIX ld doesn't support $ORIGIN and libjli.so isn't found otherwise
  - Add libmawt linking for libfontmanager on AIX platform
  - Add memory limit requirements (ulimit) for AIX to README-ppc.html
  - Addon for merge 5851:b717d0d99407 - add missing file AixNativeDispatcher.c
  - Add OS and Compiler information to the VM version string on AIX
  - Add section about the necessity of 'GNU tar' during the build process
  - Add some AIX-specific files which were missing from changeset 5101:a06818b39f7c
  - adlc: do safe call to constant_offset() in debug coding
  - aix: add macros AIX_ONLY and NOT_AIX
  - aix: AIX platform files as required to start up the interpreter.
  - AIX changes to build the complete OpenJDK on a vanilla AIX system
  - aix: fix disclaiming memory.
  - Aix port: add file globalDefinitions_xlc.hpp.
  - aix: remove warnings about memory allocation
  - asm: fix DelayedConstant
  - Basic AIX adaption. With this change the VM can successfully run 'HelloWorld' on AIX
  - Build "fdlibm" without optimizations and with -qfloat=nomaf on AIX
  - C argument in register AND stack slot.
  - Check consistency of the PPC-specific flag 'UseSIGTRAP' with 'ImplicitRangeChecks' and 'ImplicitNullChecks'
  - C-interpreter: add biased locking support
  - C-interpreter: basic fixes
  - C-interpreter: Fix for OSR.
  - C-interpreter: implement bytecode profiling.
  - C-interpreter: implement G1 support
  - C-interpreter: implement support for compressed Oops.
  - C++ interpreter: implement support for early return
  - C-interpreter: improve memory ordering implementation.
  - C-interpreter: memory ordering as required for platforms with weak memory ordering (PPC)
  - C-interpreter: some diffs I missed before
  - C-interpreter: support for method handles.
  - Corrected incorrect use of ps -e on AIX
  - Disable sctp support for now on AIX platform
  - Disable use of sys/swap.h when building UnixOperatingSystem_md.c on AIX
  - dlopen() on AIX does not support RTLD_NOLOAD, so use RTLD_LZAY to workaround.
  - Enable AWT/Swing on AIX
  - Enable awt to build on AIX
  - Enable building jaas library on AIX platform
  - Enabled SoundDefs to build on AIX
  - Enable jdi script based tests to run on AIX.  (fixed issue with uname -s result not being understood by tests)
  - Enable mannual and Javadoc on AIX platform
  - Enable medialib to build on AIX
  - Enable the build of HotSpot 'CORE' targets from the top-level makefile by setting CORE_BUILD=true.
  - Enable Tls operations in jdwp socket transport module for AIX platform
  - Expand conditional include in several more source files to not include
  - Expanded check for which wait.h to use. Changed so on AIX sys/wait.h is used.
  - Expanded platform choice logic to include AIX when deciding to create the MB macro.
  - Explicitly defined ARCH_DATA_MODEL for AIX to be 64
  - Export 'USE_PTHREADS' on Linux trough CPPFLAGS to fix the build because java_md_solinux.c now only relies on 'USE_PTHREADS' beeing defined.
  - Extended BSD remapping of special 64 bit directory function names to generic versions to now apply to AIX.
  - Extended decision to use pthreads in java_md_solinux to include specific use of USE_PTHREADS define
  - Extended existing ifdef to cover AIX so that npt does not include link.h
  - Extended find zone info functionaility to compile on AIX
  - Extend existing Solaris behaviour to cover AIX and treat empty TZ envvar same as no TZ envvar
  - Extend Load and Store nodes to know about memory ordering.
  - fastdebug build: images step fails building installer binaries
  - Fix aix build error.
  - Fix broken AIX build
  - Fix build on Linux with 64kb default page size
  - Fix build with gcc 4.7
  - Fix calls to the LoadLNode constructor with the Load semantics argument in the wrong position.
  - Fixed from 8 port moved to 7.
  - Fixed JTreg failure from java/util/ResourceBundle/Control/ExpirationTest.sh
  - Fixed memory handling/bookkeeping of mmaped memory on AIX
  - Fixed sun/nio/ch implementation on AIX
  - Fix handling of scalar replaced objects.
  - Fix IA64 preprocessor conditionals on AIX!!!
  - Fix iconv encoding problem on AIX < 7.1 in SplashConvertStringAlloc
  - Fix JTreg failure from java/nio/charset/Charset/NIOCharsetAvailabilityTest.java
  - Fix JTreg failure from java/nio/charset/spi/basic.sh
  - Fix native multicast sockets implementation on AIX
  - Fix native stack traces in hs_err files on Linux/PPC64
  - Fix setting of SO_REUSEADDR socket option on AIX (where the socket option is called SO_REUSEPORT)
  - Fix small mistake introduced by the port which breaks the Windows build
  - Fix typo in change 'Fix native stack traces in hs_err files..'
  - Fix usage of feature detection on ppc for fsqrt instruction. Also guarantee no wrong instructions are used.
  - Fix -Xcheck:jni on AIX
  - Fix Xrender backend on  64-bit Big-endian architectures
  - Further format fixes after removing ppc_ prefixes.
  - G1: Fix problem with nonvolatile field
  - G1: Port C-interpreter to support G1.
  - gethostbyname_r and gethostbyaddr_r have got different syntax on AIX, this patch added the support of host entry getting.
  - Implement AttachListener for AIX
  - Implemented a no-op version of getPlatformTimeZoneID() for AIX
  - Implemented os::thread_cpu_time for AIX
  - Implement printing CodeComments in stubs.
  - Implement printing CodeComments in stubs: fix product build.
  - Implement support for the "System V Print Subsystem" on AIX
  - Implement workaround for I/O cancellation on AIX (by using the Linux wrappers from "linux_close.c")
  - Improve adlc usability.
  - Improve handling of memory ordering in taskqueue.hpp.
  - Include dlfcn.h since link.h is not available on AIX
  - Include files needed for PPC C2 build.
  - Initial AIX build config files primarily based on changes from SAP.  This is to preserve any Hotspot speciific settings
  - Initial Aix-Port checkin.
  - Initial PPC-Port checkin
  - link.h not required (and does not exist) on AIX.  Expanded conditional include to cover AIX
  - linux: extend signal handler to catch SIGTRAP on ppc.
  - Make hsdis build and work on Linux/PPC64
  - make: Implement aix ppc64 build.
  - make: Implement linux ppc64 support in makefiles.
  - Make nio module to build on AIX
  - make: Reenable CORE build
  - Memory ordering as required for platforms with weak memory ordering (PPC)
  - Memory ordering: introduce functions to specify platform properties.
  - method handles: some smaller fixes and extensions for ppc
  - New files for template interpreter
  - New HS24 JSR292 implementation for PPC64
  - opto: adapt assertion in postaloc.cpp for ppc.
  - opto: Basic fixes for the ppc C2 port
  - opto: Do not relocate in scratch emit.
  - opto: explicit specification of rematerialization in ad file.
  - opto: Extend adlc to generate fields into nodes.
  - opto: Extend ImplicitNullCheck optimizations.
  - opto: Extend Load and Store nodes to know about memory ordering.
  - Opto: extend MachConstantNode functionality to ins_encode statements.
  - opto: hook to postprocess matcher output platform dependent.
  - opto: initialize _node_regs_max_index
  - Opto: introduce phase lateExpand to expand nodes after register allocation.
  - opto: issue more memory barriers as neede on PPC.
  - opto: Move static _in_dump_cnt to Compile object.
  - opto: Pass output stream to more debug routines.
  - opto/ppc: trap based null and range checks
  - opto / regalloc: Fix problem with rematerialization
  - opto,rt: Support for C calling conventions that require 64-bit ints.
  - opto: specify offset of IC load in java_to_interp stub.
  - Opto: Support for constants in stub code.
  - opto: support for constants on ppc
  - opto: switch off OptimizeFill on PPC as it causes errors.
  - opto: Trampoline relocations
  - opto: trap based null and range checks
  - Part assembler and macroassembler into two files.
  - posix: fix build errors on aix 7.1 and sparc
  - posix: Implement methods giving infos about signals.
  - ppc/aix: Adaptions needed for recent update.
  - ppc/aix: Fixes for recent update
  - PPC assembler and register definitions.
  - PPC assembly needed to start up the interpreter.
  - ppc: compiler fixes & enable OSR
  - PPC: Continue C2 port: now jvm98 runs with compiler
  - ppc: enable better implicit null check recognition with cOops
  - ppc: fix cOops problem on aix
  - ppc: fix gcc 4.3.4 build
  - ppc: Fix issue in trap based null check optimization
  - ppc: Fix register usage in GetAndAdd & friends.
  - ppc: fix safepoint node.
  - ppc: fix trap based range checks.
  - ppc: Implement card mark emitter for concurrentMarkSweep.
  - PPC: Initial C2 compiler port.
  - ppc: Initial C2 compiler port, ppc files
  - ppc: port method handles support (hs21-hs23 version)
  - ppc: PPC platform files as required to start up the interpreter.
  - ppc: Relax load aquire and various minor changes
  - ppc: SIGTRAP based checks
  - PPC specific C2 flags: add macro PD_C2_FLAGS to global flag definitions.
  - PPC specific flags: add macro PD_FLAGS to global flag definitions.
  - ppc: support for g1, cOops
  - PPC64: Support for ABI_ELFv2.
  - Propagate HOTSPOT_BUILD_JOBS and PARALLEL_COMPILE_JOBS from the top-level make to the corresponding sub-makes.
  - Recent changes to ppc files, especially to ppc.ad file.
  - Recent improvements by SAP.
  - Removed unused DL_info declaration in java_md_solinux.c that caused AIX compiler failure
  - Remove ppc_ prefixes in ppc files.
  - Remove some unnecessary diffs to Oracle coding.
  - rt: add fence to taskqueue to fix probelms showing in torture tests
  - rt: C argument in register AND stack slot.
  - rt: extend ELF-decoder to ppc function descriptor tables
  - rt: Use stubs to implement safefetch.
  - S7177701: error: Filling jar message during javax/imageio/metadata/IIOMetadataFormatImpl compilation
  - S8003850 opto: introduce phase lateExpand to expand nodes after register allocation.
  - S8003850: add support for constants in stub code
  - S8003853 opto: specify offset of IC load in java_to_interp stub.
  - S8005055: pass outputStream to more opto debug routines
  - S8006971 rt: Improve handling of memory ordering in taskqueue.hpp.
  - S8016491: PPC64 (part 2): Clean up PPC defines.
  - S8016586: PPC64 (part 3): basic changes for PPC64
  - S8016696: PPC64 (part 4): add relocation for trampoline stubs
  - S8017313: PPC64 (part 6): stack handling improvements
  - S8017317: PPC64 (part 7): cppInterpreter: implement support for biased locking
  - S8019517: PPC64 (part 102): cppInterpreter: implement G1 support
  - S8019929: PPC64 (part 107): Extend ELF-decoder to support PPC64 function descriptor tables
  - S8019973: PPC64 (part 11): Fix IA64 preprocessor conditionals on AIX.
  - S8024344: PPC64 (part 112): C argument in register AND stack slot.
  - S8024468: PPC64 (part 201): cppInterpreter: implement bytecode profiling
  - S8033168: PPC64: gcc 4.8 warning in output_c.cpp
  - S8035396: Introduce accessor for tmp_oop in frame.
  - S8036767: PPC64: Support for little endian execution model
  - S8036976: PPC64: implement the template interpreter
  - S8037915: PPC64/AIX: Several smaller fixes
  - S8042309: Some bugfixes for the ppc64 port
  - Several NIO fixes for AIX to pass JCK tests
  - shared assembler: fix DelayedConstant.
  - shared: Basic non-functional fixes needed for the ppc port.
  - shared: Fix IA64 preprocessor conditionals on AIX.
  - shared: introduce functions to specify memory ordering properties of platforms.
  - shared: Make adapter_code_size a function.
  - shared: Make hotspot build with gcc 4.7.2 and newer
  - shared: Make hsdis build and work on Linux/PPC64
  - shared: Memory ordering as required for platforms with weak memory ordering (PPC)
  - shared: ordering of Independent Reads of Independent Writes
  - Some basic AIX changes to let the VM bootstrap itself and run JVM98.
  - Support for C calling conventions that require 64-bit ints.
  - Switched LD path setup for freetype version check so AIX can be covered by the 'everything else' part
  - Switch off Compressed Oops on AIX until we fix them
  - Temporarily disable 'EnableInvokeDynamic' while working on the new HS24 indy implementation
  - Temporarily switch off 'TrapBasedRangeChecks'
  - Trampoline relocations.
  - Trampoline relocations.  Add some more functionality.
  - Turned off ImplicitNullChecks on AIX by default because it requires UseSIGTRAP which isn't currently implemented on AIX
  - Updated conditional handling for AIX when BLOCK_SOURCE enabled. Resolved Undefined symbol: .isSourceFilterSupported
  - Updated Defs-versions to understand about using xlc compiler on AIX
  - Updated genUnixConstants.c to compile on AIX.  Made location of fcntl.h file platform specific and added a default value for O_NOFOLLOW as not supported on AIX
  - Updated hprof demo to build on AIX.  Added SAP changes to fake out DLinfo etc
  - Updated hprof_md.c to include AIX as platform without hires timer
  - Updated location of bootstrap JDKs
  - Updated Platform.gmk to set PLATFORM=aix when uname is AIX
  - Updated README-ppc.html to reflect the current project status
  - Updated README to reflect the current status of the project (mainly the availability of a mixed-mode VM on Linux and AIX)
  - Updated test scripts to understand AIX os environment
  - Updated using pthreads in java_md_solinux.c to just rely on USE_PTHREADS. Removed the superflous __linux__ as  USE_PTHREADS is already explictly turned on for linux builds
  - Use fork() to provide FORK() as Linux
  - Use LIBPATH in the launcher on AIX insted of LD_LIBRARY_PATH
  - Use macosx's BsdVirtualMachine implementation to provide tools/attach on AIX platform.
  - Use stubs to implement safefetch.
  - Use the solaris' approach of doing IsXRenderAvailable check for AIX
* ARM port
  - Fix accidental reversion of PR1188 for armel
* JamVM
  - JVM_NewMultiArray: element class may be an array
  - jtreg test java/lang/reflect/Array/ExceedMaxDim
  - OpenJDK: Fix Local/Anonymous class checks
  - classlibMarkThreadTerminated should return Object*
  - Fix race-condition in constant-pool resolution code
  - JSR292: MethodHandle constant-pool refs may be resolved
  - JSR292: bootstrap method args error handling
  - JSR292: correct intrinsic cache COMPARE function
  - Race condition in setting up imethod table
  - GC: Minor performance improvement

New in release 2.4.7 (2014-04-15):

* Security fixes
  - S8023046: Enhance splashscreen support
  - S8025005: Enhance CORBA initializations
  - S8025010, CVE-2014-2412: Enhance AWT contexts
  - S8025030, CVE-2014-2414: Enhance stream handling
  - S8025152, CVE-2014-0458: Enhance activation set up
  - S8026067: Enhance signed jar verification
  - S8026163, CVE-2014-2427: Enhance media provisioning
  - S8026188, CVE-2014-2423: Enhance envelope factory
  - S8026200: Enhance RowSet Factory
  - S8026716, CVE-2014-2402: (aio) Enhance asynchronous channel handling
  - S8026736, CVE-2014-2398: Enhance Javadoc pages
  - S8026797, CVE-2014-0451: Enhance data transfers
  - S8026801, CVE-2014-0452: Enhance endpoint addressing
  - S8027766, CVE-2014-0453: Enhance RSA processing
  - S8027775: Enhance ICU code.
  - S8027841, CVE-2014-0429: Enhance pixel manipulations
  - S8028385: Enhance RowSet Factory
  - S8029282, CVE-2014-2403: Enhance CharInfo set up
  - S8029286: Enhance subject delegation
  - S8029699: Update Poller demo
  - S8029730: Improve audio device additions
  - S8029735: Enhance service mgmt natives
  - S8029740, CVE-2014-0446: Enhance handling of loggers
  - S8029745, CVE-2014-0454: Enhance algorithm checking
  - S8029750: Enhance LCMS color processing (in-tree LCMS)
  - S8029760, CVE-2013-6629: Enhance AWT image libraries (in-tree libjpeg)
  - S8029844, CVE-2014-0455: Enhance argument validation
  - S8029854, CVE-2014-2421: Enhance JPEG decodings
  - S8029858, CVE-2014-0456: Enhance array copies
  - S8030731, CVE-2014-0460: Improve name service robustness
  - S8031330: Refactor ObjectFactory
  - S8031335, CVE-2014-0459: Better color profiling (in-tree LCMS)
  - S8031352, CVE-2013-6954: Enhance PNG handling (in-tree libpng)
  - S8031394, CVE-2014-0457: (sl) Fix exception handling in ServiceLoader
  - S8031395: Enhance LDAP processing
  - S8032686, CVE-2014-2413: Issues with method invoke
  - S8033618, CVE-2014-1876: Correct logging output
  - S8034926, CVE-2014-2397: Attribute classes properly
  - S8036794, CVE-2014-0461: Manage JavaScript instances
* Backports
  - S8004145: New improved hgforest.sh, ctrl-c now properly terminates mercurial processes.
  - S8007625: race with nested repos in /common/bin/hgforest.sh
  - S8011178: improve common/bin/hgforest.sh python detection (MacOS)
  - S8011342: hgforest.sh : 'python --version' not supported on older python
  - S8011350: hgforest.sh uses non-POSIX sh features that may fail with some shells
  - S8024200: handle hg wrapper with space after #!
  - S8025796: hgforest.sh could trigger unbuffered output from hg without complicated machinations
  - S8028388: 9 jaxws tests failed in nightly build with java.lang.ClassCastException
  - S8031477: [macosx] Loading AWT native library fails
  - S8032370: No "Truncated file" warning from IIOReadWarningListener on JPEGImageReader
  - S8035834: InetAddress.getLocalHost() can hang after JDK-8030731 was fixed
* Bug fixes
  - PR1393: JPEG support in build is broken on non-system-libjpeg builds
  - PR1726: configure fails looking for ecj.jar before even trying to find javac
  - Red Hat local: Fix for repo with path statting with / .
  - Remove unused hgforest script

New in release 2.4.6 (2014-03-28):

* Backports
  - S8009062: poor performance of JNI AttachCurrentThread after fix for 7017193
  - S8035893: JVM_GetVersionInfo fails to zero structure
  - Re-enable the 'gamma' test at the end of the HotSpot build, but only for HotSpot based bootstrap JDKs.
* Bug fixes
  - PR1101: Undefined symbols on GNU/Linux SPARC
  - PR1659: OpenJDK 7 returns incorrect TrueType font metrics when bold style is set
  - PR1677, G498288: Update PaX support to detect running PaX kernel and use newer tools
  - PR1679: Allow OpenJDK to build on PaX-enabled kernels
  - PR1684: Build fails with empty PAX_COMMAND
  - RH1015432: java-1.7.0-openjdk: Fails on PPC with StackOverflowError (revised fix)
  - Link against $(LIBDL) if SYSTEM_CUPS is not true
  - Perform configure checks using ecj.jar when --with-gcj (native ecj build) is enabled.
* ARM32 port
  - Add arm_port from IcedTea 6
  - Add patches/arm.patch from IcedTea 6
  - Add patches/arm-debug.patch from IcedTea 6
  - Add patches/arm-hsdis.patch from IcedTea 6
  - added jvmti event generation for dynamic_generate and compiled_method_load events to ARM JIT compiler
  - Adjust saved SP when safepointing.
  - First cut of invokedynamic
  - Fix trashed thread ptr after recursive re-entry from asm JIT.
  - JIT-compilation of ldc methodHandle
  - Rename a bunch of misleadingly-named functions
  - Changes for HSX22
  - Rename a bunch of misleadingly-named functions
  - Patched method handle adapter code to deal with failures in TCK
  - Phase 1
  - Phase 2
  - RTC Thumb2 JIT enhancements.
  - Zero fails to build in hsx22+, fix for hsx22 after runs gamma OK, hsx23 still nogo.
  - Use ldrexd for atomic reads on ARMv7.
  - Use unified syntax for thumb code.
  - Corrected call from fast_method_handle_entry to CppInterpreter::method_handle_entry so that thread is loaded into r2
  - Don't save locals at a return.
  - Fix call to handle_special_method().  Fix compareAndSwapLong.
  - Fix JIT bug that miscompiles org.eclipse.ui.internal.contexts.ContextAuthority.sourceChanged
  - invokedynamic and aldc for JIT
  - Modified safepoint check to rely on memory protect signal instead of polling
  - Minor review cleanups.
  - PR1188: ASM Interpreter and Thumb2 JIT javac miscompile modulo reminder on armel
  - PR1363: Fedora 19 / rawhide FTBFS SIGILL
  - Changes for HSX23
  - Remove fragment from method that has been removed
  - Remove C++ flags from CC_COMPILE and fix usage in zeroshark.make.
  - Use $(CC) to compile mkbc instead of $(CC_COMPILE) to avoid C++-only flags
  - Add note about use of $(CFLAGS)/$(CXXFLAGS)/$(CPPFLAGS) at present.
  - Override automatic detection of source language for bytecodes_arm.def
  - Include $(CFLAGS) in assembler stage
  - PR1626: ARM32 assembler update for hsx24. Use ARM32JIT to turn it on/off.
  - Replace literal offsets for METHOD_SIZEOFPARAMETERS and ISTATE_NEXT_FRAME with correct symbolic names.
  - Turn ARM32 JIT on by default
* AArch64 port
  - PR1713: Support AArch64 Port
* Shark
  - Add Shark definitions from 8003868
  - Drop compile_method argument removed in 7083786 from sharkCompiler.cpp

New in release 2.3.14 (2014-03-28):

* Security fixes
  - S7023639, CVE-2013-5838: JSR 292 method handle invocation needs a fast path for compiled code (JSR292 update only)
  - S8029507, CVE-2013-5893: Enhance JVM method processing (JSR292 update only)
* Backports
  - S7024118: possible hardcoded mnemonic for JFileChooser metal and motif l&f
  - S7032018: The file list in JFileChooser does not have an accessible name
  - S7032436: When running with the Nimbus look and feel, the JFileChooser does not display mnemonics
  - S7151089: PS NUMA: NUMA allocator should not attempt to free pages when using SHM large pages
  - S7192406: JSR 292: C2 needs exact return type information for invokedynamic and invokehandle call sites (JSR292 update only)
  - S7196242: vm/mlvm/indy/stress/java/loopsAndThreads crashed (JSR292 update only)
  - S7200949: JSR 292: rubybench/bench/time/bench_base64.rb fails with jruby.jar not on boot class path (JSR292 update only)
  - S8000780: make Zero build and run with JDK8 (JSR292 update only)
  - S8008764: 7uX l10n resource file translation update
  - S8009062: poor performance of JNI AttachCurrentThread after fix for 7017193
  - S8013057: assert(_needs_gc || SafepointSynchronize::is_at_safepoint()) failed: only read at safepoint
  - S8015976: OpenJDK part of bug JDK-8015812 [TEST_BUG] Tests have conflicting test descriptions
  - S8022698: javax/script/GetInterfaceTest.java fails since 7u45 b04 with -agentvm option
  - S8023310: Thread contention in the method Beans.IsDesignTime()
  - S8024302: Clarify jar verifications
  - S8024461: [macosx] Java crashed on mac10.9 for swing and 2d function manual test
  - S8025255: (tz) Support tzdata2013g
  - S8026037: [TESTBUG] sun/security/tools/jarsigner/warnings.sh test fails on Solaris
  - S8026304: jarsigner output bad grammar
  - S8026887: Make issues due to failed large pages allocations easier to debug
  - S8027204: Revise the update of 8026204 and 8025758
  - S8027224: test regression - ClassNotFoundException
  - S8027370: Support tzdata2013h
  - S8027378: Two closed/javax/xml/8005432 fails with jdk7u51b04
  - S8027837: JDK-8021257 causes CORBA build failure on emdedded platforms
  - S8027943: serial version of com.sun.corba.se.spi.orbutil.proxy.CompositeInvocationHandlerImpl changed in 7u45
  - S8028057: Modify jarsigner man page documentation to document CCC 8024302: Clarify jar verifications
  - S8028111: XML readers share the same entity expansion counter
  - S8028215: ORB.init fails with SecurityException if properties select the JDK default ORB
  - S8028293: Check local configuration for actual ephemeral port range
  - S8028382: Two javax/xml/8005433 tests still fail after the fix JDK-8028147
  - S8028453: AsynchronousSocketChannel.connect() requires SocketPermission due to bind to local address (win)
  - S8028823: java/net/Makefile tabs converted to spaces
  - S8029038: Revise fix for XML readers share the same entity expansion counter
  - S8035893: JVM_GetVersionInfo fails to zero structure
* Bug fixes
  - Fix broken bootstrap build by updating ecj-multicatch.patch
  - PR1626: ARM32 assembler update for hsx24 (JSR292 update only)
  - PR1654: ppc32 needs a larger ThreadStackSize to build
  - PR1677, G498288: Update PaX support to detect running PaX kernel and use newer tools
  - PR1679: Allow OpenJDK to build on PaX-enabled kernels
  - PR1684: Build fails with empty PAX_COMMAND
  - Re-enable the 'gamma' test at the end of the HotSpot build, but only for HotSpot based bootstrap JDKs.
  - RH1015432: java-1.7.0-openjdk: Fails on PPC with StackOverflowError (revised fix)
  - RH910107: fail to load PC/SC library
  - Perform configure checks using ecj.jar when --with-gcj (native ecj build) is enabled.
* New features
  - PR1653: Support ppc64le via Zero
* ARM port
  - Allow ARM32 JIT to be disabled
  - Replace literal offsets for METHOD_SIZEOFPARAMETERS and ISTATE_NEXT_FRAME with correct symbolic names.
  - Turn ARM32 JIT on by default
* Shark
  - Add Shark definitions from 8003868
  - Drop compile_method argument removed in 7083786 from sharkCompiler.cpp

New in release 2.4.5 (2014-01-29):

* Backports
  - S8015976: OpenJDK part of bug JDK-8015812 [TEST_BUG] Tests have conflicting test descriptions
  - S8022698: javax/script/GetInterfaceTest.java fails since 7u45 b04 with -agentvm option
  - S8022868: missing codepage Cp290 at java runtime
  - S8023310: Thread contention in the method Beans.IsDesignTime()
  - S8024461: [macosx] Java crashed on mac10.9 for swing and 2d function manual test
  - S8025679: Increment minor version of HSx for 7u51 and initialize the build number
  - S8026037: [TESTBUG] sun/security/tools/jarsigner/warnings.sh test fails on Solaris
  - S8026304: jarsigner output bad grammar
  - S8026772: test/sun/util/resources/TimeZone/Bug6317929.java failing
  - S8026887: Make issues due to failed large pages allocations easier to debug
  - S8027204: Revise the update of 8026204 and 8025758
  - S8027224: test regression - ClassNotFoundException
  - S8027370: Support tzdata2013h
  - S8027378: Two closed/javax/xml/8005432 fails with jdk7u51b04
  - S8027787: 7u51 l10n resource file translation update 1
  - S8027837: JDK-8021257 causes CORBA build failure on emdedded platforms
  - S8027943: serial version of com.sun.corba.se.spi.orbutil.proxy.CompositeInvocationHandlerImpl changed in 7u45
  - S8027944: Increment hsx 24.51 build to b02 for 7u51-b07
  - S8028057: Modify jarsigner man page documentation to document CCC 8024302: Clarify jar verifications
  - S8028090: reverting change - changeset pushed with incorrect commit message, linked to wrong issue
  - S8028111: XML readers share the same entity expansion counter
  - S8028215: ORB.init fails with SecurityException if properties select the JDK default ORB
  - S8028293: Check local configuration for actual ephemeral port range
  - S8028382: Two javax/xml/8005433 tests still fail after the fix JDK-8028147
  - S8028453: AsynchronousSocketChannel.connect() requires SocketPermission due to bind to local address (win)
  - S8028823: java/net/Makefile tabs converted to spaces
  - S8029038: Revise fix for XML readers share the same entity expansion counter
  - S8029842: Increment hsx 24.51 build to b03 for 7u51-b11
* Bug fixes
  - Fix broken bootstrap build by updating ecj-multicatch.patch
  - PR1653: Support ppc64le via Zero
  - PR1654: ppc32 needs a larger ThreadStackSize to build
  - RH1015432: java-1.7.0-openjdk: Fails on PPC with StackOverflowError
  - RH910107: fail to load PC/SC library

New in release 2.4.4 (2014-01-14):

* Security fixes
  - S6727821: Enhance JAAS Configuration
  - S7068126, CVE-2014-0373: Enhance SNMP statuses
  - S8010935: Better XML handling
  - S8011786, CVE-2014-0368: Better applet networking
  - S8021257, CVE-2013-5896: com.sun.corba.se.** should be on restricted package list
  - S8021271, CVE-2014-0408: Better buffering in ObjC code
  - S8022904: Enhance JDBC Parsers
  - S8022927: Input validation for byte/endian conversions
  - S8022935: Enhance Apache resolver classes
  - S8022945: Enhance JNDI implementation classes
  - S8023057: Enhance start up image display
  - S8023069, CVE-2014-0411: Enhance TLS connections
  - S8023245, CVE-2014-0423: Enhance Beans decoding
  - S8023301: Enhance generic classes
  - S8023338: Update jarsigner to encourage timestamping
  - S8023672: Enhance jar file validation
  - S8024302: Clarify jar verifications
  - S8024306, CVE-2014-0416: Enhance Subject consistency
  - S8024530: Enhance font process resilience
  - S8024867: Enhance logging start up
  - S8025014: Enhance Security Policy
  - S8025018, CVE-2014-0376: Enhance JAX-P set up
  - S8025026, CVE-2013-5878: Enhance canonicalization
  - S8025034, CVE-2013-5907: Improve layout lookups
  - S8025448: Enhance listening events
  - S8025758, CVE-2014-0422: Enhance Naming management
  - S8025767, CVE-2014-0428: Enhance IIOP Streams
  - S8026172: Enhance UI Management
  - S8026176: Enhance document printing
  - S8026193, CVE-2013-5884: Enhance CORBA stub factories
  - S8026204: Enhance auth login contexts
  - S8026417, CVE-2013-5910: Enhance XML canonicalization
  - S8026502: java/lang/invoke/MethodHandleConstants.java fails on all platforms
  - S8027201, CVE-2014-0376: Enhance JAX-P set up
  - S8029507, CVE-2013-5893: Enhance JVM method processing
  - S8029533: REGRESSION: closed/java/lang/invoke/8008140/Test8008140.java fails agains
* Backports
  - S8025255: (tz) Support tzdata2013g
  - S8026826: JDK 7 fix for 8010935 broke the build
* Bug fixes
  - PR1618: Include defs.make in vm.make so VM_LITTLE_ENDIAN is defined on Zero builds
  - D729448: 32-bit alignment on mips and mipsel
  - PR1623: Collision between OpenJDK 6 & 7 classes when bootstrapping with OpenJDK 6
  - Remove binary files and unlicensed generated files

New in release 2.3.13 (2014-01-14):

* Security fixes
  - S6727821: Enhance JAAS Configuration
  - S7068126, CVE-2014-0373: Enhance SNMP statuses
  - S8006900, CVE-2013-3829: Add new date/time capability
  - S8008589: Better MBean permission validation
  - S8010935: Better XML handling
  - S8011071, CVE-2013-5780: Better crypto provider handling
  - S8011081, CVE-2013-5772: Improve jhat
  - S8011157, CVE-2013-5814: Improve CORBA portablility
  - S8011786, CVE-2014-0368: Better applet networking
  - S8012071, CVE-2013-5790: Better Building of Beans
  - S8012147: Improve tool support
  - S8012277: CVE-2013-5849: Improve AWT DataFlavor
  - S8012425, CVE-2013-5802: Transform TransformerFactory
  - S8013503, CVE-2013-5851: Improve stream factories
  - S8013506: Better Pack200 data handling
  - S8013510, CVE-2013-5809: Augment image writing code
  - S8013514: Improve stability of cmap class
  - S8013739, CVE-2013-5817: Better LDAP resource management
  - S8013744, CVE-2013-5783: Better tabling for AWT
  - S8014085: Better serialization support in JMX classes
  - S8014093, CVE-2013-5782: Improve parsing of images
  - S8014098: Better profile validation
  - S8014102, CVE-2013-5778: Improve image conversion
  - S8014341, CVE-2013-5803: Better service from Kerberos servers
  - S8014349, CVE-2013-5840: (cl) Class.getDeclaredClass problematic in some class loader configurations
  - S8014530, CVE-2013-5825: Better digital signature processing
  - S8014534: Better profiling support
  - S8014987, CVE-2013-5842: Augment serialization handling
  - S8015614: Update build settings
  - S8015731: Subject java.security.auth.subject to improvements
  - S8015743, CVE-2013-5774: Address internet addresses
  - S8016256: Make finalization final
  - S8016653, CVE-2013-5804: javadoc should ignore ignoreable characters in names
  - S8016675, CVE-2013-5797: Make Javadoc pages more robust
  - S8017196, CVE-2013-5850: Ensure Proxies are handled appropriately
  - S8017287, CVE-2013-5829: Better resource disposal
  - S8017291, CVE-2013-5830: Cast Proxies Aside
  - S8017298, CVE-2013-4002: Better XML support
  - S8017300, CVE-2013-5784: Improve Interface Implementation
  - S8017505, CVE-2013-5820: Better Client Service
  - S8019292: Better Attribute Value Exceptions
  - S8019617: Better view of objects
  - S8020293: JVM crash
  - S8021257, CVE-2013-5896: com.sun.corba.se.** should be on restricted package list
  - S8021271, CVE-2014-0408: Better buffering in ObjC code
  - S8021275, CVE-2013-5805: Better screening for ScreenMenu
  - S8021282, CVE-2013-5806: Better recycling of object instances
  - S8021286: Improve MacOS resourcing
  - S8021290, CVE-2013-5823: Better signature validation
  - S8022904: Enhance JDBC Parsers
  - S8022927: Input validation for byte/endian conversions
  - S8022931, CVE-2013-5800: Enhance Kerberos exceptions
  - S8022935: Enhance Apache resolver classes
  - S8022940: Enhance CORBA translations
  - S8022945: Enhance JNDI implementation classes
  - S8023057: Enhance start up image display
  - S8023069, CVE-2014-0411: Enhance TLS connections
  - S8023245, CVE-2014-0423: Enhance Beans decoding
  - S8023301: Enhance generic classes
  - S8023338: Update jarsigner to encourage timestamping
  - S8023672: Enhance jar file validation
  - S8023683: Enhance class file parsing
  - S8024302: Clarify jar verifications
  - S8024306, CVE-2014-0416: Enhance Subject consistency
  - S8024530: Enhance font process resilience
  - S8024867: Enhance logging start up
  - S8025014: Enhance Security Policy
  - S8025018, CVE-2014-0376: Enhance JAX-P set up
  - S8025026, CVE-2013-5878: Enhance canonicalization
  - S8025034, CVE-2013-5907: Improve layout lookups
  - S8025448: Enhance listening events
  - S8025758, CVE-2014-0422: Enhance Naming management
  - S8025767, CVE-2014-0428: Enhance IIOP Streams
  - S8026172: Enhance UI Management
  - S8026176: Enhance document printing
  - S8026193, CVE-2013-5884: Enhance CORBA stub factories
  - S8026204: Enhance auth login contexts
  - S8026417, CVE-2013-5910: Enhance XML canonicalization
  - S8027201, CVE-2014-0376: Enhance JAX-P set up
* Backports
  - S6614237: missing codepage Cp290 at java runtime
  - S7149012: jarsigner needs not warn about cert expiration if the jar has a TSA timestamp
  - S7167593: Changed get_source.sh to allow for getting full oracle jdk repo forest
  - S7167976: Fix broken get_source.sh script
  - S7170091: Fix missing wait between repo cloning in hgforest.sh
  - S7173959: Jvm crashed during coherence exabus (tmb) testing
  - S7182152: Instrumentation hot swap test incorrect monitor count
  - S7184406: Adjust get_source/hgforest script to allow for trailing // characters
  - S7192449: fix up tests to accommodate jtreg spec change
  - S7192744: fix up tests to accommodate jtreg spec change
  - S7196533: TimeZone.getDefault() slow due to synchronization bottleneck
  - S8000450: Restrict access to com/sun/corba/se/impl package
  - S8003992: File and other classes in java.io do not handle embedded nulls properly
  - S8004391: Bug fix in jtreg causes test failures in pre jdk 8 langtools tests
  - S8005194: [parfait] #353 sun/awt/image/jpeg/imageioJPEG.c Memory leak of pointer 'scale' allocated with calloc()
  - S8009399: Bump the hsx build number for APRIL CPU
  - S8011806: 7u25-b05 hotspot fastdebug build failure
  - S8013827: File.createTempFile hangs with temp file starting with 'com1.4'
  - S8014312: Fork hs23.25 hsx from hs23.21 for jdk7u25 and reinitialize build number
  - S8014469: (tz) Support tzdata2013c
  - S8014925: Disable sun.reflect.Reflection.getCallerClass(int) with a temporary switch to re-enable it
  - S8015144: Performance regression in ICU OpenType Layout library
  - S8015614: Update build settings
  - S8015965: (process) Typo in name of property to allow ambiguous commands
  - S8015978: Incorrect transformation of XPath expression "string(-0)"
  - S8015998: Additional improvement in Javadoc framing
  - S8016256: Make finalization final
  - S8016357: Update hotspot diagnostic class
  - S8016814: sun.reflect.Reflection.getCallerClass returns the frame off by 1
  - S8017566: Backout 8000450 - Cannot access to com.sun.corba.se.impl.orb.ORBImpl
  - S8019584: javax/management/remote/mandatory/loading/MissingClassTest.java failed in nightly against jdk7u45: java.io.InvalidObjectException: Invalid notification: null
  - S8019969: nioNetworkChannelInet6/SetOptionGetOptionTestInet6 test case crashes
  - S8019979: Replace CheckPackageAccess test with better one from closed repo
  - S8020054: (tz) Support tzdata2013d
  - S8020085: Linux ARM build failure for 7u45
  - S8020943: Memory leak when GCNotifier uses create_from_platform_dependent_str()
  - S8020983: OutOfMemoryError caused by non garbage collected JPEGImageWriter Instances
  - S8021355: REGRESSION: Five closed/java/awt/SplashScreen tests fail since 7u45 b01 on Linux, Solaris
  - S8021360: object not exported" on start of JMXConnectorServer for RMI-IIOP protocol with security manager
  - S8021366: java_util/Properties/PropertiesWithOtherEncodings fails during 7u45 nightly testing
  - S8021577: JCK test api/javax_management/jmx_serial/modelmbean/ModelMBeanNotificationInfo/serial/index.html#Input has failed since jdk 7u45 b01
  - S8021933: Add extra check for fix # JDK-8014530
  - S8021946: Disabling sun.reflect.Reflection.getCallerCaller(int) by default breaks several frameworks and libraries
  - S8021969: The index_AccessAllowed jnlp can not load successfully with exception thrown in the log.
  - S8022086: Fixing licence of newly added files
  - S8022661: InetAddress.writeObject() performs flush() on object output stream
  - S8022682: Supporting XOM
  - S8022856: 7u45 l10n resource file translation update
  - S8023457: Event based tracing framework needs a mutex for thread groups
  - S8023478: Test fails with HS crash in GCNotifier.
  - S8023771: when USER_RELEASE_SUFFIX is set in order to add a string to java -version, build number in the bundles names should not be changed to b00
  - S8023964: java/io/IOException/LastErrorString.java should be @ignore-d
  - S8024668: api/java_nio/charset/Charset/index.html#Methods JCK-runtime test fails with 7u45 b11
  - S8024697: Fix for 8020983 causes Xcheck:jni warnings
  - S8024863: X11: Support GNOME Shell as mutter
  - S8023683: Enhance class file parsing
  - S8024914: Swapped usage of idx_t and bm_word_t types in bitMap.inline.hpp
  - S8025128: File.createTempFile fails if prefix is absolute path
  - S8025170: jdk7u51 7u-1-prebuild is failing since 9/19
  - S8026826: JDK 7 fix for 8010935 broke the build
* Bug fixes
  - Enable Zero when there is no HotSpot JIT and an alternate VM has not been explictly enabled.
  - Add casts to fix build on S390
  - Add -D_LITTLE_ENDIAN for AArch64.
  - Add tests missing from 8014618 backport
  - Cast should use same type as GCDrainStackTargetSize (uintx).
  - Cleanup file resources properly in TimeZone_md.
  - RH991170: Handle alternative Kerberos credential cache locations
  - Fix Kerberos cache support to check for null, fallback on old path support and not hardcode the krb5 library.
  - Only define _GNU_SOURCE if not already defined.
  - Include defs.make in vm.make so VM_LITTLE_ENDIAN is defined on Zero builds
  - Fix merge issues caused by faulty AOT 8010118 patch.
  - PR1400: Menu of maximized AWT window not working in Mate
  - PR1551: Add build support for Zero AArch64
  - PR1553: Add Debian AArch64 support
  - PR1554: Fix build on Mac OS X
  - RH661505: JPEGs with sRGB IEC61966-2.1 color profiles have wrong colors
  - RH995488: Java thinks that the default timezone is Busingen instead of Zurich
  - Set ZERO_BUILD in flags.make so it is set on rebuilds

New in release 2.4.3 (2013-10-21):

* Security fixes
  - S8006900, CVE-2013-3829: Add new date/time capability
  - S8008589: Better MBean permission validation
  - S8011071, CVE-2013-5780: Better crypto provider handling
  - S8011081, CVE-2013-5772: Improve jhat
  - S8011157, CVE-2013-5814: Improve CORBA portablility
  - S8012071, CVE-2013-5790: Better Building of Beans
  - S8012147: Improve tool support
  - S8012277: CVE-2013-5849: Improve AWT DataFlavor
  - S8012425, CVE-2013-5802: Transform TransformerFactory
  - S8013503, CVE-2013-5851: Improve stream factories
  - S8013506: Better Pack200 data handling
  - S8013510, CVE-2013-5809: Augment image writing code
  - S8013514: Improve stability of cmap class
  - S8013739, CVE-2013-5817: Better LDAP resource management
  - S8013744, CVE-2013-5783: Better tabling for AWT
  - S8014085: Better serialization support in JMX classes
  - S8014093, CVE-2013-5782: Improve parsing of images
  - S8014098: Better profile validation
  - S8014102, CVE-2013-5778: Improve image conversion
  - S8014341, CVE-2013-5803: Better service from Kerberos servers
  - S8014349, CVE-2013-5840: (cl) Class.getDeclaredClass problematic in some class loader configurations
  - S8014530, CVE-2013-5825: Better digital signature processing
  - S8014534: Better profiling support
  - S8014987, CVE-2013-5842: Augment serialization handling
  - S8015614: Update build settings
  - S8015731: Subject java.security.auth.subject to improvements
  - S8015743, CVE-2013-5774: Address internet addresses
  - S8016256: Make finalization final
  - S8016653, CVE-2013-5804: javadoc should ignore ignoreable characters in names
  - S8016675, CVE-2013-5797: Make Javadoc pages more robust
  - S8017196, CVE-2013-5850: Ensure Proxies are handled appropriately
  - S8017287, CVE-2013-5829: Better resource disposal
  - S8017291, CVE-2013-5830: Cast Proxies Aside
  - S8017298, CVE-2013-4002: Better XML support
  - S8017300, CVE-2013-5784: Improve Interface Implementation
  - S8017505, CVE-2013-5820: Better Client Service
  - S8019292: Better Attribute Value Exceptions
  - S8019617: Better view of objects
  - S8020293: JVM crash
  - S8021275, CVE-2013-5805: Better screening for ScreenMenu
  - S8021282, CVE-2013-5806: Better recycling of object instances
  - S8021286: Improve MacOS resourcing
  - S8021290, CVE-2013-5823: Better signature validation
  - S8022931, CVE-2013-5800: Enhance Kerberos exceptions
  - S8022940: Enhance CORBA translations
  - S8023683: Enhance class file parsing
* Backports
  - S6614237: missing codepage Cp290 at java runtime
  - S8005932: Java 7 on mac os x only provides text clipboard formats
  - S8014046: (process) Runtime.exec(String) fails if command contains spaces [win]
  - S8015144: Performance regression in ICU OpenType Layout library
  - S8015965: (process) Typo in name of property to allow ambiguous commands
  - S8015978: Incorrect transformation of XPath expression "string(-0)"
  - S8016357: Update hotspot diagnostic class
  - S8019584: javax/management/remote/mandatory/loading/MissingClassTest.java failed in nightly against jdk7u45: java.io.InvalidObjectException: Invalid notification: null
  - S8019969: nioNetworkChannelInet6/SetOptionGetOptionTestInet6 test case crashes
  - S8020032: 7u fastdebug doesn't generate fastdebuginfo file
  - S8020085: Linux ARM build failure for 7u45
  - S8020088: Increment minor version of HSx for 7u45 and initialize the build number
  - S8020551: increment hsx build to b03 for 7u45-b03
  - S8020943: Memory leak when GCNotifier uses create_from_platform_dependent_str()
  - S8021287: Improve MacOS resourcing
  - S8021355: REGRESSION: Five closed/java/awt/SplashScreen tests fail since 7u45 b01 on Linux, Solaris
  - S8021360: object not exported" on start of JMXConnectorServer for RMI-IIOP protocol with security manager
  - S8021366: java_util/Properties/PropertiesWithOtherEncodings fails during 7u45 nightly testing
  - S8021577: JCK test api/javax_management/jmx_serial/modelmbean/ModelMBeanNotificationInfo/serial/index.html#Input has failed since jdk 7u45 b01
  - S8021899: Re-adjust fix of # 8020498 in 7u45 after mergeing 7u40
  - S8021901: Increment hsx build to b05 for 7u45-b05
  - S8021933: Add extra check for fix # JDK-8014530
  - S8021969: The index_AccessAllowed jnlp can not load successfully with exception thrown in the log.
  - S8022066: Evaluation of method reference to signature polymorphic method crashes VM
  - S8022086: Fixing licence of newly added files
  - S8022254: Remove incorrect jdk7u45-b05 tag from jdk7u-cpu forest
  - S8022661: InetAddress.writeObject() performs flush() on object output stream
  - S8022682: Supporting XOM
  - S8022808: Kitchensink hangs on macos
  - S8022856: 7u45 l10n resource file translation update
  - S8023323: Increment hsx build to b06 for 7u45-b08
  - S8023457: Event based tracing framework needs a mutex for thread groups
  - S8023478: Test fails with HS crash in GCNotifier.
  - S8023741: Increment hsx 24.45 build to b07 for 7u45-b09
  - S8023771: when USER_RELEASE_SUFFIX is set in order to add a string to java -version, build number in the bundles names should not be changed to b00
  - S8023888: Increment hsx 24.45 build to b08 for 7u45-b10
  - S8023964: java/io/IOException/LastErrorString.java should be @ignore-d
  - S8024369: Increment build # of hs24.0 to b57 for 7u40-b61 psu
  - S8024668: api/java_nio/charset/Charset/index.html#Methods JCK-runtime test fails with 7u45 b11
  - S8024697: Fix for 8020983 causes Xcheck:jni warnings
  - S8024863, PR1400: X11: Support GNOME Shell as mutter
  - S8024883, RH1011051: (se) SelectableChannel.register throws NPE if fd >= 64k (lnx)
  - S8025128: File.createTempFile fails if prefix is absolute path
  - S8025170: jdk7u51 7u-1-prebuild is failing since 9/19
* Bug fixes
  - PR1400: Menu of maximized AWT window not working in Mate

New in release 2.4.2 (2013-09-20):

* System LCMS 2 support again enabled by default, requiring 2.5 or above.
* OpenJDK
  - S7122222: GC log is limited to 2G for 32-bit
  - S7162400: Intermittent java.io.IOException: Bad file number during HotSpotVirtualMachine.executeCommand
  - S7165807: Non optimized initialization of NSS crypto library leads to scalability issues
  - S7199324: IPv6: JMXConnectorServer.getConnectionIDs() return IDs contradicting to address grammar
  - S8001345: VM crashes with assert(n->outcnt() != 0 || C->top() == n || n->is_Proj()) failed: No dead instructions after post-alloc
  - S8001424: G1: Rename certain G1-specific flags
  - S8001425: G1: Change the default values for certain G1 specific flags
  - S8004859: Graphics.getClipBounds/getClip return difference nonequivalent bounds, depending from transform
  - S8005019: JTable passes row index instead of length when inserts selection interval
  - S8005194: [parfait] #353 sun/awt/image/jpeg/imageioJPEG.c Memory leak of pointer 'scale' allocated with calloc()
  - S8006941: [macosx] Deadlock in drag and drop
  - S8007898: Incorrect optimization of Memory Barriers in Matcher::post_store_load_barrier()
  - S8009168: accessibility.properties syntax issue
  - S8009985: [parfait] Uninitialised variable at jdk/src/solaris/native/com/sun/management/UnixOperatingSystem_md.c
  - S8011064: Some tests have failed with SIGSEGV on arm-hflt on build b82
  - S8011569: ARM -- avoid native stack walking
  - S8011760: assert(delta != 0) failed: dup pointer in MemBaseline::malloc_sort_by_addr
  - S8012144: multiple SIGSEGVs fails on staxf
  - S8012156: tools/javac/file/zip/T6865530.java fails for win32/64
  - S8012241: NMT huge memory footprint, it usually leads to OOME
  - S8012366: Fix for 8007815 breaks down when only building OpenJDK (without deploy and install forests)
  - S8013546: compiler/8011901/Test8011901.java fails with CompilationError: Compilation failed
  - S8013719: Increment build # of hs23.21 to b02
  - S8013791: G1: G1CollectorPolicy::initialize_flags() may set min_alignment > max_alignment
  - S8014264: The applet pathguy_TimeDead throws java.lang.NullPointerException in java console once click drop-down check box.
  - S8014312: Fork hs23.25 hsx from hs23.21 for jdk7u25 and reinitialize build number
  - S8014805: NPE is thrown during certpath validation if certificate does not have AuthorityKeyIdentifier extension
  - S8014850: Third Party License Readme updates for 7u40
  - S8014925: Disable sun.reflect.Reflection.getCallerClass(int) with a temporary switch to re-enable it
  - S8015237: Parallelize string table scanning during strong root processing
  - S8015411: Bump the hsx build number for 7u21-b50 for customer
  - S8015441: runThese crashed with assert(opcode == Op_ConP || opcode == Op_ThreadLocal || opcode == Op_CastX2P ..) failed: sanity
  - S8015576: CMS: svc agent throws java.lang.RuntimeException: No type named "FreeList" in database
  - S8015668: overload resolution: performance regression in JDK 7
  - S8015884: runThese crashed with SIGSEGV, hs_err has an error instead of stacktrace
  - S8016074: NMT: assertion failed: assert(thread->thread_state() == from) failed: coming from wrong thread state
  - S8016102: Increment build # of hs23.25 to b02 for 7u25-b31 psu
  - S8016131: nsk/sysdict/vm/stress/chain tests crash the VM in 'entry_frame_is_first()'
  - S8016133: Regression: diff. behavior with user-defined SAXParser
  - S8016157: During CTW: C2: assert(!def_outside->member(r)) failed: Use of external LRG overlaps the same LRG defined in this block
  - S8016331: Minor issues in event tracing metadata
  - S8016648: FEATURE_SECURE_PROCESSING set to true or false causes SAXParseException to be thrown
  - S8016734: Remove extra code due to duplicated push
  - S8016737: After clicking on "Print UNCOLLATED" button, the print out come in order 'Page 1', 'Page 2', 'Page 1'
  - S8016740: assert in GC_locker from PSOldGen::expand with -XX:+PrintGCDetails and Verbose
  - S8016767: Provide man pages generated from DARB for OpenJDK
  - S8017070: G1: assert(_card_counts[card_num] <= G1ConcRSHotCardLimit) failed
  - S8017159: Unexclude sun/tools/JMAP/Basic.sh test
  - S8017173: XMLCipher with RSA_OAEP Key Transport algorithm can't be instantiated
  - S8017174: NPE when using Logger.getAnonymousLogger or LogManager.getLogManager().getLogger
  - S8017189: [macosx] AWT program menu disabled on Mac
  - S8017252: new hotspot build - hs24-b51
  - S8017478: Kitchensink crashed with SIGSEGV in BaselineReporter::diff_callsites
  - S8017483: G1 tests fail with native OOME on Solaris x86 after HeapBaseMinAddress has been increased
  - S8017510: Add a regression test for 8005956
  - S8017566: Backout 8000450 - Cannot access to com.sun.corba.se.impl.orb.ORBImpl
  - S8017588: SA: jstack -l throws UnalignedAddressException while attaching to core file for java that was started with CMS GC
  - S8019155: Update makefiles with correct jfr packages
  - S8019201: Regression: java.awt.image.ConvolveOp throws java.awt.image.ImagingOpException
  - S8019236: [macosx] Add javadoc to the handleWindowFocusEvent in CEmbeddedFrame
  - S8019265: [macosx] apple.laf.useScreenMenuBar regression comparing with jdk6
  - S8019298: new hotspot build - hs24-b52
  - S8019381: HashMap.isEmpty is non-final, potential issues for get/remove
  - S8019541: 7u40 l10n resource file translation update
  - S8019587: [macosx] Possibility to set the same frame for the different screens
  - S8019625: Test compiler/8005956/PolynomialRoot.java timeouts on Solaris SPARCs
  - S8019628: [macosx] closed/java/awt/Modal/BlockedMouseInputTest/BlockedMouseInputTest.html failed since 7u40b30 on MacOS
  - S8019826: Test com/sun/management/HotSpotDiagnosticMXBean/SetVMOption.java fails with NPE
  - S8019933: new hotspot build - hs24-b53
  - S8019979: Replace CheckPackageAccess test with better one from closed repo
  - S8020038: [macosx] Incorrect usage of invokeLater() and likes in callbacks called via JNI from AppKit thread
  - S8020054: (tz) Support tzdata2013d
  - S8020155: PSR:PERF G1 not collecting old regions when humongous allocations interfer
  - S8020215: Different execution plan when using JIT vs interpreter
  - S8020228: Restore the translated version of logging_xx.properties
  - S8020298: [macosx] Incorrect merge in the lwawt code
  - S8020319: Update Japanese man pages for 7u40
  - S8020371: [macosx] applets with Drag and Drop fail with IllegalArgumentException
  - S8020381: new hotspot build - hs24-b54
  - S8020425: Product options incorrectly removed in minor version
  - S8020430: NullPointerException in xml sqe nightly result on 2013-07-12
  - S8020433: Crash when using -XX:+RestoreMXCSROnJNICalls
  - S8020498: Crash when both libnet.so and libmawt.so are loaded
  - S8020525: Increment build # of hs23.25 to b03 for 7u25-b34 psu
  - S8020547: Event based tracing needs a UNICODE string type
  - S8020625: [TESTBUG] java/util/HashMap/OverrideIsEmpty.java doesn't compile for jdk7u
  - S8020701: Avoid crashes in WatcherThread
  - S8020796: new hotspot build - hs24-b55
  - S8020811: [macosx] Merge fault 7u25-7u40: Missed focus fix JDK-8012330
  - S8020940: Valid OCSP responses are rejected for backdated enquiries
  - S8020983: OutOfMemoryError caused by non garbage collected JPEGImageWriter Instances
  - S8021008: Provide java and jcmd man pages for Mac (OpenJDK)
  - S8021148: Regression in SAXParserImpl in 7u40 b34 (NPE)
  - S8021353: Event based tracing is missing thread exit
  - S8021381: JavaFX scene included in Swing JDialog not starting from Web Start
  - S8021565: new hotspot build - hs24-b56
  - S8021771: warning stat64 is deprecated - when building on OSX 10.7.5
  - S8021946: Disabling sun.reflect.Reflection.getCallerCaller(int) by default breaks several frameworks and libraries
  - S8022548: SPECJVM2008 has errors introduced in 7u40-b34
  - S8023751: Need to backout 8020943, was pushed to hs24 without approval
  - S8024914: Swapped usage of idx_t and bm_word_t types in bitMap.inline.hpp
* New features
  - RH991170: java does not use correct kerberos credential cache
  - PR1536: Allow use of system Kerberos to obtain cache location
  - PR1551: Add build support for Zero AArch64
  - PR1552: Add -D_LITTLE_ENDIAN for ARM architectures.
  - PR1553: Add Debian AArch64 support
  - PR1554: Fix build on Mac OS X
* Bug fixes
  - RH661505: JPEGs with sRGB IEC61966-2.1 color profiles have wrong colors
  - RH995488: Java thinks that the default timezone is Busingen instead of Zurich
  - Cleanup file resources properly in TimeZone_md.
  - PR1410: Icedtea 2.3.9 fails to build using icedtea 1.12.4
  - G477456: emerge fails on pax system: java attempts RWX map, paxctl -m missing
  - G478484: patches/boot/ecj-diamond.patch FAILED
  - Fix Zero following changes to entry_frame_call_wrapper in 8016131
  - RH1008988: Set ZERO_BUILD in flags.make so it is set on rebuilds
  - Cast should use same type as GCDrainStackTargetSize (uintx).
  - Add casts to fix build on S390
* JamVM
  - JSR292: Invoke Dynamic
  - sun.misc.Unsafe: additional methods get/putAddress: allows JamVM with OpenJDK 7/8 to run recent versions of JEdit.
  - FreeClassData: adjust method count for Miranda methods

New in release 2.4.1 (2013-07-05):

* Security fixes
  - S6741606, CVE-2013-2407: Integrate Apache Santuario
  - S7158805, CVE-2013-2445: Better rewriting of nested subroutine calls
  - S7170730, CVE-2013-2451: Improve Windows network stack support.
  - S8000638, CVE-2013-2450: Improve deserialization
  - S8000642, CVE-2013-2446: Better handling of objects for transportation
  - S8001032: Restrict object access
  - S8001033, CVE-2013-2452: Refactor network address handling in virtual machine identifiers
  - S8001034, CVE-2013-1500: Memory management improvements
  - S8001038, CVE-2013-2444: Resourcefully handle resources
  - S8001043: Clarify definition restrictions
  - S8001308: Update display of applet windows
  - S8001309: Better handling of annotation interfaces
  - S8001318, CVE-2013-2447: Socket.getLocalAddress not consistent with InetAddress.getLocalHost
  - S8001330, CVE-2013-2443: Improve on checking order (non-Zero builds only)
  - S8003703, CVE-2013-2412: Update RMI connection dialog box
  - S8004288, CVE-2013-2449: (fs) Files.probeContentType problems
  - S8004584: Augment applet contextualization
  - S8005007: Better glyph processing
  - S8006328, CVE-2013-2448: Improve robustness of sound classes
  - S8006611: Improve scripting
  - S8007467: Improve robustness of JMX internal APIs
  - S8007471: Improve MBean notifications
  - S8007812, CVE-2013-2455: (reflect) Class.getEnclosingMethod problematic for some classes
  - S8007925: Improve cmsStageAllocLabV2ToV4curves
  - S8007926: Improve cmsPipelineDup
  - S8007927: Improve cmsAllocProfileSequenceDescription
  - S8007929: Improve CurvesAlloc
  - S8008120, CVE-2013-2457: Improve JMX class checking
  - S8008124, CVE-2013-2453: Better compliance testing
  - S8008128: Better API coherence for JMX
  - S8008132, CVE-2013-2456: Better serialization support
  - S8008585: Better JMX data handling
  - S8008593: Better URLClassLoader resource management
  - S8008603: Improve provision of JMX providers
  - S8008607: Better input checking in JMX
  - S8008611: Better handling of annotations in JMX
  - S8008615: Improve robustness of JMX internal APIs
  - S8008623: Better handling of MBeanServers
  - S8008744, CVE-2013-2407: Rework part of fix for JDK-6741606
  - S8008982: Adjust JMX for underlying interface changes
  - S8009004: Better implementation of RMI connections
  - S8009008: Better manage management-api
  - S8009013: Better handling of T2K glyphs
  - S8009034: Improve resulting notifications in JMX
  - S8009038: Improve JMX notification support
  - S8009057, CVE-2013-2448: Improve MIDI event handling
  - S8009067: Improve storing keys in KeyStore
  - S8009071, CVE-2013-2459: Improve shape handling
  - S8009235: Improve handling of TSA data
  - S8009424, CVE-2013-2458: Adapt Nashorn to JSR-292 implementation change
  - S8009554, CVE-2013-2454: Improve SerialJavaObject.getFields
  - S8009654: Improve stability of cmsnamed
  - S8010209, CVE-2013-2460: Better provision of factories
  - S8011243, CVE-2013-2470: Improve ImagingLib
  - S8011248, CVE-2013-2471: Better Component Rasters
  - S8011253, CVE-2013-2472: Better Short Component Rasters
  - S8011257, CVE-2013-2473: Better Byte Component Rasters
  - S8012375, CVE-2013-1571: Improve Javadoc framing
  - S8012421: Better positioning of PairPositioning
  - S8012438, CVE-2013-2463: Better image validation
  - S8012597, CVE-2013-2465: Better image channel verification
  - S8012601, CVE-2013-2469: Better validation of image layouts
  - S8014281, CVE-2013-2461: Better checking of XML signature
  - S8015997: Additional improvement in Javadoc framing
* OpenJDK
  - S2223192: [macosx] "opposite" seems always null in focus events
  - S4504275: CORBA boolean type unions do not generate compilable code from idlj
  - S6337518: Null Arrow Button Throws Exception in BasicComboBoxUI
  - S6429204: (se) Concurrent Selector.register and SelectionKey.interestOps can ignore interestOps
  - S6436314: Vector could be created with appropriate size in DefaultComboBoxModel
  - S6443505: Ideal() function for CmpLTMask
  - S6470730: Disconnect button leads to wrong popup message
  - S6725714: par compact - add a table to speed up bitmap searches
  - S6761744: Hotspot crashes if process size limit is exceeded
  - S6843375: Debuggee VM crashes performing mark-sweep-compact
  - S7038105: File.isHidden() should return true for pagefile.sys and hiberfil.sys
  - S7053526: Upgrade JDK 8 to use Little CMS 2.4
  - S7056447: test/java/lang/management/ManagementFactory/MBeanServerMXBeanUnsupportedTest.java fails in agentvm
  - S7066063: CMS: "Conservation Principle" assert failed
  - S7068740: If you wrap a JTable in a JLayer you can't use the page up and page down cmds
  - S7105030: [TEST_BUG] [macosx] The tests never finishes
  - S7109087: gc/7072527/TestFullGCCount.java fails when GC is set in command-line
  - S7109977: [macosx] MixingInHwPanel.java test fails on Mac trying to click in the reserved corner
  - S7115383: TEST_BUG: some jtreg tests fail because they explicitly specify -server option
  - S7124520: [macosx] re:6373505 Toolkit.getScreenResolution() != GraphicsConfiguration.getNormalizingTransform()
  - S7132378: Race in FutureTask if used with explicit set ( not Runnable )
  - S7142919: TEST_BUG: java/nio/channels/AsyncCloseAndInterrupt.java failing intermittently [sol11]
  - S7151823: The test incorrectly recognizing OS
  - S7152798: TEST_BUG: sun/management/HotspotClassLoadingMBean/GetClassLoadingTime.java does not compile
  - S7152866: Tests not run because they are missing the @run tag
  - S7157656: (zipfs) SeekableByteChannel to entry in zip file always reports its position as 0
  - S7158350: [macosx] Strange results of SwingUIText printing
  - S7160084: javac fails to compile an apparently valid class/interface combination
  - S7163898: add isLoggable() check to doLog()
  - S7164256: EnumMap clone doesn't clear the entrySet keeping a reference to the original Map
  - S7174966: With OCSP enabled on Java 7 get error 'Wrong key usage' with Comodo certificate
  - S7176220: 'Full GC' events miss date stamp information occasionally
  - S7176479: G1: JVM crashes on T5-8 system with 1.5 TB heap
  - S7179050: [macosx] Make LWAWT be able to run on AppKit thread
  - S7179353: try-with-resources fails to compile with generic exception parameters
  - S7181710: [macosx] jawt_md.h shipped with jdk is outdated
  - S7183520: [macosx]Unable to print out the defined page for 2D_PrintingTiger/JTablePrintPageRangesTest
  - S7183800: TEST_BUG: Update tests to run on Ubuntu 12.04 (localhost is 127.0.1.1)
  - S7184908: TEST_BUG: [macosx] closed/com/sun/java/swing/plaf/gtk/4928019/bug4928019.java fails
  - S7184945: [macosx] NPE in AquaComboBoxUI since jdk7u6b17, jdk8b47
  - S7186737: Unable to allocate bit maps or card tables for parallel gc for the requested heap
  - S7190897: (fs) Files.isWritable method returns false when the path is writable (win)
  - S7194902: [macosx] closed/java/awt/Button/DoubleActionEventTest/DoubleActionEventTest failed since jdk8b49
  - S7196080: assert(max_heap >= InitialHeapSize) in arguments.cpp
  - S7196277: JSR 292: Two jck/runtime tests crash on java.lang.invoke.MethodHandle.invokeExact
  - S7197666: java -d64 -version core dumps in a box with lots of memory
  - S7198229: Painting during resizing of the frame should be more smooth
  - S7199143: RFE: OCSP revocation checker should provide possibility to specify connection timeout
  - S8000435: [macosx] Button painting error under Java 7 on Mac
  - S8000450: Restrict access to com/sun/corba/se/impl package
  - S8000529: Regression: SimpleDateFormat incorrectly parses dates formatted with Z and z pattern letters
  - S8000629: [macosx] Blurry rendering with Java 7 on Retina display
  - S8000973: SA on windows thread inspection is broken
  - S8002070: Remove the stack search for a resource bundle for Logger to use
  - S8002308: [macosx] 7198229 should be applied to the user action only
  - S8002390: (zipfs) Problems moving files between zip file systems
  - S8003169: [macosx] JVM crash after disconnecting from projector
  - S8003173: [macosx] Fullscreen on Mac leaves an empty rectangle
  - S8003268: SharedRuntime::generate_native_wrapper doesn't save all registers across runtime tracing calls for JNI critical native methods
  - S8003992: File and other classes in java.io do not handle embedded nulls properly
  - S8004821: Graphics2D.drawPolygon() fails with IllegalPathStateException
  - S8004866: [macosx] HiDPI support in Aqua L&F
  - S8005032: G1: Cleanup serial reference processing closures in concurrent marking
  - S8005405: [macosx] Drag and Drop: wrong animation when dropped outside any drop target.
  - S8005527: [TEST_BUG] console.sh failed Automatically with exit code 1.
  - S8005555: TEST_BUG: java/io/Serializable/accessConstants/AccessConstants.java should be removed
  - S8005956: C2: assert(!def_outside->member(r)) failed: Use of external LRG overlaps the same LRG defined in this block
  - S8005997: [macosx] Printer Dialog opens an additional title bar
  - S8006008: Memory leak in hotspot/src/share/vm/adlc/archDesc.cpp
  - S8006014: Memory leak in hotspot/src/share/vm/adlc/dfa.cpp
  - S8006016: Memory leak at hotspot/src/share/vm/adlc/output_c.cpp
  - S8006242: G1: WorkerDataArray<T>::verify() too strict for double calculations
  - S8006328: Improve robustness of sound classes
  - S8006423: SA: NullPointerException in sun.jvm.hotspot.debugger.bsd.BsdThread.getContext(BsdThread.java:67)
  - S8006611: Improve scripting
  - S8006634: Unify LWCToolkit.invokeAndWait() and sun.awt.datatransfer.ToolkitThreadBlockedHandler
  - S8006894: G1: Number of marking threads missing from PrintFlagsFinal output
  - S8007028: java/util/NavigableMap/LockStep hit assert(flat != TypePtr::BOTTOM) failed: cannot alias-analyze an untyped ptr
  - S8007036: G1: Too many old regions added to last mixed GC
  - S8007150: Event based tracing is missing truncated field in stack trace content type
  - S8007221: G1: concurrent phase durations do not state the time units ("secs")
  - S8007333: [launcher] removes multiple back slashes
  - S8007458: [findbugs] One more beans issue, with ReflectionUtils
  - S8007699: Move some tests from test/sun/security/provider/certpath/X509CertPath to closed repo
  - S8007703: Remove com.sun.servicetag API
  - S8008289: DefaultButtonModel instance keeps stale listeners in html FormView
  - S8008301: G1: guarantee(satb_mq_set.completed_buffers_num() == 0) failure
  - S8008366: [macosx] ActionListener called twice for JMenuItem using ScreenMenuBar
  - S8008391: Incorrect metadata for event based tracing
  - S8008454: test/runtime/NMT/PrintNMTStatistics is broken
  - S8008535: JDK7 Printing : CJK and Latin Text in a string overlap
  - S8008660: Failure in 2D Queue Flusher thread on Mac
  - S8008738: Issue in com.sun.org.apache.xml.internal.serializer.Encodings causes some JCK tests to fail intermittently
  - S8008744: Rework part of fix for JDK-6741606
  - S8008804: file descriptor leak in src/windows/native/java/net/DualStackPlainSocketImpl.c
  - S8008916: G1: Evacuation failed tracing event
  - S8009012: [macosx] DisplayChangedListener is not implemented in LWWindowPeer/CGraphicsEnvironment
  - S8009125: Add NMT tests for Virtual Memory operations
  - S8009152: A number of jtreg tests need review/improvement
  - S8009199: Printed text become garbage on Mac OSX
  - S8009217: REGRESSION: test com/sun/org/apache/xml/internal/security/transforms/ClassLoaderTest.java fails to compile since 7u21b03
  - S8009259: TEST_BUG: sun/misc/Cleaner/exitOnThrow.sh failing intermittently
  - S8009302: Mac OS X: JVM crash on infinite recursion on Appkit Thread
  - S8009536: G1: Apache Lucene hang during reference processing
  - S8009638: Wrong comment for PL in LocaleISOData, 1989 forward Poland is Republic of Poland
  - S8009751: (se) Selector spin when select, close and interestOps(0) invoked at same time (lnx)
  - S8009911: [macosx] SWT app freeze when going full screen using Java 7 on Mac
  - S8009928: PSR:PERF Increase default string table size
  - S8009940: G1: assert(_finger == _heap_end) failed, concurrentMark.cpp:809
  - S8009996: tests javax/management/mxbean/MiscTest.java and javax/management/mxbean/StandardMBeanOverrideTest.java fail
  - S8009999: Test sun/tools/jcmd/jcmd-f.sh failing after JDK-8008820
  - S8010009: [macosx] Unable type into online word games on MacOSX
  - S8010090: GC ID has the wrong type
  - S8010118: Annotate jdk caller sensitive methods with @sun.reflect.CallerSensitive
  - S8010151: nsk/regression/b6653214 fails "assert(snapshot != NULL) failed: Worker should not be started"
  - S8010213: Some api/javax_net/SocketFactory tests fail in 7u25 nightly build
  - S8010309: Improve PlatformLogger.isLoggable performance by direct mapping from an integer to Level
  - S8010399: Test8009761.java "Failed: init recursive calls: 5498. After deopt 5494".
  - S8010437: guarantee(this->is8bit(imm8)) failed: Short forward jump exceeds 8-bit offset
  - S8010463: G1: Crashes with -UseTLAB and heap verification
  - S8010514: G1: Concurrent mode failure tracing event
  - S8010714: XML DSig API allows a RetrievalMethod to reference another RetrievalMethod
  - S8010721: In JDK7 the menu bar disappears when a Dialog is shown
  - S8010727: WLS fails to add a logger with "" in its own LogManager subclass instance
  - S8010770: Zero: back port of 8000780 to HS24 broke JSR 292
  - S8010780: G1: Eden occupancy/capacity output wrong after a full GC
  - S8010913: compiler/6863420 often exceeds timeout
  - S8010927: Kitchensink crashed with SIGSEGV, Problematic frame: v ~StubRoutines::checkcast_arraycopy
  - S8011102: Clear AVX registers after return from JNI call
  - S8011128: (fs) Files.createDirectory fails if the resolved path is exactly 248 characters long
  - S8011139: (reflect) Revise checking in getEnclosingClass
  - S8011154: java/awt/Frame/ShapeNotSetSometimes/ShapeNotSetSometimes.java failed since 7u25b03 on windows
  - S8011161: NMT: Memory leak when encountering out of memory error while initializing memory snapshot
  - S8011186: [TEST_BUG] java/awt/Focus/OverrideRedirectWindowActivationTest/OverrideRedirectWindowActivationTest.java failed on windows 8
  - S8011200: (coll) Optimize empty HashMap and ArrayList
  - S8011218: Kitchensink hanged, likely NMT is to blame
  - S8011313: OCSP timeout set to wrong value if com.sun.security.ocsp.timeout not defined
  - S8011380: FX dependency on PlatformLogger broken by 8010309
  - S8011425: NPE in TestObjectCountAfterGCEvent.java on Linux32
  - S8011557: Improve reflection utility classes
  - S8011653: Upgrade to JAXP 1.5
  - S8011686: [macosx] AWT accidentally disables the NSApplicationDelegate of SWT, causing loss of OS X integration functionality
  - S8011695: [tck-red] Application can not be run, the Security Warning dialog is gray.
  - S8011806: 7u25-b05 hotspot fastdebug build failure
  - S8011882: Replace spin loops as back off when suspending
  - S8011891: The vm/gc/heap/heap_summary_after_gc event for CMS contains old data
  - S8011901: Unsafe.getAndAddLong(obj, off, delta) does not work properly with long deltas
  - S8011947: new hotspot build - hs24-b41
  - S8011952: Missing ResourceMarks in TraceMethodHandles
  - S8011968: Kitchensink crashed with SIGSEGV in MemBaseline::baseline
  - S8011986: [corba] idlj generates read/write union helper methods that throw wrong exception in some cases
  - S8011990: TEST_BUG: java/util/logging/bundlesearch/ResourceBundleSearchTest.java fails on Windows
  - S8011992: java/awt/image/mlib/MlibOpsTest.java failed since jdk7u25b05
  - S8012004: JInternalFrame not being finalized after closing
  - S8012019: (fc) Thread.interrupt triggers hang in FileChannelImpl.pread (win)
  - S8012037: Test8009761.java "Failed: init recursive calls: 7224. After deopt 58824"
  - S8012044: Give more information about self-suppression from Throwable.addSuppressed
  - S8012082: SASL: auth-conf negotiated, but unencrypted data is accepted, reset to unencrypt
  - S8012086: The object count event should only send events for instances occupying more than 0.5% of the heap
  - S8012102: CollectedHeap::ensure_parsability is not always called during heap inspection
  - S8012112: java/awt/image/mlib/MlibOpsTest.java fails on sparc solaris
  - S8012182: Add information about class loading and unloading to event based tracing framework
  - S8012210: Make TracingTime available when INCLUDE_TRACE = 0
  - S8012212: Want to link against kstat on solaris x86 as well as sparc
  - S8012243: about 30% regression on specjvm2008.serial on 7u25 comparing 7u21
  - S8012265: VM often crashes on solaris with a lot of memory
  - S8012330: [macosx] Sometimes the applet showing the modal dialog itself loses the ability to gain focus
  - S8012335: G1: Fix bug with compressed oops in template interpreter on x86 and sparc.
  - S8012381: [macosx]  Collation selection ignored when printing on MacOSX
  - S8012453: (process) Runtime.exec(String) fails if command contains spaces [win]
  - S8012455: Missing time and date stamps for PrintGCApplicationConcurrentTime and PrintGCApplicationStoppedTime
  - S8012558: new hotspot build - hs24-b42
  - S8012586: [x11] Modal dialogs for fullscreen window may show behind its owner
  - S8012617: ArrayIndexOutOfBoundsException with some fonts using LineBreakMeasurer
  - S8012683: Remove unused, obsolete ObjectFactory classes
  - S8012714: Assign the unique traceid directly to the Klass upon creation
  - S8012715: G1: GraphKit accesses PtrQueue::_index as int but is size_t
  - S8012933: Test closed/java/awt/Dialog/DialogAnotherThread/JaWSTest.java fails since jdk 7u25 b07
  - S8013057: assert(_needs_gc || SafepointSynchronize::is_at_safepoint()) failed: only read at safepoint
  - S8013117: Thread-local trace_buffer has wrong type and name
  - S8013120: NMT: Kitchensink crashes with assert(next_region == NULL || !next_region->is_committed_region()) failed: Sanity check
  - S8013140: Heap corruption with NetworkInterface.getByInetAddress() and long i/f name
  - S8013196: TimeZone.getDefault() throws NPE due to sun.awt.AppContext.getAppContext()
  - S8013214: BigApps fails due to 'fatal error: Illegal threadstate encountered: 6'
  - S8013226: new hotspot build - hs24-b43
  - S8013228: Create new system properties to control allowable OCSP clock skew and CRL connection timeout
  - S8013370: Null pointer exception when adding more than 9 accelators to a JMenuBar
  - S8013380: Removal of stack walk to find resource bundle breaks Glassfish startup
  - S8013398: Adjust number of stack guard pages on systems with large memory page size
  - S8013416: Java Bean Persistence with XMLEncoder
  - S8013557: XMLEncoder in 1.7 can't encode objects initialized in no argument constructor
  - S8013651: NMT: reserve/release sequence id's in incorrect order due to race
  - S8013799: new hotspot build - hs24-b44
  - S8013810: PrintServiceLookup.lookupPrintServices() does not return consistent result
  - S8013827: File.createTempFile hangs with temp file starting with 'com1.4'
  - S8013900: More warnings compiling jaxp.
  - S8013917: Kitchensink crashed with SIGSEGV in BaselineReporter::diff_callsites
  - S8013934: Garbage collection event for CMS has wrong cause for System.gc()
  - S8014048: Online user guide of jconsole points incorrect link
  - S8014129: makefile changes to allow integration of new features
  - S8014189: JVM crash with SEGV in ConnectionGraph::record_for_escape_analysis()
  - S8014196: ktab creates a file with zero kt_vno
  - S8014205: Most of the Swing dialogs are blank on one win7 MUI
  - S8014278: new hotspot build - hs24-b45
  - S8014326: [OSX] All libjvm symbols are exported
  - S8014408: G1: crashes with assert assert(prev_committed_card_num == _committed_max_card_num) failed
  - S8014411: Decrease lock order rank for event tracing locks
  - S8014420: Default JDP address does not match the one assigned by IANA
  - S8014423: [macosx] The scrollbar's block increment performs incorrectly
  - S8014427: REGRESSION: closed/javax/imageio/plugins/bmp/Write3ByteBgrTest.java fails since 7u25 b09
  - S8014478: EnableTracing: output from multiple threads may be mixed together
  - S8014611: reserve_and_align() assumptions are invalid on windows
  - S8014669: arch specific flags not passed to some link commands
  - S8014676: Java debugger may fail to run
  - S8014718: Netbeans IDE begins to throw a lot exceptions since 7u25 b10
  - S8014721: TEST_BUG: java/awt/TrayIcon/DragEventSource/DragEventSource.java fails with java.lang.UnsupportedOperationException
  - S8014724: Broken 7u-dev build
  - S8014745: Provide a switch to allow stack walk search of resource bundle
  - S8014759: new hotspot build - hs24-b46
  - S8014811: loopTransform.cpp assert(cmp_end->in(2) == limit) failed
  - S8014821: Regression: Focus issues with Oracle WebCenter Capture applet
  - S8014863: Line break calculations in Java 7 are incorrect
  - S8014891: Redundant setting of external access properties in setFeatures
  - S8014924: JToolTip#setTipText() sometimes (very often) not repaints component.
  - S8014941: make jdk7u40 the default jprt release for hs24
  - S8014968: OCSP and CRL connection timeout is set to four hours by default
  - S8014969: Use open man pages for non commercial builds
  - S8015016: Improve JAXP 1.5 error message
  - S8015275: Resolve ambiguity in OCSPChecker & CrlRevocationChecker
  - S8015303: [macosx] Application launched via custom URL Scheme does not receive URL
  - S8015304: new hotspot build - hs24-b47
  - S8015334: Memory leak when kerning is used on Windows.
  - S8015375: Edits to text components hang for clipboard access
  - S8015556: [macosx] surrogate pairs do not render properly.
  - S8015604: JDP packets containing ideographic characters are broken
  - S8015606: Text is not rendered correctly if destination buffer is custom
  - S8015683: object_count_after_gc should have the same timestamp for all events
  - S8015689: new hotspot build - hs24-b48
  - S8015972: Refactor the sending of the object count after GC event
  - S8016046: (process) Strict validation of input should be security manager case only [win].
  - S8016063: getFinalAttributes should use FindClose
  - S8016065: Write regression test for 7167142
  - S8016077: new hotspot build - hs24-b49
  - S8016153: Property http://javax.xml.XMLConstants/property/accessExternalDTD is not recognized.
  - S8016170: GC id variable in gcTrace.cpp should use typedef GCId
  - S8016187: assert(nbits == 32 || (-(1 << nbits-1) <= x && x < ( 1 << nbits-1))) failed: value out of range
  - S8016556: G1: Use ArrayAllocator for BitMaps
  - S8016566: new hotspot build - hs24-b50
  - S8016735: Remove superfluous EnableInvokeDynamic warning from UnlockDiagnosticVMOptions check
  - S8016814: sun.reflect.Reflection.getCallerClass returns the frame off by 1

New in release 2.2.9 (2013-06-29):

* New features
  - PR1378: Add AArch64 support to Zero
* Security fixes
  - S6741606, CVE-2013-2407: Integrate Apache Santuario
  - S7158805, CVE-2013-2445: Better rewriting of nested subroutine calls
  - S7170730, CVE-2013-2451: Improve Windows network stack support.
  - S8000638, CVE-2013-2450: Improve deserialization
  - S8000642, CVE-2013-2446: Better handling of objects for transportation
  - S8001032: Restrict object access
  - S8001033, CVE-2013-2452: Refactor network address handling in virtual machine identifiers
  - S8001034, CVE-2013-1500: Memory management improvements
  - S8001038, CVE-2013-2444: Resourcefully handle resources
  - S8001043: Clarify definition restrictions
  - S8001308: Update display of applet windows
  - S8001309: Better handling of annotation interfaces
  - S8001318, CVE-2013-2447: Socket.getLocalAddress not consistent with InetAddress.getLocalHost
  - S8003703, CVE-2013-2412: Update RMI connection dialog box
  - S8004288, CVE-2013-2449: (fs) Files.probeContentType problems
  - S8004584: Augment applet contextualization
  - S8005007: Better glyph processing
  - S8006328, CVE-2013-2448: Improve robustness of sound classes
  - S8006611: Improve scripting
  - S8007467: Improve robustness of JMX internal APIs
  - S8007471: Improve MBean notifications
  - S8007812, CVE-2013-2455: (reflect) Class.getEnclosingMethod problematic for some classes
  - S8007925: Improve cmsStageAllocLabV2ToV4curves
  - S8007926: Improve cmsPipelineDup
  - S8007927: Improve cmsAllocProfileSequenceDescription
  - S8007929: Improve CurvesAlloc
  - S8008120, CVE-2013-2457: Improve JMX class checking
  - S8008124, CVE-2013-2453: Better compliance testing
  - S8008128: Better API coherence for JMX
  - S8008132, CVE-2013-2456: Better serialization support
  - S8008585: Better JMX data handling
  - S8008593: Better URLClassLoader resource management
  - S8008603: Improve provision of JMX providers
  - S8008607: Better input checking in JMX
  - S8008611: Better handling of annotations in JMX
  - S8008615: Improve robustness of JMX internal APIs
  - S8008623: Better handling of MBeanServers
  - S8008744, CVE-2013-2407: Rework part of fix for JDK-6741606
  - S8008982: Adjust JMX for underlying interface changes
  - S8009004: Better implementation of RMI connections
  - S8009008: Better manage management-api
  - S8009013: Better handling of T2K glyphs
  - S8009034: Improve resulting notifications in JMX
  - S8009038: Improve JMX notification support
  - S8009057, CVE-2013-2448: Improve MIDI event handling
  - S8009067: Improve storing keys in KeyStore
  - S8009071, CVE-2013-2459: Improve shape handling
  - S8009235: Improve handling of TSA data
  - S8009424, CVE-2013-2458: Adapt Nashorn to JSR-292 implementation change
  - S8009554, CVE-2013-2454: Improve SerialJavaObject.getFields
  - S8009654: Improve stability of cmsnamed
  - S8010209, CVE-2013-2460: Better provision of factories
  - S8011243, CVE-2013-2470: Improve ImagingLib
  - S8011248, CVE-2013-2471: Better Component Rasters
  - S8011253, CVE-2013-2472: Better Short Component Rasters
  - S8011257, CVE-2013-2473: Better Byte Component Rasters
  - S8012375, CVE-2013-1571: Improve Javadoc framing
  - S8012421: Better positioning of PairPositioning
  - S8012438, CVE-2013-2463: Better image validation
  - S8012597, CVE-2013-2465: Better image channel verification
  - S8012601, CVE-2013-2469: Better validation of image layouts
  - S8014281, CVE-2013-2461: Better checking of XML signature
  - S8015997: Additional improvement in Javadoc framing
* Bug fixes
  - S7053526: Upgrade JDK 8 to use Little CMS 2.4
  - S7124347: [macosx] java.lang.InternalError: not implemented yet on call Graphics2D.drawRenderedImage
  - S7142091: [macosx] RFE: Refactoring of peer initialization/disposing
  - S7142596: RMI JPRT tests are failing
  - S7150345: [macosx] Can't type into applets
  - S7151434, RH969884: java -jar -XX crashes java launcher
  - S7156191: [macosx] Can't type into applet demos in Pivot
  - S7156194: [macosx] Can't type non-ASCII characters into applets
  - S7171223: Building ExtensionSubtables.cpp should use -fno-strict-aliasing
  - S7174718: [macosx] Regression in 7u6 b12: PopupFactory leaks DefaultFrames.
  - S7188114: (launcher) need an alternate command line parser for Windows
  - S7195301: XML Signature DOM implementation should not use instanceof to determine type of Node
  - S7198570: (tz) Support tzdata2012f
  - S7199143: RFE: OCSP revocation checker should provide possibility to specify connection timeout
  - S8001161: mac: EmbeddedFrame doesn't become active window
  - S8002070: Remove the stack search for a resource bundle for Logger to use
  - S8002225: (tz) Support tzdata2012i
  - S8005932: Java 7 on mac os x only provides text clipboard formats
  - S8006120: Provide "Server JRE" for 7u train
  - S8006417: JComboBox.showPopup(), hidePopup() fails in JRE 1.7 on OS X
  - S8006536: [launcher]  removes trailing slashes on arguments
  - S8009165: Fix for 8006435 needs revision
  - S8009217: REGRESSION: test com/sun/org/apache/xml/internal/security/transforms/ClassLoaderTest.java fails to compile since 7u21b03
  - S8009463: Regression test test\java\lang\Runtime\exec\ArgWithSpaceAndFinalBackslash.java failing.
  - S8009610: Blacklist certificate used with malware.
  - S8009987: (tz) Support tzdata2013b
  - S8009996: tests javax/management/mxbean/MiscTest.java and javax/management/mxbean/StandardMBeanOverrideTest.java fail
  - S8010009: [macosx] Unable type into online word games on MacOSX
  - S8010118: Annotate jdk caller sensitive methods with @sun.reflect.CallerSensitive
  - S8010213: Some api/javax_net/SocketFactory tests fail in 7u25 nightly build
  - S8010714: XML DSig API allows a RetrievalMethod to reference another RetrievalMethod
  - S8010727: WLS fails to add a logger with "" in its own LogManager subclass instance
  - S8010939: Deadlock in LogManager
  - S8011139: (reflect) Revise checking in getEnclosingClass
  - S8011154: java/awt/Frame/ShapeNotSetSometimes/ShapeNotSetSometimes.java failed since 7u25b03 on windows
  - S8011313: OCSP timeout set to wrong value if com.sun.security.ocsp.timeout not defined
  - S8011557: Improve reflection utility classes
  - S8011806: 7u25-b05 hotspot fastdebug build failure
  - S8011990: TEST_BUG: java/util/logging/bundlesearch/ResourceBundleSearchTest.java fails on Windows
  - S8011992: java/awt/image/mlib/MlibOpsTest.java failed since jdk7u25b05
  - S8012112: java/awt/image/mlib/MlibOpsTest.java fails on sparc solaris
  - S8012243: about 30% regression on specjvm2008.serial on 7u25 comparing 7u21
  - S8012330: [macosx] Sometimes the applet showing the modal dialog itself loses the ability to gain focus
  - S8012453: (process) Runtime.exec(String) fails if command contains spaces [win]
  - S8012617: ArrayIndexOutOfBoundsException with some fonts using LineBreakMeasurer
  - S8012933: Test closed/java/awt/Dialog/DialogAnotherThread/JaWSTest.java fails since jdk 7u25 b07
  - S8013196: TimeZone.getDefault() throws NPE due to sun.awt.AppContext.getAppContext()
  - S8013228: Create new system properties to control allowable OCSP clock skew and CRL connection timeout
  - S8013380: Removal of stack walk to find resource bundle breaks Glassfish startup
  - S8014205: Most of the Swing dialogs are blank on one win7 MUI
  - S8014423: [macosx] The scrollbar's block increment performs incorrectly
  - S8014427: REGRESSION: closed/javax/imageio/plugins/bmp/Write3ByteBgrTest.java fails since 7u25 b09
  - S8014618, RH868136: Need to strip leading zeros in TlsPremasterSecret of DHKeyAgreement
  - S8014676: Java debugger may fail to run
  - S8014718: Netbeans IDE begins to throw a lot exceptions since 7u25 b10
  - S8014745: Provide a switch to allow stack walk search of resource bundle
  - S8014968: OCSP and CRL connection timeout is set to four hours by default

New in release 2.1.9 (2013-06-29):

* New features
  - PR1378: Add AArch64 support to Zero
* Security fixes
  - S6741606, CVE-2013-2407: Integrate Apache Santuario
  - S7158805, CVE-2013-2445: Better rewriting of nested subroutine calls
  - S7170730, CVE-2013-2451: Improve Windows network stack support.
  - S8000638, CVE-2013-2450: Improve deserialization
  - S8000642, CVE-2013-2446: Better handling of objects for transportation
  - S8001032: Restrict object access
  - S8001033, CVE-2013-2452: Refactor network address handling in virtual machine identifiers
  - S8001034, CVE-2013-1500: Memory management improvements
  - S8001038, CVE-2013-2444: Resourcefully handle resources
  - S8001043: Clarify definition restrictions
  - S8001308: Update display of applet windows
  - S8001309: Better handling of annotation interfaces
  - S8001318, CVE-2013-2447: Socket.getLocalAddress not consistent with InetAddress.getLocalHost
  - S8003703, CVE-2013-2412: Update RMI connection dialog box
  - S8004288, CVE-2013-2449: (fs) Files.probeContentType problems
  - S8004584: Augment applet contextualization
  - S8005007: Better glyph processing
  - S8006328, CVE-2013-2448: Improve robustness of sound classes
  - S8006611: Improve scripting
  - S8007467: Improve robustness of JMX internal APIs
  - S8007471: Improve MBean notifications
  - S8007812, CVE-2013-2455: (reflect) Class.getEnclosingMethod problematic for some classes
  - S8007925: Improve cmsStageAllocLabV2ToV4curves
  - S8007926: Improve cmsPipelineDup
  - S8007927: Improve cmsAllocProfileSequenceDescription
  - S8007929: Improve CurvesAlloc
  - S8008120, CVE-2013-2457: Improve JMX class checking
  - S8008124, CVE-2013-2453: Better compliance testing
  - S8008128: Better API coherence for JMX
  - S8008132, CVE-2013-2456: Better serialization support
  - S8008585: Better JMX data handling
  - S8008593: Better URLClassLoader resource management
  - S8008603: Improve provision of JMX providers
  - S8008607: Better input checking in JMX
  - S8008611: Better handling of annotations in JMX
  - S8008615: Improve robustness of JMX internal APIs
  - S8008623: Better handling of MBeanServers
  - S8008744, CVE-2013-2407: Rework part of fix for JDK-6741606
  - S8008982: Adjust JMX for underlying interface changes
  - S8009004: Better implementation of RMI connections
  - S8009008: Better manage management-api
  - S8009013: Better handling of T2K glyphs
  - S8009034: Improve resulting notifications in JMX
  - S8009038: Improve JMX notification support
  - S8009057, CVE-2013-2448: Improve MIDI event handling
  - S8009067: Improve storing keys in KeyStore
  - S8009071, CVE-2013-2459: Improve shape handling
  - S8009235: Improve handling of TSA data
  - S8009424, CVE-2013-2458: Adapt Nashorn to JSR-292 implementation change
  - S8009554, CVE-2013-2454: Improve SerialJavaObject.getFields
  - S8009654: Improve stability of cmsnamed
  - S8010209, CVE-2013-2460: Better provision of factories
  - S8011243, CVE-2013-2470: Improve ImagingLib
  - S8011248, CVE-2013-2471: Better Component Rasters
  - S8011253, CVE-2013-2472: Better Short Component Rasters
  - S8011257, CVE-2013-2473: Better Byte Component Rasters
  - S8012375, CVE-2013-1571: Improve Javadoc framing
  - S8012421: Better positioning of PairPositioning
  - S8012438, CVE-2013-2463: Better image validation
  - S8012597, CVE-2013-2465: Better image channel verification
  - S8012601, CVE-2013-2469: Better validation of image layouts
  - S8014281, CVE-2013-2461: Better checking of XML signature
  - S8015997: Additional improvement in Javadoc framing
* Backports
  - S7171223, RH967436: Building ExtensionSubtables.cpp should use -fno-strict-aliasing
  - S7053526: Upgrade JDK 8 to use Little CMS 2.4
  - S7077803: java.lang.InternalError in java.lang.invoke.MethodHandleNatives.init
  - S7124347: [macosx] java.lang.InternalError: not implemented yet on call Graphics2D.drawRenderedImage
  - S7142596: RMI JPRT tests are failing
  - S7151434, RH969884: java -jar -XX crashes java launcher
  - S7158483: (tz) Support tzdata2012c
  - S7188114: (launcher) need an alternate command line parser for Windows
  - S7195301: XML Signature DOM implementation should not use instanceof to determine type of Node
  - S7198570: (tz) Support tzdata2012f
  - S7199143: RFE: OCSP revocation checker should provide possibility to specify connection timeout
  - S8002070: Remove the stack search for a resource bundle for Logger to use
  - S8002225: (tz) Support tzdata2012i
  - S8006120: Provide "Server JRE" for 7u train
  - S8006536: [launcher]  removes trailing slashes on arguments
  - S8009165: Fix for 8006435 needs revision
  - S8009217: REGRESSION: test com/sun/org/apache/xml/internal/security/transforms/ClassLoaderTest.java fails to compile since 7u21b03
  - S8009463: Regression test test\java\lang\Runtime\exec\ArgWithSpaceAndFinalBackslash.java failing.
  - S8009610: Blacklist certificate used with malware.
  - S8009987: (tz) Support tzdata2013b
  - S8009996: tests javax/management/mxbean/MiscTest.java and javax/management/mxbean/StandardMBeanOverrideTest.java fail
  - S8010118: Annotate jdk caller sensitive methods with @sun.reflect.CallerSensitive
  - S8010213: Some api/javax_net/SocketFactory tests fail in 7u25 nightly build
  - S8010714: XML DSig API allows a RetrievalMethod to reference another RetrievalMethod
  - S8010727: WLS fails to add a logger with "" in its own LogManager subclass instance
  - S8010939: Deadlock in LogManager
  - S8011139: (reflect) Revise checking in getEnclosingClass
  - S8011154: java/awt/Frame/ShapeNotSetSometimes/ShapeNotSetSometimes.java failed since 7u25b03 on windows
  - S8011313: OCSP timeout set to wrong value if com.sun.security.ocsp.timeout not defined
  - S8011557: Improve reflection utility classes
  - S8011806: 7u25-b05 hotspot fastdebug build failure
  - S8011990: TEST_BUG: java/util/logging/bundlesearch/ResourceBundleSearchTest.java fails on Windows
  - S8011992: java/awt/image/mlib/MlibOpsTest.java failed since jdk7u25b05
  - S8012112: java/awt/image/mlib/MlibOpsTest.java fails on sparc solaris
  - S8012243: about 30% regression on specjvm2008.serial on 7u25 comparing 7u21
  - S8012453: (process) Runtime.exec(String) fails if command contains spaces [win]
  - S8012617: ArrayIndexOutOfBoundsException with some fonts using LineBreakMeasurer
  - S8012933: Test closed/java/awt/Dialog/DialogAnotherThread/JaWSTest.java fails since jdk 7u25 b07
  - S8013196: TimeZone.getDefault() throws NPE due to sun.awt.AppContext.getAppContext()
  - S8013228: Create new system properties to control allowable OCSP clock skew and CRL connection timeout
  - S8013380: Removal of stack walk to find resource bundle breaks Glassfish startup
  - S8014205: Most of the Swing dialogs are blank on one win7 MUI
  - S8014427: REGRESSION: closed/javax/imageio/plugins/bmp/Write3ByteBgrTest.java fails since 7u25 b09
  - S8014618, RH868136: Need to strip leading zeros in TlsPremasterSecret of DHKeyAgreement
  - S8014676: Java debugger may fail to run
  - S8014718: Netbeans IDE begins to throw a lot exceptions since 7u25 b10
  - S8014745: Provide a switch to allow stack walk search of resource bundle
  - S8014968: OCSP and CRL connection timeout is set to four hours by default
* Bug fixes
  - PR1095, PR1409: Allow -Werror to be turned off (HotSpot repository only).
  - PR1188: ASM Interpreter and Thumb2 JIT javac miscompile modulo reminder on armel

New in release 2.3.10 (2013-06-28):

* Security fixes
  - S6741606, CVE-2013-2407: Integrate Apache Santuario
  - S7158805, CVE-2013-2445: Better rewriting of nested subroutine calls
  - S7170730, CVE-2013-2451: Improve Windows network stack support.
  - S8000638, CVE-2013-2450: Improve deserialization
  - S8000642, CVE-2013-2446: Better handling of objects for transportation
  - S8001032: Restrict object access
  - S8001033, CVE-2013-2452: Refactor network address handling in virtual machine identifiers
  - S8001034, CVE-2013-1500: Memory management improvements
  - S8001038, CVE-2013-2444: Resourcefully handle resources
  - S8001043: Clarify definition restrictions
  - S8001308: Update display of applet windows
  - S8001309: Better handling of annotation interfaces
  - S8001318, CVE-2013-2447: Socket.getLocalAddress not consistent with InetAddress.getLocalHost
  - S8001330, CVE-2013-2443: Improve on checking order (non-Zero builds only)
  - S8003703, CVE-2013-2412: Update RMI connection dialog box
  - S8004288, CVE-2013-2449: (fs) Files.probeContentType problems
  - S8004584: Augment applet contextualization
  - S8005007: Better glyph processing
  - S8006328, CVE-2013-2448: Improve robustness of sound classes
  - S8006611: Improve scripting
  - S8007467: Improve robustness of JMX internal APIs
  - S8007471: Improve MBean notifications
  - S8007812, CVE-2013-2455: (reflect) Class.getEnclosingMethod problematic for some classes
  - S8007925: Improve cmsStageAllocLabV2ToV4curves
  - S8007926: Improve cmsPipelineDup
  - S8007927: Improve cmsAllocProfileSequenceDescription
  - S8007929: Improve CurvesAlloc
  - S8008120, CVE-2013-2457: Improve JMX class checking
  - S8008124, CVE-2013-2453: Better compliance testing
  - S8008128: Better API coherence for JMX
  - S8008132, CVE-2013-2456: Better serialization support
  - S8008585: Better JMX data handling
  - S8008593: Better URLClassLoader resource management
  - S8008603: Improve provision of JMX providers
  - S8008607: Better input checking in JMX
  - S8008611: Better handling of annotations in JMX
  - S8008615: Improve robustness of JMX internal APIs
  - S8008623: Better handling of MBeanServers
  - S8008744, CVE-2013-2407: Rework part of fix for JDK-6741606
  - S8008982: Adjust JMX for underlying interface changes
  - S8009004: Better implementation of RMI connections
  - S8009008: Better manage management-api
  - S8009013: Better handling of T2K glyphs
  - S8009034: Improve resulting notifications in JMX
  - S8009038: Improve JMX notification support
  - S8009057, CVE-2013-2448: Improve MIDI event handling
  - S8009067: Improve storing keys in KeyStore
  - S8009071, CVE-2013-2459: Improve shape handling
  - S8009235: Improve handling of TSA data
  - S8009424, CVE-2013-2458: Adapt Nashorn to JSR-292 implementation change
  - S8009554, CVE-2013-2454: Improve SerialJavaObject.getFields
  - S8009654: Improve stability of cmsnamed
  - S8010209, CVE-2013-2460: Better provision of factories
  - S8011243, CVE-2013-2470: Improve ImagingLib
  - S8011248, CVE-2013-2471: Better Component Rasters
  - S8011253, CVE-2013-2472: Better Short Component Rasters
  - S8011257, CVE-2013-2473: Better Byte Component Rasters
  - S8012375, CVE-2013-1571: Improve Javadoc framing
  - S8012421: Better positioning of PairPositioning
  - S8012438, CVE-2013-2463: Better image validation
  - S8012597, CVE-2013-2465: Better image channel verification
  - S8012601, CVE-2013-2469: Better validation of image layouts
  - S8014281, CVE-2013-2461: Better checking of XML signature
  - S8015997: Additional improvement in Javadoc framing
* New features
  - PR1378: Add AArch64 support to Zero
* Bug fixes
  - PR1409: IcedTea 2.3.9 fails to build Zero due to -Werror
  - PR1410: Icedtea 2.3.9 fails to build using icedtea 1.12.4
* Backports
  - S6720349: (ch) Channels tests depending on hosts inside Sun
  - S6736316: Timeout value in java/util/concurrent/locks/Lock/FlakyMutex.java is insufficient
  - S6776144: java/lang/ThreadGroup/NullThreadName.java fails with Thread group is not destroyed ,fastdebug LINUX
  - S6818464: TEST_BUG: java/util/Timer/KillThread.java failing intermittently
  - S6860309: TEST_BUG: Insufficient sleep time in java/lang/Runtime/exec/StreamsSurviveDestroy.java
  - S6948101: java/rmi/transport/pinLastArguments/PinLastArguments.java failing intermittently
  - S6957683: test/java/util/concurrent/ThreadPoolExecutor/Custom.java failing
  - S6963102: Testcase failures sun/tools/jstatd/jstatdExternalRegistry.sh and sun/tools/jstatd/jstatdDefaults.sh
  - S6963841: java/util/concurrent/Phaser/Basic.java fails intermittently
  - S6965150: TEST_BUG: java/nio/channels/AsynchronousSocketChannel/Basic.java takes too long
  - S7030573: test/java/io/FileInputStream/LargeFileAvailable.java fails when there is insufficient disk space
  - S7032247: java/net/InetAddress/GetLocalHostWithSM.java fails if hostname resolves to loopback address
  - S7044870: java/nio/channels/DatagramChannel/SelectWhenRefused.java failed on SUSE Linux 10
  - S7053526: Upgrade JDK 8 to use Little CMS 2.4
  - S7054918: jdk_security1 test target cleanup
  - S7055362: jdk_security2 test target cleanup
  - S7055363: jdk_security3 test target cleanup
  - S7072120: No mac os x support in several regression tests
  - S7073295: TEST_BUG: test/java/lang/instrument/ManifestTest.sh causing havoc (win)
  - S7076756: TEST_BUG: com/sun/jdi/BreakpointWithFullGC.sh fails to cleanup in Cygwin
  - S7076791: closed/javax/swing/JColorChooser/Test6827032.java failed on windows
  - S7077259: [TEST_BUG] [macosx] Test work correctly only when default L&F is Metal
  - S7084033: TEST_BUG: test/java/lang/ThreadGroup/Stop.java fails intermittently
  - S7089131: test/java/lang/invoke/InvokeGenericTest.java does not compile
  - S7102106: TEST_BUG: sun/security/util/Oid/S11N.sh should be modified
  - S7104161: test/sun/tools/jinfo/Basic.sh fails on Ubuntu
  - S7104594: [macosx] Test closed/javax/swing/JFrame/4962534/bug4962534 expects Metal L&F by default
  - S7105929: java/util/concurrent/FutureTask/BlockingTaskExecutor.java fails on solaris sparc
  - S7124347: [macosx] "java.lang.InternalError: not implemented yet" on call Graphics2D.drawRenderedImage
  - S7129800: [macosx] Regression test OverrideRedirectWindowActivationTest fails due to timing issue
  - S7132247: java/rmi/registry/readTest/readTest.sh failing with Cygwin
  - S7140868: TEST_BUG: jcmd tests need to use -XX:+UsePerfData
  - S7142596: RMI JPRT tests are failing
  - S7144833: sun/tools/jcmd/jcmd-Defaults.sh failing intermittently
  - S7144861: speed up RMI activation tests
  - S7147408: [macosx] Add autodelay to fix a regression test
  - S7151434, RH969884: java -jar -XX crashes java launcher
  - S7152183: TEST_BUG: java/lang/ProcessBuilder/Basic.java failing intermittently [sol]
  - S7152796: TEST_BUG: java/net/Socks/SocksV4Test.java does not terminate
  - S7152856: TEST_BUG: sun/net/www/protocol/jar/B4957695.java failing on Windows
  - S7154113: jcmd, jps and jstat tests failing when there are unknown Java processes on the system
  - S7154114: jstat tests failing on non-english locales
  - S7161759: TEST_BUG: java/awt/Frame/WindowDragTest/WindowDragTest.java fails to compile, should be modified
  - S7162111: TEST_BUG: change tests run in headless mode [macosx]
  - S7162385: TEST_BUG: sun/net/www/protocol/jar/B4957695.java failing again
  - S7175775: Disable SA options in jinfo/Basic.java test until SA updated for new hash and String count/offset
  - S7178649: TEST BUG: BadKdc3.java needs improvement to ignore the unlikely but possible timeout
  - S7183203: ShortRSAKeynnn.sh tests intermittent failure
  - S7183753: [TEST] Some colon in the diff for this test
  - S7184943: fix failing test com/sun/jndi/rmi/registry/RegistryContext/UnbindIdempotent.java
  - S7184946: fix failing test com/sun/jndi/rmi/registry/RegistryContext/ContextWithNullProperties.java
  - S7185340: TEST_BUG: java/nio/channels/AsynchronousSocketChannel/Leaky.java failing intermittently [win]
  - S7186111: fix bugs in java/rmi/activation/ActivationSystem/unregisterGroup/UnregisterGroup
  - S7187882: TEST_BUG: java/rmi/activation/checkusage/CheckUsage.java fails intermittently
  - S7193219: JComboBox serialization fails in JDK 1.7
  - S7194032: update tests for upcoming changes for jtreg
  - S7194035: update tests for upcoming changes for jtreg
  - S7199143: RFE: OCSP revocation checker should provide possibility to specify connection timeout
  - S7199637: TEST_BUG: add serialization tests to jdk7u problem list for macosx
  - S8000817: Reinstate accidentally removed sleep() from ProcessBuilder/Basic.java
  - S8001161: mac: EmbeddedFrame doesn't become active window
  - S8001621: Update awk scripts that check output from jps/jcmd
  - S8002070: Remove the stack search for a resource bundle for Logger to use
  - S8002297: sun/net/www/protocol/http/StackTraceTest.java fails intermittently
  - S8002313: TEST_BUG : jdk/test/java/security/Security/ClassLoaderDeadlock/ClassLoaderDeadlock.java should run in headless mode
  - S8003597: TEST_BUG: Eliminate dependency on javaweb from closed net tests
  - S8003982: new test javax/swing/AncestorNotifier/7193219/bug7193219.java failed on macosx
  - S8004317: TestLibrary.getUnusedRandomPort() fails intermittently, but exception not reported
  - S8004748: clean up @build tags in RMI tests
  - S8004925: java/net/Socks/SocksV4Test.java failing on all platforms
  - S8005290: remove -showversion from RMI test library subprocess mechanism
  - S8005556: java/net/Socks/SocksV4Test.java is missing @run tag
  - S8005646: TEST_BUG: java/rmi/activation/ActivationSystem/unregisterGroup/UnregisterGroup leaves process running
  - S8005920: After pressing combination Windows Key and M key, the frame, the instruction and the dialog can't be minimized.
  - S8005932: Java 7 on mac os x only provides text clipboard formats
  - S8006120: Provide "Server JRE" for 7u train
  - S8006417: JComboBox.showPopup(), hidePopup() fails in JRE 1.7 on OS X
  - S8006534: CLONE - TestLibrary.getUnusedRandomPort() fails intermittently-doesn't retry enough times
  - S8006536: [launcher]  removes trailing slashes on arguments
  - S8006560: java/net/ipv6tests/B6521014.java fails intermittently
  - S8006564: Test sun/security/util/Oid/S11N.sh fails with timeout on Linux 32-bit
  - S8006669: sun/security/ssl/sun/net/www/protocol/https/HttpsURLConnection/PostThruProxy.sh fails on mac
  - S8007515: TEST_BUG: update ProblemList.txt and TEST.ROOT in jdk7u-dev to match jdk8
  - S8007699: Move some tests from test/sun/security/provider/certpath/X509CertPath to closed repo
  - S8008223: java/net/BindException/Test.java fails rarely
  - S8008249: Sync ICU into JDK :
  - S8008379: TEST_BUG: Fail automatically with java.lang.NullPointerException.
  - S8008815: [TEST_BUG] Add back tests to the Problemlist files post the jdk7u -> 7u-cpu test sync up
  - S8009165: Fix for 8008817 needs revision
  - S8009217: REGRESSION: test com/sun/org/apache/xml/internal/security/transforms/ClassLoaderTest.java fails to compile since 7u21b03
  - S8009463: Regression test test\java\lang\Runtime\exec\ArgWithSpaceAndFinalBackslash.java failing.
  - S8009530: ICU Kern table support broken
  - S8009610: Blacklist certificate used with malware.
  - S8009634: TEST_BUG: sun/misc/Version/Version.java handle 2 digit minor in VM version
  - S8009750: javax/xml/crypto/dsig/SecurityManager/XMLDSigWithSecMgr.java should run in other vm mode
  - S8009987: (tz) Support tzdata2013b
  - S8009996: tests javax/management/mxbean/MiscTest.java and javax/management/mxbean/StandardMBeanOverrideTest.java fail
  - S8009999: Test sun/tools/jcmd/jcmd-f.sh failing after JDK-8008820
  - S8010009: [macosx] Unable type into online word games on MacOSX
  - S8010118: Annotate jdk caller sensitive methods with @sun.reflect.CallerSensitive
  - S8010166: TEST_BUG: fix for 8009634 overlooks possible version strings (sun/misc/Version/Version.java)
  - S8010213: Some api/javax_net/SocketFactory tests fail in 7u25 nightly build
  - S8010714: XML DSig API allows a RetrievalMethod to reference another RetrievalMethod
  - S8010727: WLS fails to add a logger with "" in its own LogManager subclass instance
  - S8010939: Deadlock in LogManager
  - S8011139: (reflect) Revise checking in getEnclosingClass
  - S8011154: java/awt/Frame/ShapeNotSetSometimes/ShapeNotSetSometimes.java failed since 7u25b03 on windows
  - S8011313: OCSP timeout set to wrong value if com.sun.security.ocsp.timeout not defined
  - S8011557: Improve reflection utility classes
  - S8011695: [tck-red] Application can not be run, the Security Warning dialog is gray.
  - S8011806: 7u25-b05 hotspot fastdebug build failure
  - S8011896: Add check for invalid offset for new AccessControlContext isAuthorized field
  - S8011990: TEST_BUG: java/util/logging/bundlesearch/ResourceBundleSearchTest.java fails on Windows
  - S8011992: java/awt/image/mlib/MlibOpsTest.java failed since jdk7u25b05
  - S8012112: java/awt/image/mlib/MlibOpsTest.java fails on sparc solaris
  - S8012243: about 30% regression on specjvm2008.serial on 7u25 comparing 7u21
  - S8012330: [macosx] Sometimes the applet showing the modal dialog itself loses the ability to gain focus
  - S8012453: (process) Runtime.exec(String) fails if command contains spaces [win]
  - S8012617: ArrayIndexOutOfBoundsException with some fonts using LineBreakMeasurer
  - S8012933: Test closed/java/awt/Dialog/DialogAnotherThread/JaWSTest.java fails since jdk 7u25 b07
  - S8013196: TimeZone.getDefault() throws NPE due to sun.awt.AppContext.getAppContext()
  - S8013228: Create new system properties to control allowable OCSP clock skew and CRL connection timeout
  - S8013380: Removal of stack walk to find resource bundle breaks Glassfish startup
  - S8014205: Most of the Swing dialogs are blank on one win7 MUI
  - S8014423: [macosx] The scrollbar's block increment performs incorrectly
  - S8014427: REGRESSION: closed/javax/imageio/plugins/bmp/Write3ByteBgrTest.java fails since 7u25 b09
  - S8014618, RH868136: Need to strip leading zeros in TlsPremasterSecret of DHKeyAgreement
  - S8014676: Java debugger may fail to run
  - S8014718: Netbeans IDE begins to throw a lot exceptions since 7u25 b10
  - S8014745: Provide a switch to allow stack walk search of resource bundle
  - S8014968: OCSP and CRL connection timeout is set to four hours by default

New in release 2.4.0 (2013-06-09):

OpenJDK
  - PR1209, S7170638: Use DTRACE_PROBE[N] in JNI Set and SetStatic Field.
  - PR1206, S7201205: Add Makefile configuration option to build with unlimited crypto in OpenJDK
  - S2202276: Swing HTML parser can't properly decode codepoints outside the Unicode Plane 0 into a surrogate pair
  - S2223196: [macosx] Situation when KeyEventDispatcher doesn't work on AWT but does on Swing
  - S4310381: Text in multi-row/col JTabbedPane tabs can be truncated/clipped
  - S4631925: JColor Chooser is not fully accessible
  - S4988100: oop_verify_old_oop appears to be dead
  - S6183404: Many eudc characters are incorrectly mapped in MS936 and GBK converter
  - S6294277: java -Xdebug crashes on SourceDebugExtension attribute larger than 64K
  - S6310967: SA: jstack -m produce failures in output
  - S6340864: Implement vectorization optimizations in hotspot-server
  - S6444286: Possible naked oop related to biased locking revocation safepoint in jni_exit()
  - S6512101: Incorrect encoding in NetworkInterface.getDisplayName()
  - S6550588: java.awt.Desktop cannot open file with Windows UNC filename
  - S6610897: New constructor in sun.tools.java.ClassPath builds a path using File.separator instead of File.pathSeparator
  - S6625113: Add the normalize and rmkw perl script to the openjdk repository or openjdk site?
  - S6633549: (dc) Include-mode filtering of IPv6 sources does not block datagrams on Linux
  - S6658428: C2 doesn't inline java method if corresponding intrinsic failed to inline.
  - S6671481: NPE at javax.swing.plaf.basic.BasicTreeUI$Handler.handleSelection
  - S6677625: Move platform specific flags from globals.hpp to globals_<arch>.hpp
  - S6711908: JVM needs direct access to some annotations
  - S6720349: (ch) Channels tests depending on hosts inside Sun
  - S6736316: Timeout value in java/util/concurrent/locks/Lock/FlakyMutex.java is insufficient
  - S6776144: java/lang/ThreadGroup/NullThreadName.java fails with Thread group is not destroyed ,fastdebug LINUX
  - S6789984: JPasswordField can not receive keyboard input
  - S6818464: TEST_BUG: java/util/Timer/KillThread.java failing intermittently
  - S6818524: G1: use ergonomic resizing of PLABs
  - S6860309: TEST_BUG: Insufficient sleep time in java/lang/Runtime/exec/StreamsSurviveDestroy.java
  - S6871190: Don't terminate JVM if it is running in a non-interactive session
  - S6877495: JTextField and JTextArea does not support supplementary characters
  - S6910461: Register allocator may insert spill code at wrong insertion index
  - S6910464: Lookupswitch and Tableswitch default branches not recognized as safepoints
  - S6921087: G1: remove per-GC-thread expansion tables from the fine-grain remembered sets
  - S6924259: Remove String.count/String.offset
  - S6938583: Unexpected NullPointerException by InputContext.endComposition()
  - S6948101: java/rmi/transport/pinLastArguments/PinLastArguments.java failing intermittently
  - S6952814: sun/security/ssl/com/sun/net/ssl/internal/ssl/InputRecord/InterruptedIO.java failing in PIT
  - S6953455: CookieStore.add() cannot handle null URI parameter, contrary to the API
  - S6957683: test/java/util/concurrent/ThreadPoolExecutor/Custom.java failing
  - S6963102: Testcase failures sun/tools/jstatd/jstatdExternalRegistry.sh and sun/tools/jstatd/jstatdDefaults.sh
  - S6963841: java/util/concurrent/Phaser/Basic.java fails intermittently
  - S6965150: TEST_BUG: java/nio/channels/AsynchronousSocketChannel/Basic.java takes too long
  - S6983728: JSR 292 remove argument count limitations
  - S6983966: remove lzma and upx from repository JDK7u
  - S6984705: JSR 292 method handle creation should not go through JNI
  - S6988099: jvmti demos missing Publisher (COMPANY resource) in dlls/exes on windows
  - S6995781: Native Memory Tracking (Phase 1)
  - S6997116: The case automatically failed due to java.lang.ClassCastException.
  - S7017818: NLS: JConsoleResources.java cannot be handled by translation team
  - S7021010: java/lang/Thread/ThreadStateTest.java fails intermittently
  - S7023639: JSR 292 method handle invocation needs a fast path for compiled code
  - S7023898: Intrinsify AtomicLongFieldUpdater.getAndIncrement()
  - S7024118: possible hardcoded mnemonic for JFileChooser metal and motif l&f
  - S7025938: Add bitmap mime type to content-types.properties
  - S7030573: test/java/io/FileInputStream/LargeFileAvailable.java fails when there is insufficient disk space
  - S7032018: The file list in JFileChooser does not have an accessible name
  - S7032247: java/net/InetAddress/GetLocalHostWithSM.java fails if hostname resolves to loopback address
  - S7032436: When running with the Nimbus look and feel, the JFileChooser does not display mnemonics
  - S7041879: G1: introduce stress testing parameter to cause frequent evacuation failures
  - S7042126: (alt-rt) HashMap.clone implementation should be re-examined
  - S7044870: java/nio/channels/DatagramChannel/SelectWhenRefused.java failed on SUSE Linux 10
  - S7049024: DnD fails with JTextArea and JTextField
  - S7053586: TEST: runtime/7020373/Test7020373.sh fails on 64-bit platforms
  - S7054918: jdk_security1 test target cleanup
  - S7055065: NullPointerException when sorting JTable with empty cell
  - S7055362: jdk_security2 test target cleanup
  - S7055363: jdk_security3 test target cleanup
  - S7056731: Race condition in CORBA code causes re-use of ABORTed connections
  - S7057320: test/java/util/concurrent/Executors/AutoShutdown.java failing intermittently
  - S7058630: JSR 292 method handle proxy violates contract for Object methods
  - S7058651: JSR 292 unit tests need a refresh
  - S7063674: Wrong results from basic comparisons after calls to Long.bitCount(long)
  - S7068471: NPE in sun.font.FontConfigManager.getFontConfigFont() when libfontconfig.so is not installed
  - S7068625: Testing 8 bytes of card table entries at a time speeds up card-scanning
  - S7072120: No mac os x support in several regression tests
  - S7073295: TEST_BUG: test/java/lang/instrument/ManifestTest.sh causing havoc (win)
  - S7076756: TEST_BUG: com/sun/jdi/BreakpointWithFullGC.sh fails to cleanup in Cygwin
  - S7076791: closed/javax/swing/JColorChooser/Test6827032.java failed on windows
  - S7077259: [TEST_BUG] [macosx] Test work correctly only when default L&F is Metal
  - S7078386: NetworkInterface.getNetworkInterfaces() may return corrupted results on linux
  - S7081476: test/java/net/InetSocketAddress/B6469803.java failing intermittently
  - S7083664: TEST_BUG: test hard code of using c:/temp but this dir might not exist
  - S7084033: TEST_BUG: test/java/lang/ThreadGroup/Stop.java fails intermittently
  - S7084560: Crash in net.dll
  - S7087357: JSR 292: remove obsolete code after 7085860
  - S7087658: MethodHandles.Lookup.findVirtual is confused by interface methods that are multiply inherited
  - S7087969: GarbageCollectorMXBean notification contains ticks vs millis
  - S7089131: test/java/lang/invoke/InvokeGenericTest.java does not compile
  - S7089914: Focus on image icons are not visible in javaws cache with high contrast mode
  - S7092905: C2: Keep track of the number of dead nodes
  - S7093328: JVMTI: jvmtiPrimitiveFieldCallback always report 0's for static primitives
  - S7094176: (tz) Incorrect TimeZone display name when DST not applicable / disabled
  - S7100054: (porting) Native code should include fcntl.h and unistd.h rather than sys/fcntl.h and sys/unistd.h
  - S7102106: TEST_BUG: sun/security/util/Oid/S11N.sh should be modified
  - S7102300: performance warnings cause results diff failure in Test6890943
  - S7103665: HeapWord*ParallelScavengeHeap::failed_mem_allocate(unsigned long,bool)+0x97
  - S7103957: NegativeArraySizeException while initializing class IntegerCache
  - S7104161: test/sun/tools/jinfo/Basic.sh fails on Ubuntu
  - S7104209: Cleanup and remove librmi (native library)
  - S7104577: Changes for 7104209 cause many RMI tests to fail
  - S7104594: [macosx] Test closed/javax/swing/JFrame/4962534/bug4962534 expects Metal L&F by default
  - S7105640: Unix printing does not check the result of exec'd lpr/lp command
  - S7105929: java/util/concurrent/FutureTask/BlockingTaskExecutor.java fails on solaris sparc
  - S7107135: Stack guard pages are no more protected after loading a shared library with executable stack
  - S7107613: scalability blocker in javax.crypto.CryptoPermissions
  - S7107616: scalability blocker in javax.crypto.JceSecurityManager
  - S7107957: AWT: Native code should include fcntl.h and unistd.h rather than sys/fcntl.h and sys/unistd.h
  - S7109096: keytool -genkeypair needn't call -selfcert
  - S7109274: Restrict the use of certificates with RSA keys less than 1024 bits
  - S7109878: The instanceKlass EnclosingMethhod attribute fields can be folded into the _inner_class field.
  - S7110104: It should be possible to stop and start JMX Agent at runtime
  - S7110151: Use underlying platform's zlib library for Java zlib support
  - S7110720: Issue with vm config file loadingIssue with vm config file loading
  - S7113017: Use POSIX compliant include file headers in sun/awt/medialib/mlib_types.h
  - S7114678: G1: various small fixes, code cleanup, and refactoring
  - S7115070: (fs) lookupPrincipalByName/lookupPrincipalByGroupName should treat ESRCH as not found
  - S7116786: RFE: Detailed information on VerifyErrors
  - S7117167: Misc warnings in java.lang.invoke and sun.invoke.*
  - S7118280: The gbyc00102 JCK7 test causes an assert in JVM 7.0 fastdebug mode
  - S7118907: InetAddress.isReachable() should return false if sendto fails with EHOSTUNREACH
  - S7119644: Increase superword's vector size up to 256 bits
  - S7120481: storeStore barrier in constructor with final field
  - S7121314: Behavior mismatch between AbstractCollection.toArray(T[] ) and its spec
  - S7123170: JCK vm/jvmti/ResourceExhausted/resexh001/resexh00101/ tests fails since 7u4 b02
  - S7123767: Wrong tooltip location in Multi-Monitor configurations
  - S7123926: Some CTW test crash: !_control.contains(ctrl)
  - S7124209: [macosx] SpringLayout issue. BASELINE is not in the range: [NORTH, SOUTH]
  - S7124242: [macosx] Test doesn't work because of the frame round corners in the LaF
  - S7124244: [macosx] Shaped windows support
  - S7124347: [macosx] java.lang.InternalError: not implemented yet on call Graphics2D.drawRenderedImage
  - S7124375: [macosx] Focus isn't transfered as expected between components
  - S7124513: [macosx] Support NSTexturedBackgroundWindowMask/different titlebar styles to create unified toolbar
  - S7124525: [macosx] No animation on certain Swing components in Aqua LaF
  - S7127687: MethodType leaks memory due to interning
  - S7127697: G1: remove dead code after recent concurrent mark changes
  - S7127792: Add the ability to change an existing PeriodicTask's execution interval
  - S7128512: Javadoc typo in java.lang.invoke.MethodHandle
  - S7129029: (fs) Unix file system provider should be buildable on platforms that don't support O_NOFOLLOW
  - S7129034: VM crash with a field setter method with a filterArguments
  - S7129401: PPC: runtime/7100935/TestShortArraycopy.java fails
  - S7129715: MAC: SIGBUS in nsk stress test
  - S7129723: MAC: Some regression tests need to recognize Mac OS X platform
  - S7129724: MAC: Core file location is wrong in crash report
  - S7129742: Unable to view focus in Non-Editable TextArea
  - S7129800: [macosx] Regression test OverrideRedirectWindowActivationTest fails due to timing issue
  - S7130404: [macosx] "os.arch" value should be "x86_64" for compatibility with Apple JDK6
  - S7130915: File.equals does not give expected results when path contains Non-English characters on Mac OS X
  - S7130974: G1: Remove G1ParCopyHelper
  - S7131629: Generalize the CMS free list code
  - S7132070: Use a mach_port_t as the OSThread thread_id rather than pthread_t on BSD/OSX
  - S7132247: java/rmi/registry/readTest/readTest.sh failing with Cygwin
  - S7132385: [macosx] IconifyTest of RepaintManager could use some delay
  - S7132889: (se) AbstractSelectableChannel.register and configureBlocking not safe from asynchronous close
  - S7132924: (dc) DatagramChannel.disconnect throws SocketException with IPv4 socket and IPv6 enabled [macosx]
  - S7133111: libsaproc debug print should be printed as unsigned long to fit large numbers on 64bit platform
  - S7133857: exp() and pow() should use the x87 ISA on x86
  - S7140868: TEST_BUG: jcmd tests need to use -XX:+UsePerfData
  - S7141244: build-infra merge: Include $(SPEC) in makefiles and make variables overridable
  - S7141246: build-infra merge: Introduce new JVM_VARIANT* to control which kind of jvm gets built
  - S7142596: RMI JPRT tests are failing
  - S7142641: -Xshared:on fails on ARM
  - S7143490: G1: Remove HeapRegion::_top_at_conc_mark_count
  - S7143511: G1: Another instance of high GC Worker Other time (50ms)
  - S7143858: G1: Back to back young GCs with the second GC having a minimally sized eden
  - S7144328: Improper commandlines for -XX:+-UnlockCommercialFeatures require proper warning/error messages
  - S7144833: sun/tools/jcmd/jcmd-Defaults.sh failing intermittently
  - S7144861: speed up RMI activation tests
  - S7145024: Crashes in ucrypto related to C2
  - S7145358: SA throws ClassCastException for partially loaded ConstantPool
  - S7145441: G1: collection set chooser-related cleanup
  - S7146246: G1: expose some of the -XX flags that drive which old regions to collect during mixed GCs
  - S7146424: Wildcard expansion for single entry classpath
  - S7146442: assert(false) failed: bad AD file
  - S7146506: (fc) Add EACCES check to the return of fcntl native method
  - S7146572: enableInputMethod(false) does not work in the TextArea and TextField on the linux platform
  - S7146636: compiler/6865265/StackOverflowBug.java fails due to changed stack minimum
  - S7146700: new hotspot build - hs24-b01
  - S7146763: Warnings cleanup in the sun.rmi and related packages
  - S7147064: assert(allocates2(pc)) failed: not in CodeBuffer memory: 0xffffffff778d9d60 <= 0xffffffff778da69c
  - S7147075: JTextField doesn't get focus or loses focus forever
  - S7147408: [macosx] Add autodelay to fix a regression test
  - S7147416: LogCompilation tool does not work with post parse inlining
  - S7147464: Java crashed while executing method with over 8k of dneg operations
  - S7147724: G1: hang in SurrogateLockerThread::manipulatePLL
  - S7147740: add assertions to check stack alignment on VM entry from generated code (x64)
  - S7147744: CTW: assert(false) failed: infinite EA connection graph build
  - S7147806: G1: Crash in vm bootstrap when running with -XX:+UseG1GC -XX:-UsePerfData
  - S7148109: C2 compiler consumes too much heap resources
  - S7148126: ConstantPoolCacheEntry::print prints to wrong stream
  - S7148152: Add whitebox testing API to HotSpot
  - S7148486: At a method handle call returning with an exception may call the runtime with misaligned stack (x64)
  - S7148488: Whitebox tests for the Diagnostic Framework Parser
  - S7148664: new hotspot build - hs24-b02
  - S7149068: java/awt/Window/Grab/GrabTest.java failed
  - S7150046: SIGILL on sparcv9 fastdebug
  - S7150051: incorrect oopmap in critical native
  - S7150058: Allocate symbols from null boot loader to an arena for NMT
  - S7150327: new hotspot build - hs24-b03
  - S7150390: JFR test crashed on assert(_jni_lock_count == count) failed: must be equal
  - S7150454: add release jdk7u4 to jprt.properties
  - S7150594: VM chash in JCK api/java_awt/Image/ConvolveOp/ tests for 64 bit jdk8 on linux.
  - S7150899: remove unused build.targets lines from jprt.properties
  - S7151089: PS NUMA: NUMA allocator should not attempt to free pages when using SHM large pages
  - S7151348: Build breaks due to warning clean up in sun.rmi.*(7146763)
  - S7151427: Fix the potential memory leak in error handling code in X11SurfaceData.c
  - S7151434, RH969884: java -jar -XX crashes java launcher
  - S7151532: DCmd for hotspot native memory tracking
  - S7152007: Fix warnings in sun/rmi/rmic
  - S7152031: Hotspot needs updated xawt path [macosx]
  - S7152121: Krb5LoginModule no longer handles keyTabNames with "file:" prefix
  - S7152183: TEST_BUG: java/lang/ProcessBuilder/Basic.java failing intermittently [sol]
  - S7152206: anti-delta the fix for 7152031
  - S7152519: Dependency on non-POSIX header file <link.h> causes portability problem
  - S7152700: new hotspot build - hs24-b04
  - S7152791: wbapi tests fail on cygwin
  - S7152796: TEST_BUG: java/net/Socks/SocksV4Test.java does not terminate
  - S7152800: All tests using the attach API fail with "well-known file is not secure" on Mac OS X
  - S7152811: Issues in client compiler
  - S7152856: TEST_BUG: sun/net/www/protocol/jar/B4957695.java failing on Windows
  - S7152948: DatagramDispatcher.c should memset msghdr to make it portable to other platforms
  - S7152954: G1: Native memory leak during full GCs
  - S7152955: print_method crashes with null root
  - S7152957: VM crashes with assert(false) failed: bad AD file
  - S7152961: InlineTree::should_not_inline may exit prematurely
  - S7153339: InternalError when drawLine with Xor and Antialiasing
  - S7153343: Dependency on non-POSIX header file <link.h> causes portability problem
  - S7153374: ARM ONLY .. linking problem with new compilers.. Need to use -fPIC
  - S7153702: [TEST_BUG] [macosx] Synchronization problem in test javax/swing/JPopupMenu/6827786/bug6827786.java
  - S7154030: java.awt.Component.hide() does not repaint parent component
  - S7154114: jstat tests failing on non-english locales
  - S7154333: JVM fails to start if -XX:+AggressiveHeap is set
  - S7154517: Build error in hotspot-gc without precompiled headers
  - S7154638: Change download.oracle.com to docs.oracle.com in jdk/make/docs/Makefile
  - S7154641: Servicability agent should work on platforms other than x86, sparc
  - S7154670: The instanceKlass _implementors[] and _nof_implementors are not needed for non-interface klass.
  - S7154706: new hotspot build - hs23-b05
  - S7154724: jdk7u4 test properties missing from jprt.properties
  - S7154778: [macosx] NSView-based implementation of sun.awt.EmbeddedFrame
  - S7154997: assert(false) failed: not G1 barrier raw StoreP
  - S7155168: java/util/TimeZone/Bug6912560.java: expected Asia/Tokyo
  - S7155298: Editable TextArea/TextField are blocking GUI applications from exit
  - S7155300: Include pthread.h on all POSIX platforms except Solaris to improve portability
  - S7155453: [macosx] re-enable jbb tests in JPRT
  - S7155887: ComboBox does not display focus outline in GTK L&F
  - S7156659: new hotspot build - hs24-b06
  - S7156729: PPC: R_PPC_REL24 relocation error related to some libraries built without -fPIC
  - S7156764: Remove unused size parameter from some CollectedHeap methods
  - S7156873: (zipfs) FileSystems.newFileSystem(uri, env) fails for uri with escaped octets
  - S7156960: Incorrect copyright headers in parts of the Serviceability agent
  - S7157073: G1: type change size_t -> uint for region counts / indexes
  - S7157141: crash in 64 bit with corrupted oops
  - S7157365: jruby/bench.bench_timeout crashes with JVM internal error
  - S7157695: Add windows implementation of socket interface
  - S7157734: hotspot test scripts not testing 64-bit JVM under JPRT/JTREG.
  - S7158137: new hotspot build - hs24-b07
  - S7158329: NPE in sun.security.krb5.Credentials.acquireDefaultCreds()
  - S7158457: division by zero in adaptiveweightedaverage
  - S7158552: The instanceKlsss::_host_klass is only needed for anonymous class for JSR 292 support.
  - S7158682: G1: Handle leak when running nsk.sysdict tests
  - S7158807: Revise stack management with volatile call sites
  - S7158988: jvm crashes while debugging on x86_32 and x86_64
  - S7159041: Fix for 7152519 causing build breakage.
  - S7159772: instanceKlass::all_fields_count() returns incorrect total field count
  - S7159842: new hotspot build - hs24-b08
  - S7159982: ZipFile uses static for error message when malformed zip file encountered
  - S7160161: Missed safepoint in non-Counted loop
  - S7160252: (prefs) NodeAddedEvent was not delivered when new node add when new Node
  - S7160467: Fix test for 7158988
  - S7160539: JDeveloper crashes on 64-bit Windows
  - S7160570: Intrinsification support for tracing framework
  - S7160609: [macosx] JDK crash in libjvm.dylib ( C [GeForceGLDriver+0x675a] gldAttachDrawable+0x941)
  - S7160610: Unknown Native Code compilation issue
  - S7160613: VerifyRememberedSets doesn't work with CompressedOops
  - S7160677: missing else in fix for 7152811
  - S7160728: Introduce an extra logging level for G1 logging
  - S7160757: Problem with hotspot/runtime_classfile
  - S7160924: jvmti: GetPhase returns incorrect phase before VMInit event is issued
  - S7160951: ActionListener called twice for JMenuItem using ScreenMenuBar
  - S7160951: [macosx] ActionListener called twice for JMenuItem using ScreenMenuBar
  - S7161229: PriorityBlockingQueue keeps hard reference to last removed element
  - S7161282: Move test/sun/tools/classpath/RMICClassPathTest.java to a more appropriate location
  - S7161437: [macosx] awt.FileDialog doesn't respond appropriately for mac when selecting folders
  - S7161545: G1: Minor cleanups to the G1 logging
  - S7161732: Improve handling of thread_id in OSThread
  - S7161759: TEST_BUG: java/awt/Frame/WindowDragTest/WindowDragTest.java fails to compile, should be modified
  - S7161796: PhaseStringOpts::fetch_static_field tries to fetch field from the Klass instead of the mirror
  - S7162063: libsaproc debug print should format size_t correctly on 64bit platform
  - S7162094: LateInlineCallGenerator::do_late_inline crashed on uninitialized _call_node
  - S7162111: TEST_BUG: change tests run in headless mode [macosx]
  - S7162144: Missing AWT thread in headless mode in 7u4 b06
  - S7162385: TEST_BUG: sun/net/www/protocol/jar/B4957695.java failing again
  - S7162488: VM not printing unknown -XX options
  - S7162726: Wrong filter predicate of visible locals in SA JSJavaFrame
  - S7162955: Attach api on Solaris, too many open files
  - S7163117: Agent can't connect to process on Mac OSX
  - S7163193: new hotspot build - hs24-b09
  - S7163198: Tightened package accessibility
  - S7163534: VM could crashes assert(false) failed: infinite EA connection graph build
  - S7163848: G1: Log GC Cause for a GC
  - S7163863: Updated projectcreator
  - S7163865: Performance improvement for DateFormatSymbols.getZoneIndex(String)
  - S7163874: InetAddress.isReachable should support pinging 0.0.0.0
  - S7164144: Fix variable naming style in freeBlockDictionary.* and binaryTreeDictionary*
  - S7164191: properties.putAll API may fail with ConcurrentModifcationException on multi-thread scenario
  - S7164344: enabling ZIP_DEBUGINFO_FILES causes unexpected test failures on Solaris and Windows
  - S7165722: Invalid path in MemoryMonitor demo's README.txt
  - S7165755: OS Information much longer on linux than other platforms
  - S7166048: Remove the embeded epoll data structure.
  - S7166055: Javadoc for WeakHashMap contains misleading advice
  - S7166498: JVM crash in ClassVerifier
  - S7166615: new hotspot build - hs24-b10
  - S7166894: Add gc cause to GC logging for all collectors
  - S7166896: DocumentBuilder.parse(String uri) is not IPv6 enabled. It throws MalformedURLException
  - S7166955: (pack200) JNI_GetCreatedJavaVMs needs additional checking
  - S7167069: 6 VM flags crash the VM when queried via jinfo
  - S7167142: Consider a warning when finding a .hotspotrc or .hotspot_compiler file that isn't used
  - S7167254: Crash on OSX in Enumerator.nextElement() with compressed oops
  - S7167266: missing copyright notes in 3rd party code
  - S7167406: (Zero) Fix for InvokeDynamic needed
  - S7167437: Can't build on linux without precompiled headers
  - S7167593: Changed get_source.sh to allow for getting full oracle jdk repo forest
  - S7167625: Adjustments for SE-Embedded build process
  - S7167780: Hang javasoft.sqe.tests.api.javax.swing.Timer.Ctor2Tests
  - S7167976: Fix broken get_source.sh script
  - S7168144: No appropriate CCC request for changes introduced by 7154030
  - S7168172: (fs) Files.isReadable slow on Windows
  - S7168247: new hotspot build - hs24-b11
  - S7168280: Eliminate the generic signature index slot from field array for field without generic signature.
  - S7168294: G1: Some Full GCs incorrectly report GC cause as "No GC"
  - S7168848: Add test to check that humongous object allocation path also checks the heap occupancy.
  - S7169056: Add gigabyte unit to proper_unit_for_byte_size() and byte_size_in_proper_unit()
  - S7169062: CMS: Assertion failed with -XX:+ObjectAlignmentInBytes=64
  - S7169102: 7165060 merge lost changes to make/windows/makefiles/defs.make
  - S7169111: Unreadable menu bar with Ambiance theme in GTK L&F
  - S7169395: Exception throws due to the changes in JDK 7 object tranversal and break backward compatibility
  - S7169409: enabling ZIP_DEBUGINFO_FILES causes unexpected test failures on Windows X86
  - S7169782: C2: SIGSEGV in LShiftLNode::Ideal(PhaseGVN*, bool)
  - S7169934: pow(x,y) or x64 computes incorrect result when x<0 and y is an odd integer
  - S7170006: new hotspot build - hs24-b12
  - S7170010: conditional "ZIP_DEBUGINFO_FILES ?= 0" setting is not reliable on Windows
  - S7170053: crash in C2 when using -XX:+CountCompiledCalls
  - S7170091: Fix missing wait between repo cloning in hgforest.sh
  - S7170145: C1 doesn't respect the JMM with volatile field loads
  - S7170197: Update JPRT default build targets to support embedded builds
  - S7170275: os::print_os_info needs to know about Windows 8
  - S7170463: C2 should recognize "obj.getClass() == A.class" code pattern
  - S7170655: Frame size does not follow font size change with XToolkit
  - S7170657: [macosx] There seems to be no keyboard/mouse action to select non-contiguous items in List
  - S7170996: IME composition window does not disappear when file dialog is closed : Japanese WinXP
  - S7171028: dots are missed in the datetime for Slovanian
  - S7171045: [macosx] There are no enter or exit events reported against 8b39 for MouseEventsDuringDrag.
  - S7171422: Change 7161732 breaks SA on Windows
  - S7171703: JNI DefineClass crashes client VM when first parameter is NULL
  - S7171812: [macosx] Views keep scrolling back to the drag position after DnD
  - S7171824: assert(_offset >= 1) failed: illegal call to offset()
  - S7171853: new hotspot build - hs24-b13
  - S7171890: C1: add Class.isInstance intrinsic
  - S7171936: LOG_G incorrectly defined in globalDefinitions.hpp
  - S7172149: ArrayIndexOutOfBoundsException from Signature.verify
  - S7172177: test/java/util/TimeZone/DstTzTest.java failing on all platforms
  - S7172187: [macosx] JAWT native CALayer not positioned over Canvas
  - S7172226: HotSpot fails to build with GCC 4.7 because of stricter c++ argument dependent lookup
  - S7172279: G1: Clean up TraceGen0Time and TraceGen1Time data gathering
  - S7172388: G1: _total_full_collections should not be incremented for concurrent cycles
  - S7172708: 32/64 bit type issues on Windows after Mac OS X port
  - S7172826: (se) Selector based on the Solaris event port mechanism
  - S7172843: C1: fix "assert(has_printable_bci()) failed: _printable_bci should have been set"
  - S7172967: Eliminate constMethod's _method backpointer to methodOop.
  - S7173044: MemoryMonitor hangs if getMax method in MemoryUsage object returns -1
  - S7173340: C2: code cleanup: use PhaseIterGVN::replace_edge(Node*, int, Node*) where applicable
  - S7173438: new hotspot build - hs24-b14
  - S7173460: G1: java/lang/management/MemoryMXBean/CollectionUsageThreshold.java failes with G1
  - S7173494: some jdk tests are not run in test/Makefile
  - S7173635: jprt.properties should include release jdk7u6
  - S7173712: G1: Duplicated code in G1UpdateRSOrPushRefOopClosure::do_oop_nv()
  - S7173959: Jvm crashed during coherence exabus (tmb) testing
  - S7174218: remove AtomicLongCSImpl intrinsics
  - S7174363: Arrays.copyOfRange leads to VM crash with -Xcomp -server if executed by testing framework
  - S7174510: 19 JCK compiler tests fail with C2 error: memNode.cpp:812 - ShouldNotReachHere
  - S7174532: jdk/test/java/lang/Math/WorstCaseTests.java failing on x86
  - S7174884: C1: failures after 7171890: assert(cur_state != NULL) failed: state_before must be set
  - S7174887: Deadlock in jndi ldap connection cleanup
  - S7174928: JSR 292: unresolved invokedynamic call sites deopt and osr infinitely
  - S7175133: jinfo failed to get system properties after 6924259
  - S7175183: [macosx] Objective-C exception thrown when switching monitor configuration
  - S7175515: new hotspot build - hs24-b15
  - S7175616: Port fix for TimeZone from JDK 8 to JDK 7
  - S7175707: [macosx] PIT: 8 b43 Not running on AppKit thread issue again
  - S7175775: Disable SA options in jinfo/Basic.java test until SA updated for new hash and String count/offset
  - S7175914: Usage of gcc with precompiled headers produces wrong build dependencies
  - S7176485: (bf) Allow temporary buffer cache to grow to IOV_MAX
  - S7176856: add the JRE name to the error log
  - S7177003: C1: LogCompilation support
  - S7177040: Deadlock between PostEventQueue.noEvents, EventQueue.isDispatchThread and SwingUtilities.invokeLater
  - S7177128: SA cannot get correct system properties after 7126277
  - S7177144: [macosx] Drag and drop not working (regression in 7u6)
  - S7177173: [macosx] JFrame.setExtendedState(JFrame.MAXIMIZED_BOTH) not working as expected in JDK 7
  - S7177307: fix fo CR7158800 doesn't contain Test7158800.sh
  - S7177409: Perf regression in JVM_GetClassDeclaredFields after generic signature changes.
  - S7177917: Failed test java/lang/Math/PowTests.java
  - S7177923: SIGBUS on sparc in compiled code for java.util.Calendar.clear()
  - S7178079: REGRESSION: Some AWT Drag-n-Drop tests fail since JDK 7u6 b13
  - S7178113: build environment change
  - S7178145: Change constMethodOop::_exception_table to optionally inlined u2 table.
  - S7178280: Failed new vector regression tests
  - S7178324: Crash when compiling for(i : x) try(AutoCloseable x = ...) {}
  - S7178361: G1: Make sure that PrintGC and PrintGCDetails use the same timing for the GC pause
  - S7178363: G1: Remove the serial code for PrintGCDetails and make it a special case of the parallel code
  - S7178649: TEST BUG: BadKdc3.java needs improvement to ignore the unlikely but possible timeout
  - S7178667: ALT_EXPORT_PATH does not export server jvm on macosx
  - S7178670: runtime/7158800/BadUtf8.java fails in SymbolTable::rehash_table
  - S7178703: Fix handling of quoted arguments and better error messages in dcmd
  - S7178741: SA: jstack -m produce UnalignedAddressException in output (Linux)
  - S7178846: IterateThroughHeap: heap_iteration_callback passes a negative size
  - S7179138: Incorrect result with String concatenation optimization
  - S7179305: (fs) Method name sun.nio.fs.UnixPath.getPathForExecptionMessage is misspelled
  - S7179383: MaxDirectMemorySize argument parsing is broken for values >2G
  - S7179759: ENV: Nightly fails during jdk copiyng for solaris platforms after FDS unzipping
  - S7179879: SSLSocket connect times out instead of throwing socket closed exception
  - S7179908: Fork hs23.3 hsx from hs22.2 for jdk7u7 and reinitialize build number
  - S7180621: Hashtable has incorrect alternative hashing threshold default value
  - S7180769: assert(tboth->klass_is_exact()) failed: klass should be exact
  - S7180882: new hotspot build - hs24-b16
  - S7180884: new hotspot build - hs23.2-b09
  - S7180906: Javadoc tool does not apply parameter -nosince
  - S7180907: Jarsigner -verify fails if rsa file used sha-256 with authenticated attributes
  - S7180914: Compilation warning after: 7172967: Eliminate the constMethod's _method backpointer to the methodOop.
  - S7181027: [macosx] Unable to use headless mode
  - S7181175: Enable builds on Windows with MinGW/MSYS
  - S7181199: [macosx] Startup is much slower in headless mode for apps using Fonts
  - S7181200: JVM new hashing code breaks SA in product mode
  - S7181320: javac NullPointerException for switch labels with cast to String expressions
  - S7181353: Update error message to distinguish native OOM and java OOM in net
  - S7181438: [OGL] Incorrect alpha used, during blit from SW to the texture.
  - S7181494: cleanup avx and vectors code
  - S7181632: nsk classLoad001_14 failure and CompileTheWorld crash after 7178145.
  - S7181658: CTW: assert(t->meet(t0) == t) failed: Not monotonic
  - S7181986: NMT ON: Assertion failure when running jdi ExpiredRequestDeletionTest
  - S7181989: NMT ON: Assertion failure when NMT checks thread's native stack base address
  - S7181995: NMT ON: NMT assertion failure assert(cur_vm->is_uncommit_record() || cur_vm->is_deallocation_record
  - S7182152: Instrumentation hot swap test incorrect monitor count
  - S7182226: NLS: jdk7u6 message drop20 integration
  - S7182260: G1: Fine grain RSet freeing bottleneck
  - S7182500: OCSP revocation checking fails if OCSP responce does not contain certificates
  - S7182543: NMT ON: Aggregate a few NMT related bugs
  - S7182902: [macosx] Test api/java_awt/GraphicsDevice/indexTGF.html#SetDisplayMode fails on Mac OS X 10.7
  - S7182971: Need to include documentation content for JCMD man page
  - S7183203: ShortRSAKeynnn.sh tests intermittent failure
  - S7183209: Backout 7105952 changes for jdk7u
  - S7183251: Netbeans editor renders text wrong on JDK 7u6 build
  - S7183292: HttpURLConnection.getHeaderFields() throws IllegalArgumentException: Illegal cookie name
  - S7183516: [macosx]Can't print-out the defined fonts for PrintFont_2D and AntialiasTableTest.
  - S7183753: [TEST] Some colon in the diff for this test
  - S7183754: Test runtime/6294277/Test6294277.sh runs wrong JVM
  - S7184050: new hotspot build - hs24-b17
  - S7184145: (pack200) pack200 --repack throws NullPointerException when JAR file specified without path
  - S7184287: (prefs) BackingStoreException when calling flush on root node[macosx]
  - S7184326: TEST_BUG: java/awt/Frame/7024749/bug7024749.java has a typo
  - S7184365: closed/java/awt/event/TextEvent/TextEventSequenceTest/TextEventSequenceTest fails
  - S7184394: add intrinsics to use AES instructions
  - S7184401: JDk7u6 : Missing main menu bar in Netbeans after fix for 7162144
  - S7184406: Adjust get_source/hgforest script to allow for trailing // characters
  - S7184772: G1: Incorrect assert in HeapRegionLinkedList::add_as_head()
  - S7184815: [macosx] Need to read Kerberos config in files
  - S7184845: Apps6: menu tree bean in form throws npe in jre 7 while closing
  - S7184943: fix failing test com/sun/jndi/rmi/registry/RegistryContext/UnbindIdempotent.java
  - S7184946: fix failing test com/sun/jndi/rmi/registry/RegistryContext/ContextWithNullProperties.java
  - S7184951: [macosx] Exception at java.awt.datatransfer on headless mode (only in GUI session)
  - S7185245: Licensee source bundle tries to compile JFR
  - S7185280: Jre7cert: focusgained does not get called for all focus req when do alt + tab
  - S7185340: TEST_BUG: java/nio/channels/AsynchronousSocketChannel/Leaky.java failing intermittently [win]
  - S7185471: Avoid key expansion when AES cipher is re-init w/ the same key
  - S7185512: The printout doesn't match image on screen.
  - S7185550: TEST: runtime/7020373/Test7020373.sh fails because there is no test/runtime/7020373/testcase.jar
  - S7185614: NMT ON: "check by caller" assertion failed on nsk ThreadMXBean test
  - S7185699: G1: Prediction model discrepancies
  - S7185775: new hotspot build - hs24-b18
  - S7185778: javah error "Not a valid class name" on class names with dollar signs
  - S7185965: Build error in javadoc make stage for bundles not containing crypto package
  - S7186111: fix bugs in java/rmi/activation/ActivationSystem/unregisterGroup/UnregisterGroup
  - S7186278: Build error after CR#6995781 / 7151532 with GCC 4.7.0
  - S7186286: TLS implementation to better adhere to RFC
  - S7186371: [macosx] Main menu shortcuts not displayed (7u6 regression)
  - S7186778: MachO decoder implementation for MacOSX
  - S7186794: Setter not found. PropertyDescriptor(PropertyDescriptor,PropertyDescriptor)
  - S7187046: Crash in ClassFileParser on solaris-ia32 during RetransformClasses.
  - S7187290: nightly failures after JSR 292 lazy method handle update
  - S7187429: NMT ON: Merge failure should cause NMT to shutdown
  - S7187454: stack overflow in C2 compiler thread on Solaris x86
  - S7187463: new hotspot build - hs24-b19
  - S7187618: PropertyDescriptor Performance Slow
  - S7187834: [macosx] Usage of private API in macosx 2d implementation causes Apple Store rejection
  - S7187876: ClassCastException in TCPTransport.executeAcceptLoop
  - S7187882: TEST_BUG: java/rmi/activation/checkusage/CheckUsage.java fails intermittently
  - S7188114: (launcher) need an alternate command line parser for Windows
  - S7188168: 7071904 broke the DEBUG_BINARIES option on Linux
  - S7188176: The JVM should differentiate between T and M series and adjust GC ergonomics
  - S7188227: VM should recognize M-series SPARC
  - S7188276: JSR 292: assert(ct == T_OBJECT) failed: rt=T_OBJECT, ct=13
  - S7188594: Print statistic collected by NMT with VM flag
  - S7188612: JTable's AccessibleJTable throws IllegalComponentStateException instead of null
  - S7188708: REGRESSION: closed/java/awt/EventQueue/PostEventOrderingTest.java fails
  - S7188755: Crash due to missing synchronization on gconf_client in DefaultProxySelector.c
  - S7188852: Move implementation of De/Inflater.getBytesRead/Writtten() to java from native
  - S7188911: nightly failures after JSR 292 lazy method handle update (round 2)
  - S7189086: new hotspot build - hs24-b20
  - S7189103: Executors needs to maintain state
  - S7189112: java.beans.Introspector misses write methods
  - S7189136: Fork hs23.5 hsx from hs23.4 for jdk7u9 and reinitialize build number
  - S7189350: Fix failed for CR 7162144
  - S7189490: More improvements to DomainCombiner checking
  - S7189611: Venezuela current Currency should be Bs.F.
  - S7189729: jprt.properties should include release jdk7u8
  - S7189926: Reduce test size for default run. Add additional run enabling alternative hashing.
  - S7189944: (launcher) test/tools/launcher/Arrrrghs.java needs a couple of minor fixes
  - S7189946: Incorrect copyright header in ExpertTaglet.java
  - S7190089: NMT ON: NMT failed assertion on thread's stack base address
  - S7190118: new hotspot build - hs23.4-b01
  - S7190130: make jdk7u8 the default jprt release for hs23.4
  - S7190219: (bf) CharBuffer.put(String,int,int) modifies position even if BufferOverflowException thrown
  - S7190254: NetworkInterface getFlags implementation should support full integer bit range for flags value
  - S7190310: Inlining WeakReference.get(), and hoisting $referent may lead to non-terminating loops
  - S7190416: JSR 292: typo in InvokerBytecodeGenerator.getConstantPoolSize
  - S7190512: Fix for 7181175 broke hotspot/make/windows/create.bat builds
  - S7190550: REGRESSION: Some closed/com/oracle/jfr/api tests fail to compile becuse of fix 7185245
  - S7190666: G1: assert(_unused == 0) failed: Inconsistency in PLAB stats
  - S7190772: new hotspot build - hs24-b21
  - S7191102: nightly failures after JSR 292 lazy method handle update (round 3)
  - S7191124: Optimized build is broken due to inconsistent use of DEBUG_ONLY and NOT_PRODUCT macros in NMT
  - S7191275: Cleanup OS specific blocks in PlainDatagramSocketImpl.c to support more unix-like platforms
  - S7191547: XMLEventFactory.newFactory(String factoryId, ClassLoader loader) does not work as expected
  - S7191556: (fs) UnixNativeDispatcher.getextmntent should be moved into platform specific code
  - S7191587: (se) SelectionKey.interestOps does not defer changing the interest set to the next select [macosx]
  - S7191765: make jdk8 the default jprt release for hs24
  - S7191872: Xrender: No text displayed using 64 bit JDK on solaris11-sparc
  - S7191926: Remove MKS dependency in Hotspot regression tests
  - S7192128: G1: Extend fix for 6948537 to G1's BOT
  - S7192167: JSR 292: C1 has old broken code which needs to be removed
  - S7192406: JSR 292: C2 needs exact return type information for invokedynamic and invokehandle call sites
  - S7192449: fix up tests to accommodate jtreg spec change
  - S7192744: fix up tests to accommodate jtreg spec change
  - S7192847: new hotspot build - hs23.4-b02
  - S7192887: java/awt/Window/Grab/GrabTest.java still failed (fix failed for CR 7149068)
  - S7192916: Hotspot development launcher should use DYLD_LIBRARY_PATH on OS X
  - S7192955: Introspector overide PropertyDescriptor for generic type field defined in super class
  - S7192963: assert(_in[req-1] == this) failed: Must pass arg count to 'new'
  - S7192964: assert(false) failed: bad AD file
  - S7192965: assert(is_aligned_sets(size)) failed: mask is not aligned, adjacent sets
  - S7193157: G1: Make some develpflags available in product builds
  - S7193169: The code example in javadoc of Component.java misses 'implements' keyword
  - S7193219: JComboBox serialization fails in JDK 1.7
  - S7193318: C2: remove number of inputs requirement from Node's new operator
  - S7193463: Improve registering signal handlers in java.lang.Terminator.setup()
  - S7193946: Move warnings associated with UseMemSetInBOT flag
  - S7193977: REGRESSION:Java 7's JavaBeans persistence ignoring the "transient" flag on properties
  - S7194004: new hotspot build - hs24-b22
  - S7194032: update tests for upcoming changes for jtreg
  - S7194035: update tests for upcoming changes for jtreg
  - S7194184: JColorChooser swatch cannot accessed from keyboard
  - S7194409: os::javaTimeNanos() shows hot on CPU_CLK_UNHALTED profiles
  - S7194469: Pressing the Enter key results in an alert tone beep when focus is TextField
  - S7194472: FileKeyTab.java test fails on Windows
  - S7194612: api/java_lang/invoke/MethodHandles/Lookup/index.html#ExceptionsTests[findVirtualNSME] fails w/ -esa
  - S7194633: G1: Assertion and guarantee failures in block offset table
  - S7194662: JSR 292: PermuteArgsTest times out in nightly test runs
  - S7195063: [TEST] jtreg flags com/sun/corba/cachedSocket/7056731.sh with Error failure.
  - S7195106: REGRESSION : There is no way to get Icon inf, once Softreference is released
  - S7195151: Multiplatform tescase for 6929067
  - S7195301: XML Signature DOM implementation should not use instanceof to determine type of Node
  - S7195931: UnsatisfiedLinkError on PKCS11.C_GetOperationState while using NSS from jre7u6+
  - S7196045: Possible JVM deadlock in ThreadTimesClosure when using HotspotInternal non-public API.
  - S7196199: java/text/Bidi/Bug6665028.java failed: Bidi run count incorrect
  - S7196242: vm/mlvm/indy/stress/java/loopsAndThreads crashed
  - S7196262: JSR 292: java/lang/invoke/PrivateInvokeTest.java fails on solaris-sparc
  - S7196361: add hotspot/make/closed to hgforest.sh
  - S7196547: [macosx] Implement dead key detection for KeyEvent
  - S7197033: missing ResourceMark for assert in Method::bci_from()
  - S7197071: Makefiles for various security providers aren't including the default manifest.
  - S7197100: new hotspot build - hs23.6-b03
  - S7197106: renumber hs23.4 to hs23.6
  - S7197619: Using modifiers for the dead key detection on Windows
  - S7197652: Impossible to run any signed JNLP applications or applets, OCSP off by default
  - S7198073: (prefs) user prefs not saved [macosx]
  - S7198084: NPG: distance is too big for short branches in test_invocation_counter_for_mdp()
  - S7198130: G1: PrintReferenceGC output comes out of order
  - S7198146: Another new regression test does not compile on windows-amd64
  - S7198338: make jdk7u10 the default jprt release for hs23.6
  - S7198499: TraceTypeProfile as diagnostic option
  - S7198529: NPG: assert with NMT code in Thread destructor
  - S7198570: (tz) Support tzdata2012f
  - S7198640: new hotspot build - hs23.6-b04
  - S7198904: (alt-rt) TreeMap.clone is broken
  - S7198988: re-order paramaters for Collision.java @run
  - S7199010: incorrect vector alignment
  - S7199066: Typo in method name
  - S7199092: NMT: NMT needs to deal overlapped virtual memory ranges
  - S7199180: [macosx] Dead keys handling for input methods
  - S7199219: Proxy-Connection headers set incorrectly when a HttpClient is retrieved from the Keep Alive Cache
  - S7199249: TEST_BUG : Add /othervm to Collisions.java @run main with -D definitions
  - S7199488: [TEST] runtime/7158800/InternTest.java failed due to false-positive on PID match.
  - S7199637: TEST_BUG: add serialization tests to jdk7u problem list for macosx
  - S7199645: Increment build # of hs23.5 to b02
  - S7199654: Remove LoadUI2LNode
  - S7199669: Update tags in .hgtags file for CPU release rename
  - S7199708: FileChooser crashs when opening large folder
  - S7199742: A lot of C2 OSR compilations of the same method's bci
  - S7199862: Make sure that a connection is still alive when retrieved from KeepAliveCache in certain cases
  - S7200001: failed C1 OSR compile doesn't get recompiled with C2
  - S7200092: Make NMT a bit friendlier to work with
  - S7200145: runtime/7196045/Test7196045.java fails with No class provided for `main'
  - S7200163: add CodeComments functionality to assember stubs
  - S7200233: C2: can't use expand rules for vector instruction rules
  - S7200261: G1: Liveness counting inconsistencies during marking verification
  - S7200264: 7192963 changes disabled shift vectors
  - S7200295: CertificateRequest message is wrapping when using large numbers of Certs
  - S7200297: agent code does not handle multiple boot library path elements correctly
  - S7200720: crash in net.dll during NTLM authentication
  - S7200742: (se) Selector.select does not block when starting Coherence (sol11u1)
  - S7200762: [macosx] Stuck in sun.java2d.opengl.CGLGraphicsConfig.getMaxTextureSize(Native Method)
  - S7200949: JSR 292: rubybench/bench/time/bench_base64.rb fails with jruby.jar not on boot class path
  - S7201026: add vector for shift count
  - S7201053: Krb5LoginModule shows NPE when both useTicketCache and storeKey are set to true
  - S7201151: Fix Contribution : Java cannot get Windows's IME name correctly
  - S7201156: jar tool fails to convert file separation characters for list and extract
  - S8000102: Resolve include conflicts
  - S8000178: (bf) Backout 7190219 fix for jdk7u (JCK issue)
  - S8000232: NPG: SIGSEGV in Dependencies::DepStream::check_klass_dependency on solaris-x64
  - S8000263: JSR 292: signature types may appear to be unloaded
  - S8000285: Deadlock between PostEventQueue.noEvents, EventQueue.isDispatchThread and SwingUtilities.invokeLater
  - S8000286: [macosx] Views keep scrolling back to the drag position after DnD
  - S8000297: REGRESSION: closed/java/awt/EventQueue/PostEventOrderingTest.java fails
  - S8000307: Jre7cert: focusgained does not get called for all focus req when do alt + tab
  - S8000311: G1: ParallelGCThreads==0 broken
  - S8000313: C2 should use jlong for 64bit values
  - S8000423: Diacritic is not applyed to a base letter on Linux
  - S8000459: assert(java_lang_String::is_instance(entry)) failure with various mlvm tests.
  - S8000485: Hotspot build fails in Solaris Studio IDE when building dtrace
  - S8000486: REGRESSION: Three java2d tests fail since jdk8b58 on Windows 7 with NullPointerException
  - S8000487: Java JNDI connection library on ldap conn is not honoring configured timeout
  - S8000525: Java.net.httpcookie api does not support 2-digit year format
  - S8000592: Improve adlc usability
  - S8000622: Forgot to hg add and check in test for JDK-7170638
  - S8000664: 2 SAX features does not work properly
  - S8000740: remove LinkWellKnownClasses
  - S8000743: docencoding not available to stylesheet
  - S8000780: [Backport from jdk8] Fix zero fail to build in icedtea7-head.
  - S8000805: JMM issue: short loads are non-atomic
  - S8000817: Reinstate accidentally removed sleep() from ProcessBuilder/Basic.java
  - S8000821: JSR 292: C1 fails to call virtual method (JRUBY-6920)
  - S8000831: Heap verification output incorrect/incomplete
  - S8000955: Hashtable.Entry.hashCode() does not conform to Map.Entry.hashCode() defined behaviour
  - S8000989: smaller code changes to make future JSR 292 backports easier
  - S8001071: Add simple range check into VM implemenation of Unsafe access methods
  - S8001101: C2: more general vector rule subsetting
  - S8001124: jdk7u ProblemList.txt updates (10/2012)
  - S8001161: mac: EmbeddedFrame doesn't become active window
  - S8001174: new hotspot build - hs24-b23
  - S8001175: new hotspot build - hs24-b24
  - S8001183: incorrect results of char vectors right shift operaiton
  - S8001192: allow duplicate bug ids in hs24
  - S8001208: Fix for KRB5CCNAME not complete
  - S8001591: NMT: assertion failed: assert(rec->addr() + rec->size() <= cur->base()) failed: Can not overlap in memSnapshot.cpp
  - S8001592: NMT: assertion failed: assert(_amount >= amt) failed: Just check: memBaseline.hpp:180
  - S8001621: Update awk scripts that check output from jps/jcmd
  - S8001635: assert(in_bb(n)) failed: must be
  - S8001662: new hotspot build - hs24-b25
  - S8001756: Hotspot makefiles report missing OBJCOPY command in the wrong circumstances
  - S8001808: Create a test for 8000327
  - S8001876: Create regtest for 8000283
  - S8002034: Allow Full Debug Symbols when cross-compiling
  - S8002040: Allow Full Debug Symbols when cross-compiling
  - S8002069: Assert failed in C2: assert(field->edge_count() > 0) failed: sanity
  - S8002077: Possible mnemonic issue on JFileChooser Save button on nimbus L&F
  - S8002078: hs_err_pid file should report full JDK version string
  - S8002114: fix failed for JDK-7160951: [macosx] ActionListener called twice for JMenuItem using ScreenMenuBar
  - S8002225: (tz) Support tzdata2012i
  - S8002227: (tz) Support tzdata2012i
  - S8002273: NMT to report JNI memory leaks when -Xcheck:jni is on
  - S8002294: assert(VM_Version::supports_ssse3()) failed
  - S8002297: sun/net/www/protocol/http/StackTraceTest.java fails intermittently
  - S8002313: TEST_BUG : jdk/test/java/security/Security/ClassLoaderDeadlock/ClassLoaderDeadlock.java should run in headless mode
  - S8002344: Krb5LoginModule config class does not return proper KDC list from DNS
  - S8002362: Build fails after integration of 7185280 to jdk7u-dev
  - S8003230: new hotspot build - hs24-b26
  - S8003254: make jdk7u12 the default jprt release for hs24
  - S8003260: [findbug] some fields should be package protected
  - S8003261: static field is public but not final
  - S8003322: Add instrumentation points for tracing of I/O calls
  - S8003333: Regression: java/beans/EventHandler/Test6277266.java fails with ACE
  - S8003487: NMT: incorrect assertion in VMMemPointerIterator::remove_released_region method (memSnapshot.cpp)
  - S8003550: new hotspot build - hs24-b27
  - S8003591: Abstract_VM_Version::internal_vm_info_string needs to stringify FLOAT_ARCH for ease of use
  - S8003597: TEST_BUG: Eliminate dependency on javaweb from closed net tests
  - S8003689: MemTracker::init_tracking_options() reads outside array if commandline argument is empty
  - S8003830: NPE at BasicTreeUI$Actions.page:4470
  - S8003948: NTLM/Negotiate authentication problem
  - S8003982: new test javax/swing/AncestorNotifier/7193219/bug7193219.java failed on macosx
  - S8004094: Javac compiler error - synthetic method accessor generated with duplicate name
  - S8004114: build environment change
  - S8004131: move jdi tests out of core testset
  - S8004170: G1: Verbose GC output is not getting flushed to log file using JDK 8
  - S8004188: Rename src/share/lib/security/java.security to java.security-linux
  - S8004317: TestLibrary.getUnusedRandomPort() fails intermittently, but exception not reported
  - S8004337: java/sql tests aren't run in test/Makefile
  - S8004344: Fix a crash in ToolkitErrorHandler() in XlibWrapper.c
  - S8004391: Bug fix in jtreg causes test failures in pre jdk 8 langtools tests
  - S8004640: C2 assert failure in memnode.cpp: NULL+offs not RAW address
  - S8004713: Stackoverflowerror thrown when thread stack straddles 0x80000000
  - S8004748: clean up @build tags in RMI tests
  - S8004802: jcmd VM.native_memory baseline=false crashes VM
  - S8004846: Time-specific certpath validation applies to all certs involved
  - S8004925: java/net/Socks/SocksV4Test.java failing on all platforms
  - S8005035: new hotspot build - hs24-b28
  - S8005290: remove -showversion from RMI test library subprocess mechanism
  - S8005460: [findbugs] Probably returned array should be cloned
  - S8005556: java/net/Socks/SocksV4Test.java is missing @run tag
  - S8005646: TEST_BUG: java/rmi/activation/ActivationSystem/unregisterGroup/UnregisterGroup leaves process running
  - S8005920: After pressing combination Windows Key and M key, the frame, the instruction and the dialog can't be minimized.
  - S8005943: (process) Improved Runtime.exec
  - S8006120: Provide "Server JRE" for 7u train
  - S8006309: More reliable control panel operation
  - S8006417: JComboBox.showPopup(), hidePopup() fails in JRE 1.7 on OS X
  - S8006435: Improvements in JMX
  - S8006534: CLONE - TestLibrary.getUnusedRandomPort() fails intermittently-doesn't retry enough times
  - S8006536: [launcher]  removes trailing slashes on arguments
  - S8006560: java/net/ipv6tests/B6521014.java fails intermittently
  - S8006564: Test sun/security/util/Oid/S11N.sh fails with timeout on Linux 32-bit
  - S8006669: sun/security/ssl/sun/net/www/protocol/https/HttpsURLConnection/PostThruProxy.sh fails on mac
  - S8006753: fix failed for JDK-8002415 White box testing API for HotSpot
  - S8006777: Improve TLS handling of invalid messages
  - S8006790: Improve checking for windows
  - S8006795: Improve font warning messages
  - S8007014: Improve image handling
  - S8007406: Improve accessibility of AccessBridge
  - S8007515: TEST_BUG: update ProblemList.txt and TEST.ROOT in jdk7u-dev to match jdk8
  - S8007617: Better validation of images
  - S8007667: Better image reading
  - S8007675: Improve color conversion
  - S8007688: Blacklist known bad certificate
  - S8007701: Hotspot trace allocation events
  - S8007918: Better image writing
  - S8008081: Print outs do not have matching arguments
  - S8008140: Better method handle resolution
  - S8008223: java/net/BindException/Test.java fails rarely
  - S8008249: Sync ICU into JDK :
  - S8008379: TEST_BUG: Fail automatically with java.lang.NullPointerException.
  - S8008737: The trace event vm/gc/heap/summary is missing for CMS
  - S8008815: [TEST_BUG] Add back tests to the Problemlist files post the jdk7u -> 7u-cpu test sync up
  - S8008917: CMS: Concurrent mode failure tracing event
  - S8008920: Tracing events for heap statistics
  - S8009032: Implement evacuation info event
  - S8009165: Fix for 8008817 needs revision
  - S8009305: Improve AWT data transfer
  - S8009399: Bump the hsx build number for APRIL CPU
  - S8009460: C2compiler crash in machnode::in_regmask(unsigned int)
  - S8009463: Regression test test\java\lang\Runtime\exec\ArgWithSpaceAndFinalBackslash.java failing.
  - S8009530: ICU Kern table support broken
  - S8009610: Blacklist certificate used with malware.
  - S8009634: TEST_BUG: sun/misc/Version/Version.java handle 2 digit minor in VM version
  - S8009677: Better setting of setters
  - S8009699: Methodhandle lookup
  - S8009750: javax/xml/crypto/dsig/SecurityManager/XMLDSigWithSecMgr.java should run in other vm mode
  - S8009814: Better driver management
  - S8009857: Problem with plugin
  - S8009881: TEST_BUG: javax/swing/JTree/8004298/bug8004298.java should be modified
  - S8010166: TEST_BUG: fix for 8009634 overlooks possible version strings (sun/misc/Version/Version.java)
  - S8010294: Refactor HeapInspection to make it more reusable
  - S8010651: create.bat still builds the kernel
  - S8010916: Add tenuring threshold to young garbage collection events
  - S8010939: Deadlock in LogManager
  - S8011021: new hotspot build - hs24-b39
  - S8011400: missing define OPENJDK for windows builds
  - S8011583: new hotspot build - hs24-b40
  - S8011699: CMS: assert(_shared_gc_info.id() != SharedGCInfo::UNSET_GCID) failed: GC not started?
  - S8011745: Unknown CertificateChoices
  - S8011867: Accept unknown PKCS #9 attributes
  - S8012572: Exclude sun/tools/jmap/Basic.sh for short term
  - S8014469: (tz) Support tzdata2013c
  - S8015275: Resolve ambiguity in OCSPChecker & CrlRevocationChecker
* Backports
  - PR1197, S8003120, RH868136: ResourceManager.getApplicationResources() does not close InputStreams
  - S8014618, RH962568: Need to strip leading zeros in TlsPremasterSecret of DHKeyAgreement
* Bug fixes
  - PR1212: IcedTea7 fails to build because Resources.getText() is no longer available for code to use
  - Add NSS (commented out) to other platforms.
  - Allow multiple PKCS11 library initialisation to be a non-critical error.
  - Complete switch from local zlib patch to upstream version.
  - Include defs.make in buildtree.make so ZERO_BUILD is recognised and JVM_VARIANT_ZERO set.
  - Provide support for using PKCS11 provider with NSS
  - Remove file apparently removed as part of upstreaming of Zero.
  - Revert S7060849
  - Set UNLIMITED_CRYPTO=true to ensure we use the unlimited policy.
  - PR473: Set handleStartupErrors to ignoreMultipleInitialisation in nss.cfg
  - PR716: IcedTea7 should bootstrap with IcedTea6
  - Fix indentation on Makefile block not executed when STRIP_POLICY=no_strip is set
  - JEP167: Fix invalid XSL stylesheets and DTD.
  - Make sure libffi cflags and libs are used.
  - PR1378: Add AArch64 support to Zero
  - PR1170: Ensure unlimited crypto policy is in place.
  - RH513605, PR1280: Updating/Installing OpenJDK should recreate the shared class-data archive
  - PR1358: Make XRender mandatory
  - PR1360: Check for /usr/lib64 JVMs and generic JPackage alternative
  - PR1435, D657854: OpenJDK 7 returns incorrect TrueType font metrics
  - PR728: GTKLookAndFeel does not honor gtk-alternative-button-order
* CACAO
  - src/vm/jit/x86_64/asmpart.S (asm_abstractmethoderror): Keep stack aligned.
  - src/native/jni.cpp (GetObjectClass): Remove null pointer check.
  - Removing the cache flush was not the brightest idea. Putting it back in.
  - arm: Make md_dcacheflush a compiler barrier, as on x86.
  - src/vm/jit/codegen-common.cpp: Removed superfluous memory barrier
  - CA168: Updating to the new assertion interface of GNU Classpath
  - src/vm/jit/trap.cpp (trap_handle): Print stack trace before aborting.
  - arm: Thumb interworking should work on armv5
  - Fixed using typename declarations for clang
  - src/native/vm/openjdk/sun_misc_Perf.cpp: Implement high resolution timer.
  - CA166: make check-langtools failure: MineField.sh
  - CA167: intern strings in get_StackTraceElement
  - src/native/vm/openjdk/jvm.cpp: Recreate JVM_Available.
  - Export JVM_SetNativeThreadName (noop)
  - src/vm/initialize.cpp: Explicitly initialize java/lang/Class early.
  - Adapt to recent java.lang.String changes in openjdk7
  - jdk_str_ops broke the GNU classpath build.
  - Support class version 51 unconditionally. Also identify as Java 6.
  - Stop creating pseudo files for OpenJDK (libjsig.so, Xusage.txt)
  - src/vm/jit/alpha/asmpart.S: Properly set up GP in asm_abstractmethoderror
  - CA172, PR1266, G453612: ARM hardfloat support
  - Clang fix for the i386 backend
  - Fix rt-timing
  - Moved rt-timing.{c,h} to C++
  - PR1278: Synchronise CACAO versions between IcedTea6/7/8 where possible
  - PR1276: Synchronise CACAO rules between IcedTea6/7/8 where possible
* JamVM
  - JSR335: (lambda expressions) initial hack
  - JEP171: Implement fence methods in sun.misc.Unsafe
  - Fix invokesuper check in invokespecial opcode
  - Fix non-direct interpreter invokespecial super-class check
  - When GC'ing a native method don't try to free code
  - Do not free unprepared Miranda method code data
  - Set anonymous class protection domain
  - JVM_IsVMGeneratedMethodIx stub
  - Dummy implementation of sun.misc.Perf natives
* SystemTap
  - Add garbage collection probes
  
New in release 2.1.8 (2013-05-02):

* Security fixes
  - S6657673, CVE-2013-1518: Issues with JAXP
  - S7200507: Refactor Introspector internals
  - S8000724, CVE-2013-2417: Improve networking serialization
  - S8001031, CVE-2013-2419: Better font processing
  - S8001040, CVE-2013-1537: Rework RMI model
  - S8001322: Refactor deserialization
  - S8001329, CVE-2013-1557: Augment RMI logging
  - S8003335: Better handling of Finalizer thread
  - S8003445: Adjust JAX-WS to focus on API
  - S8003543, CVE-2013-2415: Improve processing of MTOM attachments
  - S8004261: Improve input validation
  - S8004336, CVE-2013-2431: Better handling of method handle intrinsic frames
  - S8004986, CVE-2013-2383: Better handling of glyph table
  - S8004987, CVE-2013-2384: Improve font layout
  - S8004994, CVE-2013-1569: Improve checking of glyph table
  - S8005432: Update access to JAX-WS
  - S8005943: (process) Improved Runtime.exec
  - S8006309: More reliable control panel operation
  - S8006435, CVE-2013-2424: Improvements in JMX
  - S8006790: Improve checking for windows
  - S8006795: Improve font warning messages
  - S8007406: Improve accessibility of AccessBridge
  - S8007617, CVE-2013-2420: Better validation of images
  - S8007667, CVE-2013-2430: Better image reading
  - S8007918, CVE-2013-2429: Better image writing
  - S8008140: Better method handle resolution
  - S8009049, CVE-2013-2436: Better method handle binding
  - S8009063, CVE-2013-2426: Improve reliability of ConcurrentHashMap
  - S8009305, CVE-2013-0401: Improve AWT data transfer
  - S8009677, CVE-2013-2423: Better setting of setters
  - S8009699, CVE-2013-2421: Methodhandle lookup
  - S8009814, CVE-2013-1488: Better driver management
  - S8009857, CVE-2013-2422: Problem with plugin
* Backports
  - S7130662, RH928500: GTK file dialog crashes with a NPE
* Bug fixes
  - PR1363: Fedora 19 / rawhide FTBFS SIGILL
  - Fix offset problem in ICU LETableReference.
  - Don't create debuginfo files if not stripping.

New in release 2.2.8 (2013-04-30):

* Security fixes
  - S6657673, CVE-2013-1518: Issues with JAXP
  - S7200507: Refactor Introspector internals
  - S8000724, CVE-2013-2417: Improve networking serialization
  - S8001031, CVE-2013-2419: Better font processing
  - S8001040, CVE-2013-1537: Rework RMI model
  - S8001322: Refactor deserialization
  - S8001329, CVE-2013-1557: Augment RMI logging
  - S8003335: Better handling of Finalizer thread
  - S8003445: Adjust JAX-WS to focus on API
  - S8003543, CVE-2013-2415: Improve processing of MTOM attachments
  - S8004261: Improve input validation
  - S8004336, CVE-2013-2431: Better handling of method handle intrinsic frames
  - S8004986, CVE-2013-2383: Better handling of glyph table
  - S8004987, CVE-2013-2384: Improve font layout
  - S8004994, CVE-2013-1569: Improve checking of glyph table
  - S8005432: Update access to JAX-WS
  - S8005943: (process) Improved Runtime.exec
  - S8006309: More reliable control panel operation
  - S8006435, CVE-2013-2424: Improvements in JMX
  - S8006790: Improve checking for windows
  - S8006795: Improve font warning messages
  - S8007406: Improve accessibility of AccessBridge
  - S8007617, CVE-2013-2420: Better validation of images
  - S8007667, CVE-2013-2430: Better image reading
  - S8007918, CVE-2013-2429: Better image writing
  - S8008140: Better method handle resolution
  - S8009049, CVE-2013-2436: Better method handle binding
  - S8009063, CVE-2013-2426: Improve reliability of ConcurrentHashMap
  - S8009305, CVE-2013-0401: Improve AWT data transfer
  - S8009677, CVE-2013-2423: Better setting of setters
  - S8009699, CVE-2013-2421: Methodhandle lookup
  - S8009814, CVE-2013-1488: Better driver management
  - S8009857, CVE-2013-2422: Problem with plugin
* Backports
  - S7130662, RH928500: GTK file dialog crashes with a NPE
  - S8009530: ICU Kern table support broken

New in release 2.3.9 (2013-04-21):

* Security fixes
  - S6657673, CVE-2013-1518: Issues with JAXP
  - S7200507: Refactor Introspector internals
  - S8000724, CVE-2013-2417: Improve networking serialization
  - S8001031, CVE-2013-2419: Better font processing
  - S8001040, CVE-2013-1537: Rework RMI model
  - S8001322: Refactor deserialization
  - S8001329, CVE-2013-1557: Augment RMI logging
  - S8003335: Better handling of Finalizer thread
  - S8003445: Adjust JAX-WS to focus on API
  - S8003543, CVE-2013-2415: Improve processing of MTOM attachments
  - S8004261: Improve input validation
  - S8004336, CVE-2013-2431: Better handling of method handle intrinsic frames
  - S8004986, CVE-2013-2383: Better handling of glyph table
  - S8004987, CVE-2013-2384: Improve font layout
  - S8004994, CVE-2013-1569: Improve checking of glyph table
  - S8005432: Update access to JAX-WS
  - S8005943: (process) Improved Runtime.exec
  - S8006309: More reliable control panel operation
  - S8006435, CVE-2013-2424: Improvements in JMX
  - S8006790: Improve checking for windows
  - S8006795: Improve font warning messages
  - S8007406: Improve accessibility of AccessBridge
  - S8007617, CVE-2013-2420: Better validation of images
  - S8007667, CVE-2013-2430: Better image reading
  - S8007918, CVE-2013-2429: Better image writing
  - S8008140: Better method handle resolution
  - S8009049, CVE-2013-2436: Better method handle binding
  - S8009063, CVE-2013-2426: Improve reliability of ConcurrentHashMap
  - S8009305, CVE-2013-0401: Improve AWT data transfer
  - S8009677, CVE-2013-2423: Better setting of setters
  - S8009699, CVE-2013-2421: Methodhandle lookup
  - S8009814, CVE-2013-1488: Better driver management
  - S8009857, CVE-2013-2422: Problem with plugin
* Backports
  - S7130662, RH928500: GTK file dialog crashes with a NPE
* Bug fixes
  - PR1363: Fedora 19 / rawhide FTBFS SIGILL
  - PR1401: Fix Zero build on 2.3.8
  - Fix offset problem in ICU LETableReference.
  - Change -Werror fix to preserve OpenJDK default.
  - PR1404: Failure to bootstrap with ecj 4.2

New in release 2.3.8 (2013-03-11):

* Security fixes
  - S8007014, CVE-2013-0809: Improve image handling
  - S8007675, CVE-2013-1493: Improve color conversion
* Backports
  - S8002344: Krb5LoginModule config class does not return proper KDC list from DNS
  - S8004344: Fix a crash in ToolkitErrorHandler() in XlibWrapper.c
  - S8006179: JSR292 MethodHandles lookup with interface using findVirtual()
  - S8006882: Proxy generated classes in sun.proxy package breaks JMockit
* Bug fixes
  - PR1303: Correct #ifdef to #if
  - PR1340: Simplify the rhino class rewriter to avoid use of concurrency
  - Revert 7017193 and add the missing free call, until a better fix is ready.

New in release 2.2.7 (2013-03-11):

* Security fixes
  - S8007014, CVE-2013-0809: Improve image handling
  - S8007675, CVE-2013-1493: Improve color conversion
* Backports
  - S8002344: Krb5LoginModule config class does not return proper KDC list from DNS
  - S8004344: Fix a crash in ToolkitErrorHandler() in XlibWrapper.c
  - S8006179: JSR292 MethodHandles lookup with interface using findVirtual()
  - S8006882: Proxy generated classes in sun.proxy package breaks JMockit
* Bug fixes
  - PR1303: Correct #ifdef to #if
  - PR1340: Simplify the rhino class rewriter to avoid use of concurrency
  - Revert 7017193 and add the missing free call, until a better fix is ready.

New in release 2.1.7 (2013-03-11):

* Security fixes
  - S8007014, CVE-2013-0809: Improve image handling
  - S8007675, CVE-2013-1493: Improve color conversion
* Backports
  - S8002344: Krb5LoginModule config class does not return proper KDC list from DNS
  - S8004344: Fix a crash in ToolkitErrorHandler() in XlibWrapper.c
  - S8006179: JSR292 MethodHandles lookup with interface using findVirtual()
  - S8006882: Proxy generated classes in sun.proxy package breaks JMockit
* Bug fixes
  - PR1303: Correct #ifdef to #if
  - Stop libraries being stripped in the OpenJDK build.
  - PR1340: Simplify the rhino class rewriter to avoid use of concurrency
  - Revert 7017193 and add the missing free call, until a better fix is ready.

New in release 2.3.7 (2013-02-20):

* Security fixes
  - S8004937, CVE-2013-1484: Improve proxy construction
  - S8006439, CVE-2013-1485: Improve MethodHandles coverage
  - S8006446, CVE-2013-1486: Restrict MBeanServer access
  - S8006777, CVE-2013-0169: Improve TLS handling of invalid messages
  - S8007688: Blacklist known bad certificate
* Backports
  - S8007393: Possible race condition after JDK-6664509
  - S8007611: logging behavior in applet changed
* Bug fixes
  - PR1303: Support building with giflib 5

New in release 2.2.6 (2013-02-20):

* Security fixes
  - S8004937, CVE-2013-1484: Improve proxy construction
  - S8006439, CVE-2013-1485: Improve MethodHandles coverage
  - S8006446, CVE-2013-1486: Restrict MBeanServer access
  - S8006777, CVE-2013-0169: Improve TLS handling of invalid messages
  - S8007688: Blacklist known bad certificate
* Backports
  - S8007393: Possible race condition after JDK-6664509
  - S8007611: logging behavior in applet changed
* Bug fixes
  - PR1303: Support building with giflib 5

New in release 2.1.6 (2013-02-20):

* Security fixes
  - S8004937, CVE-2013-1484: Improve proxy construction
  - S8006439, CVE-2013-1485: Improve MethodHandles coverage
  - S8006446, CVE-2013-1486: Restrict MBeanServer access
  - S8006777, CVE-2013-0169: Improve TLS handling of invalid messages
  - S8007688: Blacklist known bad certificate
* Backports
  - S7123519: problems with certification path
  - S8007393: Possible race condition after JDK-6664509
  - S8007611: logging behavior in applet changed
* Bug fixes
  - PR1303: Support building with giflib 5

New in release 2.3.6 (2013-02-12):

* Security fixes
  - S6563318, CVE-2013-0424: RMI data sanitization
  - S6664509, CVE-2013-0425: Add logging context
  - S6664528, CVE-2013-0426: Find log level matching its name or value given at construction time
  - S6776941: CVE-2013-0427: Improve thread pool shutdown
  - S7141694, CVE-2013-0429: Improving CORBA internals
  - S7173145: Improve in-memory representation of splashscreens
  - S7186945: Unpack200 improvement
  - S7186946: Refine unpacker resource usage
  - S7186948: Improve Swing data validation
  - S7186952, CVE-2013-0432: Improve clipboard access
  - S7186954: Improve connection performance
  - S7186957: Improve Pack200 data validation
  - S7192392, CVE-2013-0443: Better validation of client keys
  - S7192393, CVE-2013-0440: Better Checking of order of TLS Messages
  - S7192977, CVE-2013-0442: Issue in toolkit thread
  - S7197546, CVE-2013-0428: (proxy) Reflect about creating reflective proxies
  - S7200491: Tighten up JTable layout code
  - S7200493, CVE-2013-0444: Improve cache handling
  - S7200499: Better data validation for options
  - S7200500: Launcher better input validation
  - S7201064: Better dialogue checking
  - S7201066, CVE-2013-0441: Change modifiers on unused fields
  - S7201068, CVE-2013-0435: Better handling of UI elements
  - S7201070: Serialization to conform to protocol
  - S7201071, CVE-2013-0433: InetSocketAddress serialization issue
  - S8000210: Improve JarFile code quality
  - S8000537, CVE-2013-0450: Contextualize RequiredModelMBean class
  - S8000539, CVE-2013-0431: Introspect JMX data handling
  - S8000540, CVE-2013-1475: Improve IIOP type reuse management
  - S8000631, CVE-2013-1476: Restrict access to class constructor
  - S8001235, CVE-2013-0434: Improve JAXP HTTP handling
  - S8001242: Improve RMI HTTP conformance
  - S8001307: Modify ACC_SUPER behavior
  - S8001972, CVE-2013-1478: Improve image processing
  - S8002325, CVE-2013-1480: Improve management of images
* Backports
  - S7057320: test/java/util/concurrent/Executors/AutoShutdown.java failing intermittently
  - S7083664: TEST_BUG: test hard code of using c:/temp but this dir might not exist
  - S7107613: scalability blocker in javax.crypto.CryptoPermissions
  - S7107616: scalability blocker in javax.crypto.JceSecurityManager
  - S7146424: Wildcard expansion for single entry classpath
  - S7160609: [macosx] JDK crash in libjvm.dylib ( C [GeForceGLDriver+0x675a] gldAttachDrawable+0x941)
  - S7160951: [macosx] ActionListener called twice for JMenuItem using ScreenMenuBar
  - S7162488: VM not printing unknown -XX options
  - S7169395: Exception throws due to the changes in JDK 7 object tranversal and break backward compatibility
  - S7175616: Port fix for TimeZone from JDK 8 to JDK 7
  - S7176485: (bf) Allow temporary buffer cache to grow to IOV_MAX
  - S7179908: Fork hs23.3 hsx from hs22.2 for jdk7u7 and reinitialize build number
  - S7184326: TEST_BUG: java/awt/Frame/7024749/bug7024749.java has a typo
  - S7185245: Licensee source bundle tries to compile JFR
  - S7185471: Avoid key expansion when AES cipher is re-init w/ the same key
  - S7186371: [macosx] Main menu shortcuts not displayed (7u6 regression)
  - S7187834: [macosx] Usage of private API in macosx 2d implementation causes Apple Store rejection
  - S7188114: (launcher) need an alternate command line parser for Windows
  - S7189136: Fork hs23.5 hsx from hs23.4 for jdk7u9 and reinitialize build number
  - S7189350: Fix failed for CR 7162144
  - S7190550: REGRESSION: Some closed/com/oracle/jfr/api tests fail to compile becuse of fix 7185245
  - S7193219: JComboBox serialization fails in JDK 1.7
  - S7193977: REGRESSION:Java 7's JavaBeans persistence ignoring the "transient" flag on properties
  - S7195106: REGRESSION : There is no way to get Icon inf, once Softreference is released
  - S7195301: XML Signature DOM implementation should not use instanceof to determine type of Node
  - S7195931: UnsatisfiedLinkError on PKCS11.C_GetOperationState while using NSS from jre7u6+
  - S7197071: Makefiles for various security providers aren't including the default manifest.
  - S7197652: Impossible to run any signed JNLP applications or applets, OCSP off by default
  - S7198146: Another new regression test does not compile on windows-amd64
  - S7198570: (tz) Support tzdata2012f
  - S7198640: new hotspot build - hs23.6-b04
  - S7199488: [TEST] runtime/7158800/InternTest.java failed due to false-positive on PID match.
  - S7199645: Increment build # of hs23.5 to b02
  - S7199669: Update tags in .hgtags file for CPU release rename
  - S7200720: crash in net.dll during NTLM authentication
  - S7200742: (se) Selector.select does not block when starting Coherence (sol11u1)
  - S7200762: [macosx] Stuck in sun.java2d.opengl.CGLGraphicsConfig.getMaxTextureSize(Native Method)
  - S8000285: Deadlock between PostEventQueue.noEvents, EventQueue.isDispatchThread and SwingUtilities.invokeLater
  - S8000286: [macosx] Views keep scrolling back to the drag position after DnD
  - S8000297: REGRESSION: closed/java/awt/EventQueue/PostEventOrderingTest.java fails
  - S8000307: Jre7cert: focusgained does not get called for all focus req when do alt + tab
  - S8000822: Fork hs23.7 hsx from hs23.6 for jdk7u11 and reinitialize build number
  - S8001124: jdk7u ProblemList.txt updates (10/2012)
  - S8001242: Improve RMI HTTP conformance
  - S8001808: Create a test for 8000327
  - S8001876: Create regtest for 8000283
  - S8002068: Build broken: corba code changes unable to use new JDK 7 classes
  - S8002091: tools/launcher/ToolsOpts.java test started to fail since 7u11 b01 on Windows
  - S8002114: fix failed for JDK-7160951: [macosx] ActionListener called twice for JMenuItem using ScreenMenuBar
  - S8002225: (tz) Support tzdata2012i
  - S8003402: (dc) test/java/nio/channels/DatagramChannel/SendToUnresovled.java failing after 7u11 cleanup issues
  - S8003403: Test ShortRSAKeyWithinTLS and ClientJSSEServerJSSE failing after 7u11 cleanup
  - S8003948: NTLM/Negotiate authentication problem
  - S8004175: Restricted packages added in java.security are missing in java.security-{macosx, solaris, windows}
  - S8004302: javax/xml/soap/Test7013971.java fails since jdk6u39b01
  - S8004341: Two JCK tests fails with 7u11 b06
  - S8005615: Java Logger fails to load tomcat logger implementation (JULI)
* Bug fixes
  - Fix build using Zero's HotSpot so all patches apply again.
  - PR1295: jamvm parallel unpack failure

New in release 2.2.5 (2013-02-13):

* Security fixes
  - S6563318, CVE-2013-0424: RMI data sanitization
  - S6664509, CVE-2013-0425: Add logging context
  - S6664528, CVE-2013-0426: Find log level matching its name or value given at construction time
  - S6776941: CVE-2013-0427: Improve thread pool shutdown
  - S7141694, CVE-2013-0429: Improving CORBA internals
  - S7173145: Improve in-memory representation of splashscreens
  - S7186945: Unpack200 improvement
  - S7186946: Refine unpacker resource usage
  - S7186948: Improve Swing data validation
  - S7186952, CVE-2013-0432: Improve clipboard access
  - S7186954: Improve connection performance
  - S7186957: Improve Pack200 data validation
  - S7192392, CVE-2013-0443: Better validation of client keys
  - S7192393, CVE-2013-0440: Better Checking of order of TLS Messages
  - S7192977, CVE-2013-0442: Issue in toolkit thread
  - S7197546, CVE-2013-0428: (proxy) Reflect about creating reflective proxies
  - S7200491: Tighten up JTable layout code
  - S7200493, CVE-2013-0444: Improve cache handling
  - S7200499: Better data validation for options
  - S7200500: Launcher better input validation
  - S7201064: Better dialogue checking
  - S7201066, CVE-2013-0441: Change modifiers on unused fields
  - S7201068, CVE-2013-0435: Better handling of UI elements
  - S7201070: Serialization to conform to protocol
  - S7201071, CVE-2013-0433: InetSocketAddress serialization issue
  - S8000210: Improve JarFile code quality
  - S8000537, CVE-2013-0450: Contextualize RequiredModelMBean class
  - S8000539, CVE-2013-0431: Introspect JMX data handling
  - S8000540, CVE-2013-1475: Improve IIOP type reuse management
  - S8000631, CVE-2013-1476: Restrict access to class constructor
  - S8001235, CVE-2013-0434: Improve JAXP HTTP handling
  - S8001242: Improve RMI HTTP conformance
  - S8001307: Modify ACC_SUPER behavior
  - S8001972, CVE-2013-1478: Improve image processing
  - S8002325, CVE-2013-1480: Improve management of images
* Backports
  - S7175616: Port fix for TimeZone from JDK 8 to JDK 7
  - S8002068: Build broken: corba code changes unable to use new JDK 7 classes
  - S8004341: Two JCK tests fails with 7u11 b06
  - S8005615: Java Logger fails to load tomcat logger implementation (JULI)

New in release 2.1.5 (2013-02-13):

* Security fixes
  - S6563318, CVE-2013-0424: RMI data sanitization
  - S6664509, CVE-2013-0425: Add logging context
  - S6664528, CVE-2013-0426: Find log level matching its name or value given at construction time
  - S6776941: CVE-2013-0427: Improve thread pool shutdown
  - S7141694, CVE-2013-0429: Improving CORBA internals
  - S7173145: Improve in-memory representation of splashscreens
  - S7186945: Unpack200 improvement
  - S7186946: Refine unpacker resource usage
  - S7186948: Improve Swing data validation
  - S7186952, CVE-2013-0432: Improve clipboard access
  - S7186954: Improve connection performance
  - S7186957: Improve Pack200 data validation
  - S7192392, CVE-2013-0443: Better validation of client keys
  - S7192393, CVE-2013-0440: Better Checking of order of TLS Messages
  - S7192977, CVE-2013-0442: Issue in toolkit thread
  - S7197546, CVE-2013-0428: (proxy) Reflect about creating reflective proxies
  - S7200491: Tighten up JTable layout code
  - S7200493, CVE-2013-0444: Improve cache handling
  - S7200499: Better data validation for options
  - S7200500: Launcher better input validation
  - S7201064: Better dialogue checking
  - S7201066, CVE-2013-0441: Change modifiers on unused fields
  - S7201068, CVE-2013-0435: Better handling of UI elements
  - S7201070: Serialization to conform to protocol
  - S7201071, CVE-2013-0433: InetSocketAddress serialization issue
  - S8000210: Improve JarFile code quality
  - S8000537, CVE-2013-0450: Contextualize RequiredModelMBean class
  - S8000539, CVE-2013-0431: Introspect JMX data handling
  - S8000540, CVE-2013-1475: Improve IIOP type reuse management
  - S8000631, CVE-2013-1476: Restrict access to class constructor
  - S8001235, CVE-2013-0434: Improve JAXP HTTP handling
  - S8001242: Improve RMI HTTP conformance
  - S8001307: Modify ACC_SUPER behavior
  - S8001972, CVE-2013-1478: Improve image processing
  - S8002325, CVE-2013-1480: Improve management of images
* Backports
  - S7054590: (JSR-292) MethodHandleProxies.asInterfaceInstance() accepts private/protected nested interfaces
  - S7175616: Port fix for TimeZone from JDK 8 to JDK 7
  - S8002068: Build broken: corba code changes unable to use new JDK 7 classes
  - S8004341: Two JCK tests fails with 7u11 b06
  - S8005615: Java Logger fails to load tomcat logger implementation (JULI)

New in release 2.3.4 (2013-01-15):

* Security fixes
  - S8004933, CVE-2012-3174: Improve MethodHandle interaction with libraries
  - S8006017, CVE-2013-0422: Improve lookup resolutions
  - S8006125: Update MethodHandles library interactions
* Backports
  - S7197906: BlockOffsetArray::power_to_cards_back() needs to handle > 32 bit shifts
* Bug fixes
  - G422525: Fix building with PaX enabled kernels.

New in release 2.2.4 (2013-01-15):

* Security fixes
  - S8004933, CVE-2012-3174: Improve MethodHandle interaction with libraries
  - S8006017, CVE-2013-0422: Improve lookup resolutions
  - S8006125: Update MethodHandles library interactions
* Bug fixes
  - G422525: Fix building with PaX enabled kernels.

New in release 2.1.4 (2013-01-15):

* Security fixes
  - S8004933, CVE-2012-3174: Improve MethodHandle interaction with libraries
  - S8006017, CVE-2013-0422: Improve lookup resolutions
  - S8006125: Update MethodHandles library interactions

New in release 2.3.3 (2012-10-17):

* Security fixes
  - S6631398, CVE-2012-3216: FilePermission improved path checking
  - S7093490: adjust package access in rmiregistry
  - S7143535, CVE-2012-5068: ScriptEngine corrected permissions
  - S7158796, CVE-2012-5070: Tighten properties checking in EnvHelp
  - S7158807: Revise stack management with volatile call sites
  - S7163198, CVE-2012-5076: Tightened package accessibility
  - S7167656, CVE-2012-5077: Multiple Seeders are being created
  - S7169884, CVE-2012-5073: LogManager checks do not work correctly for sub-types
  - S7169887, CVE-2012-5074: Tightened package accessibility
  - S7169888, CVE-2012-5075: Narrowing resource definitions in JMX RMI connector
  - S7172522, CVE-2012-5072: Improve DomainCombiner checking
  - S7186286, CVE-2012-5081: TLS implementation to better adhere to RFC
  - S7189103, CVE-2012-5069: Executors needs to maintain state
  - S7189490: More improvements to DomainCombiner checking
  - S7189567, CVE-2012-5085: java net obselete protocol
  - S7192975, CVE-2012-5071: Issue with JMX reflection
  - S7195194, CVE-2012-5084: Better data validation for Swing
  - S7195549, CVE-2012-5087: Better bean object persistence
  - S7195917, CVE-2012-5086: XMLDecoder parsing at close-time should be improved
  - S7195919, CVE-2012-5979: (sl) ServiceLoader can throw CCE without needing to create instance
  - S7196190, CVE-2012-5088: Improve method of handling MethodHandles
  - S7198296, CVE-2012-5089: Refactor classloader usage
  - S7158800: Improve storage of symbol tables
  - S7158801: Improve VM CompileOnly option
  - S7158804: Improve config file parsing
  - S7198606, CVE-2012-4416: Improve VM optimization
* Bug fixes
  - Remove merge artefact.
  - Remove the Xp header and library checks.
* JamVM
  - PR1155: Do not put version number in libjvm.so SONAME

New in release 2.2.3 (2012-10-17):

* Security fixes
  - S6631398, CVE-2012-3216: FilePermission improved path checking
  - S7093490: adjust package access in rmiregistry
  - S7143535, CVE-2012-5068: ScriptEngine corrected permissions
  - S7158796, CVE-2012-5070: Tighten properties checking in EnvHelp
  - S7158807: Revise stack management with volatile call sites
  - S7163198, CVE-2012-5076: Tightened package accessibility
  - S7167656, CVE-2012-5077: Multiple Seeders are being created
  - S7169884, CVE-2012-5073: LogManager checks do not work correctly for sub-types
  - S7169887, CVE-2012-5074: Tightened package accessibility
  - S7169888, CVE-2012-5075: Narrowing resource definitions in JMX RMI connector
  - S7172522, CVE-2012-5072: Improve DomainCombiner checking
  - S7186286, CVE-2012-5081: TLS implementation to better adhere to RFC
  - S7189103, CVE-2012-5069: Executors needs to maintain state
  - S7189490: More improvements to DomainCombiner checking
  - S7189567, CVE-2012-5085: java net obselete protocol
  - S7192975, CVE-2012-5071: Issue with JMX reflection
  - S7195194, CVE-2012-5084: Better data validation for Swing
  - S7195549, CVE-2012-5087: Better bean object persistence
  - S7195917, CVE-2012-5086: XMLDecoder parsing at close-time should be improved
  - S7195919, CVE-2012-5979: (sl) ServiceLoader can throw CCE without needing to create instance
  - S7196190, CVE-2012-5088: Improve method of handling MethodHandles
  - S7198296, CVE-2012-5089: Refactor classloader usage
  - S7158801: Improve VM CompileOnly option
  - S7158804: Improve config file parsing
  - S7198606, CVE-2012-4416: Improve VM optimization
* Backports
  - S7175845: "jar uf" changes file permissions unexpectedly
  - S7177216: native2ascii changes file permissions of input file
  - S7158800: Improve storage of symbol tables
* Bug fixes
  - Remove merge artefact.
  - Remove the Xp header and library checks.

New in release 2.1.3 (2012-10-17):

* Security fixes
  - S6631398, CVE-2012-3216: FilePermission improved path checking
  - S7093490: adjust package access in rmiregistry
  - S7143535, CVE-2012-5068: ScriptEngine corrected permissions
  - S7158796, CVE-2012-5070: Tighten properties checking in EnvHelp
  - S7158807: Revise stack management with volatile call sites
  - S7163198, CVE-2012-5076: Tightened package accessibility
  - S7167656, CVE-2012-5077: Multiple Seeders are being created
  - S7169884, CVE-2012-5073: LogManager checks do not work correctly for sub-types
  - S7169887, CVE-2012-5074: Tightened package accessibility
  - S7169888, CVE-2012-5075: Narrowing resource definitions in JMX RMI connector
  - S7172522, CVE-2012-5072: Improve DomainCombiner checking
  - S7186286, CVE-2012-5081: TLS implementation to better adhere to RFC
  - S7189103, CVE-2012-5069: Executors needs to maintain state
  - S7189490: More improvements to DomainCombiner checking
  - S7189567, CVE-2012-5085: java net obselete protocol
  - S7192975, CVE-2012-5071: Issue with JMX reflection
  - S7195194, CVE-2012-5084: Better data validation for Swing
  - S7195549, CVE-2012-5087: Better bean object persistence
  - S7195917, CVE-2012-5086: XMLDecoder parsing at close-time should be improved
  - S7195919, CVE-2012-5979: (sl) ServiceLoader can throw CCE without needing to create instance
  - S7196190, CVE-2012-5088: Improve method of handling MethodHandles
  - S7198296, CVE-2012-5089: Refactor classloader usage
  - S7158801: Improve VM CompileOnly option
  - S7158804: Improve config file parsing
  - S7198606, CVE-2012-4416: Improve VM optimization
* Backports
  - S7175845: "jar uf" changes file permissions unexpectedly
  - S7177216: native2ascii changes file permissions of input file
  - S7106773: 512 bits RSA key cannot work with SHA384 and SHA512
  - S7158800: Improve storage of symbol tables
* Bug fixes
  - Remove merge artefact.
  - Remove the Xp header and library checks.

New in release 2.1.2 (2012-09-02):

* Security fixes
  - RH852051, CVE-2012-4681, S7162473: Reintroduce PackageAccessible checks removed in 6788531.
  - S7162476, CVE-2012-1682: XMLDecoder security issue via ClassFinder
  - S7194567, CVE-2012-3136: Improve long term persistence of java.beans objects
  - S7163201, CVE-2012-0547: Simplify toolkit internals references
* OpenJDK
  - PR1101: Undefined symbols on GNU/Linux SPARC
  - S7182135: Impossible to use some editors directly
  - S7183701: [TEST] closed/java/beans/security/TestClassFinder.java - compilation failed
  - S7185678: java/awt/Menu/NullMenuLabelTest/NullMenuLabelTest.java failed with NPE
  - S7190813: (launcher) RPATH needs to have additional paths
* ARM
  - ARM: Fix trashed thread ptr after recursive re-entry from
  - ARM: Rename a bunch of misleadingly-named functions
  - Enable _adapter_opt_spread* jsr 292 code, now passes
  - Fix call to handle_special_method().  Fix compareAndSwapLong.

New in release 2.2.2 (2012-08-31):

* Security fixes
  - RH852051, CVE-2012-4681, S7162473: Reintroduce PackageAccessible checks removed in 6788531.
  - S7162476, CVE-2012-1682: XMLDecoder security issue via ClassFinder
  - S7194567, CVE-2012-3136: Improve long term persistence of java.beans objects
  - S7163201, CVE-2012-0547: Simplify toolkit internals references
* OpenJDK
  - Fix Zero FTBFS issues
  - PR1101: Undefined symbols on GNU/Linux SPARC
  - S7180036: Build failure in Mac platform caused by fix # 7163201
  - S7182135: Impossible to use some editors directly
  - S7183701: [TEST] closed/java/beans/security/TestClassFinder.java - compilation failed
  - S7185678: java/awt/Menu/NullMenuLabelTest/NullMenuLabelTest.java failed with NPE
  - S7188168: 7071904 broke the DEBUG_BINARIES option on Linux
  - S7190813: (launcher) RPATH needs to have additional paths

New in release 2.3.2 (2012-08-31):

* Security fixes
  - S7162476, CVE-2012-1682: XMLDecoder security issue via ClassFinder
  - S7194567, CVE-2012-3136: Improve long term persistence of java.beans objects
  - S7163201, CVE-2012-0547: Simplify toolkit internals references
* OpenJDK
  - Fix Zero FTBFS issues with 2.3
  - S7180036: Build failure in Mac platform caused by fix # 7163201
  - S7182135: Impossible to use some editors directly
  - S7183701: [TEST] closed/java/beans/security/TestClassFinder.java - compilation failed
  - S7185678: java/awt/Menu/NullMenuLabelTest/NullMenuLabelTest.java failed with NPE
* Bug fixes
  - PR1149: Zero-specific patch files not being packaged

New in release 2.3.1 (2012-08-29):

* Security fixes
  - RH852051, CVE-2012-4681, S7162473: Reintroduce PackageAccessible checks removed in 6788531.
* Bug fixes
  - PR902: PulseAudioClip getMicrosecondsLength() returns length in milliseconds, not microseconds
  - PR986: IcedTea7 fails to build with IcedTea6 CACAO due to low max heap size
  - PR1050: Stream objects not garbage collected
  - PR1119: Only add classes to rt-source-files.txt if the class (or one or more of its methods/fields)
    are actually missing from the boot JDK
  - PR1137: Allow JARs to be optionally compressed by setting COMPRESS_JARS
* OpenJDK
  - Make dynamic support for GConf work again.
  - PR1095: Add configure option for -Werror
  - PR1101: Undefined symbols on GNU/Linux SPARC
  - PR1140: Unnecessary diz files should not be installed
  - S7192804, PR1138: Build should not install jvisualvm man page for OpenJDK
* JamVM
  - ARMv6 armhf: Changes for Raspbian (Raspberry Pi)
  - PPC: Don't use lwsync if it isn't supported
  - X86: Generate machine-dependent stubs for i386
  - When suspending, ignore detached threads that have died, this prevents
    a user caused deadlock when an external thread has been attached to the VM
    via JNI and it has exited without detaching
  - Add missing REF_TO_OBJs for references passed from JNI, this enable JamVM
    to run Qt-Jambi

New in release 2.3 (2012-08-15):

* OpenJDK
  - S6310967: SA: jstack -m produce failures in output
  - S6346658: (se) Selector briefly spins when asynchronously closing a registered channel [win]
  - S6414899: P11Digest  should support cloning
  - S6888634: test/closed/javax/swing/Popup/TaskbarPositionTest.java fails
  - S6893617: JDK 6 CNCtx always uses the default ORB
  - S6924259: Remove offset and count fields from java.lang.String
  - S6961765: Double byte characters corrupted in DN for LDAP referrals
  - S6994562: Swing classes (both JTextArea and JTextField) don't support caret width tuning
  - S7013850: Please change the mnemonic assignment system to avoid translation issue
  - S7024749: JDK7 b131---a crash in: Java_sun_awt_windows_ThemeReader_isGetThemeTransitionDurationDefined+0x75
  - S7024963: Notepad demo: remove non-translatable resources from Notepad.properties file
  - S7024965: Stylepad demo: remove non-translatable resources from Stylepad.properties file
  - S7027139: getFirstIndex() does not return the first index that has changed
  - S7027300: Unsynchronized HashMap access causes endless loop
  - S7043963: AWT workaround missing for Mutter.
  - S7049339: AnyBlit is broken with non-rectangular clips.
  - S7063674: Wrong results from basic comparisons after calls to Long.bitCount(long)
  - S7071826: Avoid benign race condition in initialization of UUID
  - S7071907: JDK: Full Debug Symbols
  - S7074616: java.lang.management.ManagementFactory.getPlatformManagementInterfaces fails
  - S7074853: TransparentRuler demos Readme should mention the correct jar file name
  - S7079902: Refine CORBA data models
  - S7080109: Dialog.show() lacks doPrivileged() to access system event queue
  - S7087428: move client tests out of jdk_misc
  - S7090832: Some locale info are not localized for some languages.
  - S7092140: Test: java/util/concurrent/locks/Lock/TimedAcquireLeak.java fails on SE-E due to -XX:-UsePerfData
  - S7092551: Double-click in TextField sets caret to the beginning
  - S7093156: NLS Please change the mnemonic assignment system to avoid translation issue (Swing files)
  - S7096436: (sc) SocketChannel.connect fails on Windows 8 when channel configured non-blocking
  - S7100140: [macosx] Test closed/javax/sound/sampled/DirectAudio/bug6400879.java is invalid
  - S7102323: RFE: enable Full Debug Symbols Phase 1 on Solaris
  - S7103665: HeapWord*ParallelScavengeHeap::failed_mem_allocate(unsigned long,bool)+0x97
  - S7103889: (fs) Reduce String concatenation when iterating over directory
  - S7104147: the fix for cr6887286 was not appropriate for backporting
  - S7105952: Improve finalisation for FileInputStream/FileOutputStream/RandomAccessFile
  - S7107063: Fork hs22.1 hsx from hs22.0 for 7u3 and reinitialize build number
  - S7107099: JScrollBar does not show up even if there are enough lebgth of textstring in textField
  - S7110104: It should be possible to stop and start JMX Agent at runtime
  - S7110396: Sound code fails to build with gcc 4.6 on multiarch Linux systems
  - S7110720: Issue with vm config file loadingIssue with vm config file loading
  - S7112115: Component.getLocationOnScreen() work incorrectly if create window in point (0, 0) on oel
  - S7112427: The doclet needs to be able to generate JavaFX documentation.
  - S7113740: hotspot_version file has wrong JDK_MINOR_VER
  - S7116462: Bump the hs21.1 build number to 02
  - S7118100: (prefs) Inconsistency when using system and user preference on OSX Lion
  - S7118280: The gbyc00102 JCK7 test causes an assert in JVM 7.0 fastdebug mode
  - S7118373: (se) Potential leak file descriptor when deregistrating at around the same time as an async close
  - S7120481: storeStore barrier in constructor with final field
  - S7120895: FontConfiguration should not use thread contextClassLoader
  - S7122740: PropertyDescriptor Performance Slow
  - S7123170: JCK vm/jvmti/ResourceExhausted/resexh001/resexh00101/ tests fails since 7u4 b02
  - S7123582: (launcher) display the -version and -XshowSettings
  - S7123896: Unexpected behavior due to Solaris using separate IPv4 and IPv6 port spaces
  - S7123957: Switch of Gnome theme ends up deadlocked in GTKEngine.native_switch_theme
  - S7124210: [macosx] Replacing text in a TextField does generate an extra TextEvent
  - S7124219: [macosx] Unable to draw images to fullscreen
  - S7124239: [macosx] sun.awt.SunToolkit.InfiniteLoop exception in realSync called from SwingTestHelper
  - S7124247: [macosx] Implement GraphicsDevice.setDisplayMode()
  - S7124262: [macosx] Drag events go to a wrong child.
  - S7124286: [macosx] Option modifier should work like AltGr as in Apple jdk 6
  - S7124321: [macosx] TrayIcon MouseListener is never triggered
  - S7124326: [macosx] An issue similar to autoshutdown one in two AppContexts situation.
  - S7124328: [macosx] javax.swing.JDesktopPane.getAllFramesInLayer returns unexpected value
  - S7124376: [macosx] Modal dialog lost focus
  - S7124400: [macosx] CGraphicsDevice.getConfigurations() returns reference to member (does not copy configs)
  - S7124411: [macosx] There's no KEY_TYPED for VK_ESCAPE
  - S7124428: [macosx] Frame.setExtendedState() doesn't work for undecorated windows
  - S7124523: [macosx] b216: Mising part of applet UI
  - S7124537: [macosx] Menu shortcuts for all menu items should be disabled if a menu itself is disabled
  - S7124551: [macosx] Once added, Menu shortcut cannot be removed
  - S7125044: [macosx] Test failure because Component.transferFocus() works differently in applet and application
  - S7126277: Alternative String hashing implementation
  - S7127235: (fs) NPE in Files.walkFileTree if cached attributes are GC'ed
  - S7128699: Change the bundle name so it won't be overwritten when installing a new version
  - S7128738: dragged dialog freezes system on dispose
  - S7129401: PPC: runtime/7100935/TestShortArraycopy.java fails
  - S7129715: MAC: SIGBUS in nsk stress test
  - S7129872: test/sun/security/pkcs11/KeyStore/SecretKeysBasic.sh failing on non-Solaris platforms on 7u4
  - S7130241: [macosx] TransparentRuler demo can not run due to lacking of perpixel transparency support
  - S7130404: [macosx] "os.arch" value should be "x86_64" for compatibility with Apple JDK6
  - S7130521: [macosx] closed/javax/swing/JMenuItem/6209975/bug6209975.java failed on macosx
  - S7131021: [macosx] Consider using system properties to pass arguments from the launcher to AWT/SplashScreen
  - S7132070: Use a mach_port_t as the OSThread thread_id rather than pthread_t on BSD/OSX
  - S7132692: [macosx] Class com.apple.eawt not functioning
  - S7132793: [macosx] setWheelScrollEnabled action reversed
  - S7132808: [macosx] closed/javax/swing/JFileChooser/4524490/bug4524490.java fails on MacOS
  - S7133138: Improve io performance around timezone lookups
  - S7133566: [macosx] closed/javax/swing/JTable/4220171/bug4220171.java fails on MacOS
  - S7133571: [macosx] closed/javax/swing/JToolBar/4247996/bug4247996.java fails on MacOS
  - S7133573: [macosx] closed/javax/swing/JToolTip/4846413/bug4846413.java fails on MacOS
  - S7133581: [macosx] closed/javax/swing/JTree/4330357/bug4330357.java fails on MacOS
  - S7134701: [macosx] Support legacy native library names
  - S7136506: FDS: rework jdk repo Full Debug Symbols support
  - S7141141: Add 3 new test scenarios for testing Main-Class attribute in jar manifest file
  - S7142091: [macosx] RFE: Refactoring of peer initialization/disposing
  - S7142172: Custom TrustManagers that return null for getAcceptedIssuers will NPE
  - S7142641: -Xshared:on fails on ARM
  - S7142847: TEST_BUG: java/nio/file/WatchService/SensitivityModifier.java has incorrect @run tag, runs Basic
  - S7143353: -Xrunhprof fails in Java 7 due to bad switch
  - S7143606: File.createTempFile should be improved for temporary files created by the platform.
  - S7143614: SynthLookAndFeel stability improvement
  - S7143617: Improve fontmanager layout lookup operations
  - S7143744: (se) Stabilize KQueue SelectorProvider and make default on MacOSX
  - S7143851: Improve IIOP stub and tie generation in RMIC
  - S7143872: Improve certificate extension processing
  - S7144063: [macosx] Swing JMenu mnemonic doesn't work; hint misleading; cross symbol typed
  - S7144086: TEST_BUG: java/nio/file/WatchService/SensitivityModifier.java failing intermittently
  - S7144328: Improper commandlines for -XX:+-UnlockCommercialFeatures require proper warning/error messages
  - S7144423: StAX EventReader swallows the cause of error
  - S7144488: Infinite recursion for some equals tests in Collections
  - S7144530: KeyTab.getInstance(String) no longer handles keyTabNames with "file:" prefix
  - S7144542: [macosx] Crash in liblwawt.dylib setBusy() when exiting an FX app
  - S7145024: Crashes in ucrypto related to C2
  - S7145239: Finetune package definition restriction
  - S7145768: [macosx] Regression: failure in b11 of ModalDialogInFocusEventTest
  - S7145771: [macosx] CreateFont/Register.java test fails because of cached results of getAllFonts()
  - S7145798: System.loadLibrary does not search current working directory
  - S7145827: [macosx] JCK failure in b11: FocusableWindow3
  - S7145980: Dispose method of window.java takes long
  - S7146099: NLS: [de,es,it,ko,pt_BR]launcher_**.properties, double backslash issue.
  - S7146131: [macosx] When click the show optionpane button,it display partly of dialog and hung until timeout
  - S7146431: java.security files out-of-sync
  - S7146442: assert(false) failed: bad AD file
  - S7146550: [macosx] DnD test failure in createCompatibleWritableRaster()
  - S7146564: DefaultProxySelector should filter 0.0.0.0 and ::0 [macosx]
  - S7146728: Inconsistent length for the generated secret using DH key agreement impl from SunJCE and PKCS11
  - S7147055: [macosx] Cursors are changing over a blocked window; also blinking
  - S7147066: [macosx] FileDialog.getDirectory() returns incorrect directory
  - S7147078: [macosx] Echo char set in TextField doesn't prevent word jumping
  - S7147407: remove never used debug code in DnsClient.java
  - S7147666: High lock time for com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory.getInstance()
  - S7147724: G1: hang in SurrogateLockerThread::manipulatePLL
  - S7147848: com.sun.management.UnixOperatingSystem uses hardcoded dummy values [macosx]
  - S7148143: PropertyChangeSupport.addPropertyChangeListener can throw ClassCastException
  - S7148242: Regression: valid code rejected during generic type well-formedness check
  - S7148275: [macosx] setIconImages() not working correctly (distorted icon when minimized)
  - S7148281: [macosx] JTabbedPane tabs with HTML text do not render correctly
  - S7148289: [macosx] Deadlock in sun.lwawt.macosx.CWrapper$NSScreen.visibleFrame
  - S7148556: Implementing a generic interface causes a public clone() to become inaccessible
  - S7148584: Jar tools fails to generate manifest correctly when boundary condition hit
  - S7148663: new hotspot build - hs23-b17
  - S7148921: More ProblemList updates (2/2012)
  - S7149005: [macosx] Java Control Panel's UI controls are distorted when draging scroll bar.
  - S7149005: [macosx] Orphaned Choice popup window
  - S7149062: [macosx] dock menu don't show available frames
  - S7149085: [macosx] Quit with QuitStrategy CLOSE_ALL_WINDOWS does terminate application
  - S7149320: Move sun.misc.VM.booted() to the end of System.initializeSystemClass()
  - S7149608: Default TZ detection fails on linux when symbolic links to non default location used.
  - S7149785: Minor corrections to ScriptEngineManager javadoc
  - S7149913: [macosx] Deadlock in LWTextComponentPeer
  - S7150051: incorrect oopmap in critical native
  - S7150089: [macosx] Default for a custom cursor created from non-existent image is not transparent
  - S7150105: [macosx] four scroll-buttons don't display. scroll-sliders cursors are TextCursor
  - S7150322: Stop using drop source bundles in jaxws
  - S7150326: new hotspot build - hs23-b18
  - S7150345: [macosx] Can't type into applets
  - S7150349: [macosx] Applets attempting to show popup menus activate the applet process
  - S7150390: JFR test crashed on assert(_jni_lock_count == count) failed: must be equal
  - S7150392: Linux build breaks with GCC 4.7 due to unrecognized option
  - S7150454: add release jdk7u4 to jprt.properties
  - S7150516: [macosx] appletviewer shouldn't link against libX11 on the Mac
  - S7150637: No newline emitted after XML decl in XSLT output
  - S7151070: NullPointerException in Resolve.isAccessible
  - S7151118: Regressions on 7u4 b11 comp. 7u4 b06 on specjvm2008.xml.transform subbenchmark
  - S7151484: NullPointerException caused by a bug in XMLDocumentFragmentScannerImpl
  - S7151573: Fork hs23.1 hsx from hs23.0 for 7u5 and reinitialize build number
  - S7152564: Improve CodeSource.matchLocation(CodeSource) performance
  - S7152608: [macosx] Crash in liblwawt.dylib in AccelGlyphCache_RemoveCellInfo
  - S7152690: Initialization error with charset SJIS_0213 when security manager is enabled
  - S7152784: new hotspot build - hs23-b19
  - S7152800: All tests using the attach API fail with "well-known file is not secure" on Mac OS X
  - S7152811: Issues in client compiler
  - S7152952: [macosx] List rows overlap with enlarged font
  - S7152954: G1: Native memory leak during full GCs
  - S7153184: NullPointerException when calling SSLEngineImpl.getSupportedCipherSuites
  - S7153693: Three 2D_ImageIO tests failed due ImageFormatException on OEL 6.* Unbreakable Kernel x64
  - S7153735: [macosx] Text with diacritics is pasted with broken encoding
  - S7153977: Generate English man pages for JDK 7u4
  - S7154047: [macosx] When we choose print one page in the print dialog,it still prints all the pages.
  - S7154048: [macosx] At least drag twice, the toolbar can be dragged to the left side.
  - S7154062: [macosx] Mouse cursor isn't updated in applets
  - S7154072: [macosx] swallowing key events
  - S7154088: [macosx] Regression: Component.createImage do not inherits component attributes
  - S7154130: Add Mac OS X Instructions to README-builds.html
  - S7154177: [macosx] An invisible owner frame becomes visible upon clicking a child window
  - S7154333: JVM fails to start if -XX:+AggressiveHeap is set
  - S7154480: [macosx] Not all popup menu items are visible
  - S7154505: [macosx] NetBeans sometimes starts with no text rendered
  - S7154516: [macosx] Popup menus have no visible borders
  - S7154677: new hotspot build - hs23-b20
  - S7154724: jdk7u4 test properties missing from jprt.properties
  - S7154758: NLS: 7u4 message drop 20
  - S7154770: NLS: 7u4 man page update
  - S7154809: JDI: update JDI/JDB debugee commandline option parsing
  - S7154822: forward port fix for Bug 13645891 to JDK8 jcmd (1024 byte file size limit issue)
  - S7155051: DNS provider may return incorrect results
  - S7155419: Remove reference to JRockit and commercial features from java man page
  - S7155453: [macosx] re-enable jbb tests in JPRT
  - S7155757: make jdk7u4 the default jprt release for hs23
  - S7156000: Change makefile to reflect refactored classes
  - S7156191: [macosx] Can't type into applet demos in Pivot
  - S7156194: [macosx] Can't type non-ASCII characters into applets
  - S7156657: Version 7 doesn't support translucent popup menus against a translucent window
  - S7156729: PPC: R_PPC_REL24 relocation error related to some libraries built without -fPIC
  - S7156831: The jcmd man page is not included in generated bundles
  - S7156842: test/java/util/zip/ZipFile/vmcrash.zip triggers McAffe virus warning
  - S7156960: Incorrect copyright headers in parts of the Serviceability agent
  - S7156963: Incorrect copyright header in java/io/SerialCallbackContext
  - S7157141: crash in 64 bit with corrupted oops
  - S7157296: FDS: ENABLE_FULL_DEBUG_SYMBOLS flag should only affect OPT builds
  - S7157365: jruby/bench.bench_timeout crashes with JVM internal error
  - S7157608: One feature is not recognized.
  - S7157609: Issues with loop
  - S7157610: NullPointerException occurs when parsing XML doc
  - S7157659: [macosx] Landscape Printing orientation doesn't work
  - S7157855: jvisualvm.1 not included in binaries
  - S7157903: JSSE client sockets are very slow
  - S7158067: FDS: ENABLE_FULL_DEBUG_SYMBOLS flag should only affect product builds
  - S7158116: Bump the hs23.1 build number to b02
  - S7158135: new hotspot build - hs23-b21
  - S7158366: [macosx] Print-to-file dialog doesn't have an entry field for a name
  - S7158457: division by zero in adaptiveweightedaverage
  - S7158483: (tz) Support tzdata2012c
  - S7158712: Synth Property "ComboBox.popupInsets" is ignored
  - S7158800: Improve storage of symbol tables
  - S7158928: [macosx] NLS: Please change the mnemonic assignment system
  - S7159016: Static import of member in processor-generated class fails in JDK 7
  - S7159266: [macosx] ApplicationDelegate should not be set in the headless mode
  - S7159320: change default ZIP_DEBUGINFO_FILES back to '1' after fix for 7133529 is available
  - S7159381: [macosx] Dock Icon defaults to Generic Java Application Category
  - S7159766: Tiered compilation causes performance regressions
  - S7160293: [macosx] FileDialog appears on secondary display
  - S7160539: JDeveloper crashes on 64-bit Windows
  - S7160623: [macosx] Editable TextArea/TextField are blocking GUI applications from exit
  - S7160677: missing else in fix for 7152811
  - S7160757: Problem with hotspot/runtime_classfile
  - S7160895: tools/launcher/VersionCheck.java attempts to launch .debuginfo
  - S7161105: unused classes in jdk7u repository
  - S7161766: [macosx] javax/swing/JPopupMenu/6694823/bug6694823.java failed on Mac OS X
  - S7161881: (dc) DatagramChannel.bind(null) fails if IPv4 socket and running with preferIPv6Addresses=true
  - S7162043: Add headless mode tests to problem list [macosx]
  - S7162144: Missing AWT thread in headless mode in 7u4 b06
  - S7162440: Fix typo in BUNDLE_ID-related macro names
  - S7162440: Fix typo in BUNDLE_ID variable so it can be overridden
  - S7162440: Fix typo in macro so BUNDLE_ID can be overridden
  - S7162902: Umbrella port of a number of corba bug fixes from JDK 6 to jdk7u/8
  - S7163117: Agent can't connect to process on Mac OSX
  - S7163470: Licensee source bundle build failed with CipherSpi not found (7u4)
  - S7163471: Licensee source bundle failed around 7u4
  - S7163524: Add SecTaskAccess attribute to jstack [macosx]
  - S7163621: Bump the hs23.1 build number to b03
  - S7164344: enabling ZIP_DEBUGINFO_FILES causes unexpected test failures on Solaris and Windows
  - S7165060: dtrace tests fail with FDS debug info files
  - S7165257: Add JFR tests to the JDK code base
  - S7165598: enable FDS on Solaris X64 when 7165593 is fixed
  - S7165628: Issues with java.lang.invoke.MethodHandles.Lookup
  - S7165725: JAVA6 HTML PARSER CANNOT PARSE MULTIPLE SCRIPT TAGS IN A LINE CORRECTLY
  - S7165755: OS Information much longer on linux than other platforms
  - S7166437: [macosx] Support for Window.Type.UTILITY on the Mac
  - S7166498: JVM crash in ClassVerifier
  - S7166570: JSSE certificate validation has started to fail for certificate chains
  - S7166687: InetAddress.getLocalHost().getHostName() returns FQDN
  - S7166956: Integrate the Java Access Bridge with Java Runtime
  - S7167028: new hotspot build - hs23.2-b01
  - S7167142: Consider a warning when finding a .hotspotrc or .hotspot_compiler file that isn't used
  - S7167157: jcmd command file parsing does not respect the "stop" command
  - S7167254: Crash on OSX in Enumerator.nextElement() with compressed oops
  - S7167266: missing copyright notes in 3rd party code
  - S7167359: (tz) SEGV on solaris if TZ variable not set
  - S7167406: (Zero) Fix for InvokeDynamic needed
  - S7167625: Adjustments for SE-Embedded build process
  - S7168098: Adjustments for SE-Embedded build process
  - S7168110: Misleading jstack error message
  - S7168191: Signature validation can fail under certain circumstances
  - S7168249: new hotspot build - hs23.2-b02
  - S7168374: Upgrade of XML components to JAXB 2.2.4-2, SAAJ 1.3.16, JAXWS 2.2.4-1
  - S7168505: (bf) MappedByteBuffer.load does not load buffer's content into memory
  - S7168520: No jdk8 TL Nightly linux builds due to broken link in b39-2012-05-13_231
  - S7168550: [macosx] duplicate OGL context state changes related to vertex cache
  - S7169050: (se) Selector.select slow on Solaris due to insertion of POLLREMOVE and 0 events
  - S7169111: Unreadable menu bar with Ambiance theme in GTK L&F
  - S7169226: NLS: Please change the mnemonic assignment system for windows and motif properties
  - S7169782: C2: SIGSEGV in LShiftLNode::Ideal(PhaseGVN*, bool)
  - S7170009: new hotspot build - hs23.2-b03
  - S7170145: C1 doesn't respect the JMM with volatile field loads
  - S7170169: (props) System.getProperty("os.name") should return "Windows 8" when run on Windows 8
  - S7170197: Update JPRT default build targets to support embedded builds
  - S7170203: TEST_BUG: test/java/nio/MappedByteBuffer/Truncate.java failing intermittently
  - S7170275: os::print_os_info needs to know about Windows 8
  - S7170449: Management is completely broken at least on Solaris 11 X86
  - S7170657: [macosx] There seems to be no keyboard/mouse action to select non-contiguous items in List
  - S7170716: JVM crash when opening an AWT app from a registered file.
  - S7171163: [macosx] Shortcomings in the design of the secondary native event loop made JavaFX DnD deadlock
  - S7171223: Building ExtensionSubtables.cpp should use -fno-strict-aliasing
  - S7171653: 32-bit cross-compile on 64-bit build host generates 64-bit data for awt/X11 leading to crash
  - S7171703: JNI DefineClass crashes client VM when first parameter is NULL
  - S7171852: new hotspot build - hs23.2-b04
  - S7172430: [macosx] debug message in non debug jdk build
  - S7172552: jabswitch utility should not request elevated privilege on the system
  - S7172708: 32/64 bit type issues on Windows after Mac OS X port
  - S7172722: Latest jdk7u from OSX broke universal build
  - S7173329: Fix build broken by 7126277 to jdk7u-dev
  - S7173432: Handle null key at HashMap resize
  - S7173436: new hotspot build - hs23.2-b05
  - S7173487: [macosx] Problems with popup menus, tooltips and dialog boxes in dual monitor setup
  - S7173515: (se) Selector.open fails with OOME on Solaris when unlimited file descriptors
  - S7173635: jprt.properties should include release jdk7u6
  - S7173645: (props) System.getProperty("os.name") should return "Windows Server 2012" for Windows Server 2012
  - S7173918: set alternative string hashing threshold.
  - S7174244: NPE in Krb5ProxyImpl.getServerKeys()
  - S7174363: Arrays.copyOfRange leads to VM crash with -Xcomp -server if executed by testing framework
  - S7174510: 19 JCK compiler tests fail with C2 error: memNode.cpp:812 - ShouldNotReachHere
  - S7174645: Could not enable access bridge
  - S7174704: [macosx] New issue in 7u6 b12: HeadlessPrintingTest failure
  - S7174718: [macosx] Regression in 7u6 b12: PopupFactory leaks DefaultFrames.
  - S7174736: JCK test api/java_util/HashMap/index_EntrySet failing
  - S7174861: all/OPT jdk build on Solaris with FDS enabled sets wrong options
  - S7174928: JSR 292: unresolved invokedynamic call sites deopt and osr infinitely
  - S7174970: NLS [ccjk] Extra mnemonic keys at standard filechooserdialog (open and save) in metal L&F
  - S7175133: jinfo failed to get system properties after 6924259
  - S7175255: symlinks are wrong, which caused jdk8-promote-2 to fail (client/64/64 directories in debuginfo zips)
  - S7175331: Remove FDS files from embedded JRE images
  - S7175367: NLS: 7u6 message drop10 integration
  - S7175516: new hotspot build - hs23.2-b06
  - S7175758: Improve unit test of Map iterators and Iterator.remove()
  - S7175802: Missing jdk_jfr in top-level make file
  - S7175845: "jar uf" changes file permissions unexpectedly
  - S7176630: (sc) SocketChannel.write does not write more than 128k when channel configured blocking [win]
  - S7176784: Windows authentication not working on some computers
  - S7176894: back out LocaleNames_xx.properties files from 7u6 message drop10
  - S7177128: SA cannot get correct system properties after 7126277
  - S7177144: [macosx] Drag and drop not working (regression in 7u6)
  - S7177173: [macosx] JFrame.setExtendedState(JFrame.MAXIMIZED_BOTH) not working as expected in JDK 7
  - S7177216: native2ascii changes file permissions of input file
  - S7177365: new hotspot build - hs23.2-b07
  - S7177617: TEST_BUG: java/nio/channels/AsyncCloseAndInterrupt.java failing (win)
  - S7177701: error: Filling jar message during javax/imageio/metadata/IIOMetadataFormatImpl compilation
  - S7178079: REGRESSION: Some AWT Drag-n-Drop tests fail since JDK 7u6 b13
  - S7178113: build environment change
  - S7178483: Change version string for Embedded releases
  - S7178548: Hashtable alternative hashing threshold default ignored
  - S7178670: runtime/7158800/BadUtf8.java fails in SymbolTable::rehash_table
  - S7179138: Incorrect result with String concatenation optimization
  - S7179194: new hotspot build - hs23.2-b08
  - S7179349: [macosx] Java processes on Mac should not use default Apple icon
  - S7179759: ENV: Nightly fails during jdk copiyng for solaris platforms after FDS unzipping
  - S7180240: Disable alternative string hashing by default
  - S7180621: Hashtable has incorrect alternative hashing threshold default value
  - S7180884: new hotspot build - hs23.2-b09
  - S7180907: Jarsigner -verify fails if rsa file used sha-256 with authenticated attributes
  - S7181027: [macosx] Unable to use headless mode
  - S7181200: JVM new hashing code breaks SA in product mode
  - S7182135: Impossible to use some editors directly
  - S7182226: NLS: jdk7u6 message drop20 integration
  - S7182500: OCSP revocation checking fails if OCSP responce does not contain certificates
  - S7182902: [macosx] Test api/java_awt/GraphicsDevice/indexTGF.html#SetDisplayMode fails on Mac OS X 10.7
  - S7182971: Need to include documentation content for JCMD man page
  - S7183209: Backout 7105952 changes for jdk7u
  - S7183251: Netbeans editor renders text wrong on JDK 7u6 build
  - S7183292: HttpURLConnection.getHeaderFields() throws IllegalArgumentException: Illegal cookie name
  - S7184145: (pack200) pack200 --repack throws NullPointerException when JAR file specified without path
  - S7184401: JDk7u6 : Missing main menu bar in Netbeans after fix for 7162144
  - S7184845: Apps6: menu tree bean in form throws npe in jre 7 while closing
  - S7184951: [macosx] Exception at java.awt.datatransfer on headless mode (only in GUI session)
  - S7185512: The printout doesn't match image on screen.
  - S7188168: 7071904 broke the DEBUG_BINARIES option on Linux
  - S7190813: (launcher) RPATH needs to have additional paths

New in release 2.2.1 (2012-06-12):

* Security fixes
  - S7079902, CVE-2012-1711: Refine CORBA data models
  - S7110720: Issue with vm config file loadingIssue with vm config file loading
  - S7143606, CVE-2012-1717: File.createTempFile should be improved for temporary files created by the platform.
  - S7143614, CVE-2012-1716: SynthLookAndFeel stability improvement
  - S7143617, CVE-2012-1713: Improve fontmanager layout lookup operations
  - S7143851, CVE-2012-1719: Improve IIOP stub and tie generation in RMIC
  - S7143872, CVE-2012-1718: Improve certificate extension processing
  - S7145239: Finetune package definition restriction
  - S7152811, CVE-2012-1723: Issues in client compiler
  - S7157609, CVE-2012-1724: Issues with loop
  - S7160677: missing else in fix for 7152811
  - S7160757, CVE-2012-1725: Problem with hotspot/runtime_classfile
  - S7165628, CVE-2012-1726: Issues with java.lang.invoke.MethodHandles.Lookup

New in release 2.1.1 (2012-06-12):

* Security fixes
  - S7079902, CVE-2012-1711: Refine CORBA data models
  - S7110720: Issue with vm config file loadingIssue with vm config file loading
  - S7143606, CVE-2012-1717: File.createTempFile should be improved for temporary files created by the platform.
  - S7143614, CVE-2012-1716: SynthLookAndFeel stability improvement
  - S7143617, CVE-2012-1713: Improve fontmanager layout lookup operations
  - S7143851, CVE-2012-1719: Improve IIOP stub and tie generation in RMIC
  - S7143872, CVE-2012-1718: Improve certificate extension processing
  - S7145239: Finetune package definition restriction
  - S7152811, CVE-2012-1723: Issues in client compiler
  - S7157609, CVE-2012-1724: Issues with loop
  - S7160677: missing else in fix for 7152811
  - S7160757, CVE-2012-1725: Problem with hotspot/runtime_classfile
  - S7165628, CVE-2012-1726: Issues with java.lang.invoke.MethodHandles.Lookup
* Bug fixes
  - PR885: IcedTea7 does not build scripting support
  - Fix bug whereby JPEG_LIBS were not set by jdk_generic_profile.sh
  - S7150392: Linux build breaks with GCC 4.7 due to unrecognized option
  - Support glib >= 2.32.
* ARM port
  - Add arm_port from IcedTea 6
  - added jvmti event generation for dynamic_generate and compiled_method_load events to ARM JIT compiler
  - Adjust saved SP when safepointing.
  - ARM: First cut of invokedynamic
  - ARM: JIT-compilation of ldc methodHandle
  - Changes for HSX22
  - corrected call from fast_method_handle_entry to CppInterpreter::method_handle_entry so that thread is loaded into r2
  - Don't save locals at a return.
  - Fix JIT bug that miscompiles org.eclipse.ui.internal.contexts.ContextAuthority.sourceChanged
  - invokedynamic and aldc for JIT
  - Minor review cleanups.
  - modified safepoint check to rely on memory protect signal instead of polling
  - patched method handle adapter code to deal with failures in TCK
  - Phase 1
  - Phase 2
  - RTC Thumb2 JIT enhancements.
  - Zero fails to build in hsx22+, fix for hsx22 after runs gamma OK, hsx23 still nogo.
  - Use ldrexd for atomic reads on ARMv7.
  - Use unified syntax for thumb code.

New in release 2.2 (2012-05-30):

* Bug fixes
  - PR885: IcedTea7 does not build scripting support
  - Support glib >= 2.32.
  - Fix build on GCC 4.7.
  - Allow downloading to be disabled.
  - Stop libraries being stripped in the OpenJDK build.
  - PR817: Support kernels that require PaX marking on the JDK binaries.
* PulseAudio
  - PR734: Fix pulse-java latency problem
  - PR758: [regression] javah from 6hg/b23 generates `jlong' from `private int'
  - LP862286: Fix exception on trying to start PulseAudio playback
  - Replace pulse audio enums with static longs.
  - Fix a few concurrency problems in pulse audio.
  - Start PulseAudioTargetDataLines in the corked state.
* SystemTap
  - Support multiple running HotSpots by indexing globals by pid()
  - Don't hard code constantPoolOopDesc_size.
  - Use @var construct if available.
  - Wrap heap accessors in try-catch block.
  - Change symbolOopDesc to Symbol to accomodate S6990754.
  - Add tapset tests.
  - jstaptest.pl: thread_start and stop thread id can be any positive number.
* OpenJDK
  - Don't create debuginfo files if not stripping.
  - Fix bug whereby JPEG_LIBS were not set by jdk_generic_profile.sh
  - Generalise ucrypto cryptography tests.
  - Make {HOST,BUILD}_{GCC,CPP} work again, post build-infra changes.  Rename {HOST_BUILD}_CPP to {HOST_BUILD}_CXX.
  - Sync JAXP 1.4.5 update 1 for 7u4 to existing sources
  - Remove duplicate JAXP sources from upstream and move our JAXP sources into same position.
  - Normalise whitespace following test changes.
  - Rename GIO typedef header to avoid conflicts with system GIO header pulled in by Gtk+.
  - Skip wrap mode tests if wrap mode is not available.
  - Zero fails to build in hsx22+, fix for hsx22 after runs gamma OK, hsx23 still nogo.
  - Support systems with outdated versions of gio 2.0.
  - Turn off strict aliasing for ExtensionSubtables.cpp
  - S6205776: Some KeyboardFocusManager methods are unsafe
  - S6330863: vm/gc/InfiniteList.java fails intermittently due to timeout
  - S6351654: (tz) java.util.TimeZone.setDefault() should be controlled by a security manager
  - S6484965: G1: piggy-back liveness accounting phase on marking
  - S6484982: G1: process references during evacuation pauses
  - S6505523: NullPointerException in BasicTreeUI when a node is removed by expansion listener
  - S6593758: RFE: Enhance GC ergonomics to dynamically choose ParallelGCThreads
  - S6636110: unaligned stackpointer leads to crash during deoptimization
  - S6671616: TEST_BUG: java/io/File/BlockIsDirectory.java fails when /dev/dsk empty (sol)
  - S6679764: enable parallel compaction by default
  - S6802962: java/awt/FontClass/CreateFont/fileaccess/FontFile.java failed on 5u8b01 and 6u13b01
  - S6865265: JVM crashes with "missing exception handler" error
  - S6868690: TEST:java/awt/FontClass/CreateFont/BigFont.java test should be modified in jdk7&8 to run via jtreg
  - S6879539: enable empty password support for pkcs12 keystore
  - S6888336: G1: avoid explicitly marking and pushing objects in survivor spaces
  - S6890673: Eliminate allocations immediately after EA
  - S6972759: Step over not working after thrown exception and Pop
  - S6976060: G1: humongous object allocations should initiate marking cycles when necessary
  - S7003454: order constants in constant table by number of references in code
  - S7003595: IncompatibleClassChangeError with unreferenced local class with subclass
  - S7005808: G1: re-enable ReduceInitialCardMarks for G1
  - S7009098: SA cannot open core files larger than 2GB on Linux 32-bit
  - S7010561: Tab text position with Synth based LaF is different to Java 5/6
  - S7012206: ~20 tools tests failing due to -XX:-UsePerfData default in Java SE Embedded
  - S7013347: allow crypto functions to be called inline to enhance performance
  - S7017458: (cal) Multithreaded deserialization of Calendar leads to ClassCastException
  - S7021322: assert(object_end <= top()) failed: Object crosses promotion LAB boundary
  - S7022100: Method annotations are incorrectly set when redefining classes
  - S7022407: Spinning CPU in LocaleObjectCache.get()
  - S7027061: Testcase failure: java/util/Locale/Bug6989440.java - java.util.ConcurrentModificationException
  - S7030453: JSR 292 ClassValue.get method is too slow
  - S7033170: Cipher.getMaxAllowedKeyLength(String) throws NoSuchAlgorithmException
  - S7045132: sun.security.util.Resources_pt_BR.java translation error
  - S7045232: G1: pool names are inconsistent with other collectors (don't have 'Space')
  - S7046238: new InitialContext(); hangs
  - S7046929: tools/javac/api/T6397104.java fails
  - S7047200: keytool safe store
  - S7050298: ARM: SIGSEGV in JNIHandleBlock::allocate_handle
  - S7051189: Need to suppress info message if -xcheck:jni used with libjsig.so
  - S7051769: java.text.Bidi.toString() output is wrong
  - S7053252: New regression test does not compile on windows-amd64
  - S7053556: An implementation-specific feature in Oracle's JAXP: to allow disable the use of services mechanism
  - S7054590: (JSR-292) MethodHandleProxies.asInterfaceInstance() accepts private/protected nested interfaces
  - S7057935: com/sun/nio/sctp tests should be moved out of jdk_nio and into their own target, jdk_sctp
  - S7058133: Javah should use the freshly built classes instead of those from the BOOTDIR jdk
  - S7059019: G1: add G1 support to the SA
  - S7059039: EA: don't change non-escaping state of NULL pointer
  - S7059047: EA: can't find initializing store with several CheckCastPP
  - S7059899: Stack overflows in Java code cause 64-bit JVMs to exit due to SIGSEGV
  - S7064302: JDK7 build 147 crashed after testing my java 6-compiled web app
  - S7064927: retransformClasses() does not pass in LocalVariableTable of a method
  - S7066129: GarbageCollectorMXBean#getLastGcInfo leaks native memory
  - S7068215: G1: Print reference processing time during remark
  - S7068595: html files in class-use dir do not get loaded correctly when Frames link is clicked
  - S7069991: Setup make/jprt.properties files for jdk8
  - S7071311: Decoder enhancement
  - S7073906: Locale.getDefault() returns wrong Locale for Java SE 7
  - S7075646: G1: fix inconsistencies in the monitoring data
  - S7076523: TEST_BUG: test/java/net/NetworkInterface/NetParamsTest.java can fail with NPE
  - S7077172: KerberosTime does not take into account system clock adjustement
  - S7077312: Provide a CALL effect for instruct declaration in the ad file
  - S7077640: gss wrap for cfx doesn't handle rrc != 0
  - S7077646: gssapi wrap for CFX per-message tokens always set FLAG_ACCEPTOR_SUBKEY
  - S7077803: java.lang.InternalError in java.lang.invoke.MethodHandleNatives.init
  - S7078460: JDialog is shown as separate icon on the taskbar
  - S7078465: G1: Don't use the undefined value (-1) for the G1 old memory pool max size
  - S7078816: /test/sun/security/pkcs11/KeyStore/SecretKeysBasic.sh failure
  - S7079012: test/java/net/NetworkInterface/NetParamsTest.java fails with SocketException getting mac address
  - S7079904: corba issue
  - S7080203: JTree.getSelectionPaths() now returns empty array instead of null
  - S7081670: Disposing an AppContext can lead to a spinning EventDispatchThread
  - S7081783: jarsigner error when no $HOME/.keystore
  - S7081842: assert(Compile::current()->unique() < (uint)MaxNodeLimit) failed: Node limit exceeded
  - S7081933: Use zeroing elimination optimization for large array
  - S7081938: JSR292: assert(magic_number_2() == MAGIC_NUMBER_2) failed
  - S7082294: nsk/regression/b4265661 crashes on windows
  - S7082299: AtomicReferenceArray should ensure that array is Object[]
  - S7082443: JComboBox not backward compatible (with Java 6)
  - S7082553: Interpret Thread.setPriority(Thread.MAX_PRIORITY) to mean FX60 on Solaris 10 and 11
  - S7083621: Add fontconfig file for OEL6 and rename RH/O EL 5 file so that it is picked up for all 5.x updates
  - S7085024: internal error; cannot instantiate Foo
  - S7085860: JSR 292: implement CallSite.setTargetNormal and setTargetVolatile as native methods
  - S7086533: G1: assert(!_g1->is_obj_dead(obj)): We should not be preserving dead objs: g1CollectedHeap.cpp:3835
  - S7086586: Inference producing null type argument
  - S7086595: Error message bug: name of initializer is 'null'
  - S7086601: Error message bug: cause for method mismatch is 'null'
  - S7087727: JSR 292: C2 crash if ScavengeRootsInCode=2 when "static final" MethodHandle constants are in use
  - S7088367: JavaSound security issue (12865443)
  - S7088680: G1: Cleanup in the G1CollectorPolicy class
  - S7088989: Improve the performance for T4 by utilizing the newly provided crypto APIs
  - S7089790: integrate bsd-port changes
  - S7089889: Krb5LoginModule.login() throws an exception if used without a keytab
  - S7090832: Some locale info are not localized for some languages.
  - S7090904: JSR 292: JRuby junit test crashes in PSScavengeRootsClosure::do_oop
  - S7090968: Allow adlc register class to depend on runtime conditions
  - S7090976: Eclipse/CDT causes a JVM crash while indexing C++ code
  - S7091003: ScheduledExecutorService never executes Runnable with corePoolSize of zero
  - S7091032: G1: assert failure when NewRatio is used
  - S7091366: re-enable quicksort tests
  - S7091388: Regular unexplained npe's from corba libs after few days
  - S7091417: recvfrom's 6th input should be of type socklen_t
  - S7091545: hs23 - set hotspot version & build number
  - S7091764: Tiered: enable aastore profiling
  - S7092236: java/util/EnumSet/EnumSetBash.java fails
  - S7092238: G1: Uninitialized field gc_efficiency in G1PrintRegionLivenessInfo output
  - S7092245: G1: Wrong format specifier in G1PrintRegionLivenessInfo header output
  - S7092278: "jmap -finalizerinfo" throws "sun.jvm.hotspot.utilities.AssertionFailure: invalid cp index 0 137"
  - S7092309: G1: introduce old region set
  - S7092412: G1: Some roots not marked during an initial mark that gets an evacuation failure
  - S7092627: use agentvm mode instead of samevm in regtests
  - S7092712: JSR 292: unloaded invokedynamic call sites can lead to a crash with signature types not on BCP
  - S7092744: XMLEncoder fails to encode and breaks backward compatibility
  - S7092825: javax.crypto.Cipher.Transform.patternCache is synchronizedMap and became scalability bottleneck.
  - S7093090: Reduce synchronization in java.security.Policy.getPolicyNoCheck
  - S7093690: JSR292: SA-JDI AssertionFailure: Expected raw sp likely got real sp, value was
  - S7094138: JSR 292: JRuby junit test fails in CallSite.setTargetNormal: obj->is_oop() failed: sanity check
  - S7094155: JSR105 code throws javax.xml.crypto.URIReferenceException when running into Java 7 VM
  - S7094377: Com.sun.jndi.ldap.read.timeout doesn't work with ldaps.
  - S7095194: G1: HeapRegion::GrainBytes, GrainWords, and CardsPerRegion should be size_t
  - S7095236: G1: _markedRegions never contains NULL regions
  - S7095243: Disambiguate ReferenceProcessor::_discoveredSoftRefs
  - S7095949: java/net/URLConnection/RedirectLimit.java and Redirect307Test fail intermittently
  - S7095980: Ensure HttpURLConnection (and supporting APIs) don't expose HttpOnly cookies
  - S7096010: c2: running with +PrintOptoAssembly crashes the VM when $constanttablebase is used
  - S7096016: SA build still produces "arg list too long" errors
  - S7096030: G1: PrintGCDetails enhancements
  - S7096124: Bump the hs23 build number to 02
  - S7096278: Update the VM name to indicate it is an embedded build
  - S7096366: PPC: corruption of floating-point values with DeoptimizeALot
  - S7096639: Tiered: Incorrect counter overflow handling for inlined methods
  - S7097002: G1: remove a lot of unused / redundant code from the G1CollectorPolicy class
  - S7097048: G1: extend the G1 SA changes to print per-heap space information
  - S7097053: G1: assert(da ? referent->is_oop() : referent->is_oop_or_null()) failed: referenceProcessor.cpp:1054
  - S7097436: Project Coin: duplicate varargs warnings on method annotated with @SafeVarargs
  - S7097516: G1: assert(0<= from_card && from_card<HeapRegion::CardsPerRegion) failed: Must be in range.
  - S7097546: Optimize use of CMOVE instructions
  - S7097586: G1: improve the per-space output when using jmap -heap
  - S7097679: Tiered: events with bad bci to Gotos reduced from Ifs
  - S7098085: G1: partially-young GCs not initiated under certain circumstances
  - S7098194: integrate macosx-port changes
  - S7098282: G1: assert(interval >= 0) failed: Sanity check, referencePolicy.cpp: 76
  - S7098528: crash with java -XX:+ExtendedDTraceProbes
  - S7098530: tools/javac/javazip/Test.sh can fail on Windows
  - S7099017: jdk7u2-dev does not build
  - S7099228: Use a PKCS11 config attribute to control encoding of an EC point
  - S7099454: /bin/sh does not support syntax used in the src/os/posix/launcher/launcher.script shell script
  - S7099658: Properties.loadFromXML fails with ClassCastException
  - S7099817: CMS: +FLSVerifyLists +FLSVerifyIndexTable asserts: odd slot non-empty, chunk not on free list
  - S7099824: G1: we should take the pending list lock before doing the remark pause
  - S7099849: G1: include heap region information in hs_err files
  - S7100165: JSR 292: leftover printing code in methodHandleWalk.cpp
  - S7100757: The BitSet.nextSetBit() produces incorrect result in 32bit VM on Sparc
  - S7100935: win32: memmove is not atomic but is used for pd_conjoint_*_atomic operations
  - S7101096: Bump the hs23 build number to 03
  - S7101642: JSR 292: SIGSEGV in java.lang.invoke.MethodHandleImpl$FieldAccessor.getFieldI(Ljava/lang/Object;)I
  - S7101882: 2 tests fail in 7u4 workspace with new inference change
  - S7102044: G1: VM crashes with assert(old_end != new_end) failed: don't call this otherwise
  - S7102191: G1: assert(_min_desired_young_length <= initial_region_num) failed: Initial young gen size too small
  - S7102657: JSR 292: C1 deoptimizes unlinked invokedynamic call sites infinitely
  - S7102776: Pack instanceKlass boolean fields into single u1 field
  - S7103224: collision between __LEAF define in interfaceSupport.hpp and /usr/include/sys/cdefs.h with gcc
  - S7103261: crash with jittester on sparc
  - S7103380: assertion failure with -XX:+PrintNativeNMethods
  - S7103619: Bump the hs23 build number to 04
  - S7103665: HeapWord*ParallelScavengeHeap::failed_mem_allocate(unsigned long,bool)+0x97
  - S7103784: enable some flags by default
  - S7104173: sun/tools tests fail with debug build after 7012206
  - S7104177: Tiered: -XX:+PrintCanonicalization doesn't work with -XX:+TieredCompilation
  - S7104561: UseRDPCForConstantTableBase doesn't work after shorten branches changes
  - S7104625: sun.awt.X11.XEvent is creating 600 MB of char[] for no good reason
  - S7104647: Adding a diagnostic command framework
  - S7104960: JSR 292: +VerifyMethodHandles in product JVM can overflow buffer
  - S7105040: [macosx] closed/javax/swing/JPopupMenu/4966112/bug4966112.java deadlocks on MacOS
  - S7105163: CMS: some mentions of MinChunkSize should be IndexSetStart
  - S7105275: wrong tag added to jdk7u master repos
  - S7105305: assert check_method_context proper context
  - S7105364: JDK8 b10 hotspot: src/share/vm/ci/ciMethodHandle.cpp Error: Use "." or "->"
  - S7105529: XAWT: Optimize getFieldsAsString() methods generated by WrapperGenerator
  - S7105605: Use EA info to optimize pointers compare
  - S7105611: Set::print() is broken
  - S7105890: closed/javax/swing/JScrollBar/4708809/bug4708809.java deadlocks on MacOS
  - S7106024: CMS: Removed unused code for precleaning in remark phase
  - S7106092: Bump the hs23 build number to 05
  - S7106277: Brokenness in the seqNumberOverflow of MAC
  - S7106751: G1: gc/gctests/nativeGC03 crashes VM with SIGSEGV
  - S7106766: Move the precompiled header from the src/share/vm directory
  - S7106773: 512 bits RSA key cannot work with SHA384 and SHA512
  - S7106774: JSR 292: nightly test inlineMHTarget fails with wrong result
  - S7106907: 64 bit VM fails test compiler/6865265/StackOverflowBug.java
  - S7106944: assert(_pc == *pc_addr) failed may be too strong
  - S7107042: assert(no_dead_loop) failed: dead loop detected
  - S7107063: Fork hs22.1 hsx from hs22.0 for 7u3 and reinitialize build number
  - S7107099: JScrollBar does not show up even if there are enough lebgth of textstring in textField
  - S7107585: Test incorrect calculate position of object on frame
  - S7108242: jinfo -permstat shouldn't report interned strings as part of perm
  - S7108264: Fix for 7104173 is insufficient
  - S7108383: JSR 292: JRuby bench_define_method_methods.rb: assert(slow_jvms != NULL) failed: miss path must not
  - S7108553: Bump the hs23 build number to 06
  - S7109063: JSR 292: fix for 7085860 is incomplete
  - S7109085: Test use hotkeys not intended for Mac
  - S7109092: Wrong computation results with double at armsflt
  - S7109617: Test was writed for Metal L&F but not set it
  - S7109837: Provide a mechanism for computing an Adler32 checksum for the contents of a ByteBuffer
  - S7109885: security baseline for 7u2 or above is not set correctly
  - S7109887: java/util/Arrays/CopyMethods.java fails with -XX:+DeoptimizeALot
  - S7109962: [macosx] closed/javax/swing/JList/6462008/bug6462008.java fails on MacOS
  - S7110017: is_headless_jre should be updated to reflect the new location of awt toolkit libraries
  - S7110058: change default for ScavengeRootsInCode to 2
  - S7110104: It should be possible to stop and start JMX Agent at runtime
  - S7110152: assert(size_in_words <= (julong)max_jint) failed: no overflow
  - S7110173: GCNotifier::pushNotification publishes stale data.
  - S7110190: GCCause::to_string missing case for _adaptive_size_policy
  - S7110428: Crash during HeapDump operation
  - S7110440: closed/javax/swing/JScrollBar/4865918/bug4865918.java fails on Aqua L&F
  - S7110489: C1: 64-bit tiered with ForceUnreachable: assert(reachable(src)) failed: Address should be reachable
  - S7110586: C2 generates incorrect results
  - S7110700: Enhance exception throwing mechanism in ObjectStreamClass
  - S7110718: -XX:MarkSweepAlwaysCompactCount=0 crashes the JVM
  - S7110815: closed/javax/swing/JSplitPane/4885629/bug4885629.java unstable on MacOS
  - S7110824: ctw/jarfiles/GUI3rdParty_jar/ob_mask_DateField crashes VM
  - S7110832: ctw/.../org_apache_avalon_composition_util_StringHelper crashes the VM
  - S7111138: delete the obsolete flag -XX:+UseRicochetFrames
  - S7111795: G1: Various cleanups identified during walk through of changes for 6484965
  - S7111903: (tz) Windows-only: tzmappings needs update for KB2570791
  - S7112034: Parallel CMS fails to properly mark reference objects
  - S7112085: assert(fr.interpreter_frame_expression_stack_size()==0) failed: only handle empty stacks
  - S7112298: remove security baseline sanity check
  - S7112308: Fix Visual Studio build for precompiled header
  - S7112413: JVM Crash, possibly GC-related
  - S7112478: after 7105605 JRuby bench_define_method_methods.rb fails with NPE
  - S7112642: Incorrect checking for graphics rendering object
  - S7112743: G1: Reduce overhead of marking closure during evacuation pauses
  - S7112854: [macosx] closed/javax/swing/JPopupMenu/Test6827786.java unstable on MacOS
  - S7112925: closed/javax/swing/JTabbedPane/4624207/bug4624207.java fails on MacOS
  - S7112931: closed/javax/swing/JTabbedPane/6416920/bug6416920.java fails on MacOS
  - S7112997: Remove obsolete code ResetObjectsClosure and VerifyUpdateClosure
  - S7113006: G1: excessive ergo output when an evac failure happens
  - S7113012: G1: rename not-fully-young GCs as "mixed"
  - S7113021: G1: automatically enable young gen size auto-tuning when -Xms==-Xmx
  - S7113275: compatibility issue with MD2 trust anchor and old X509TrustManager
  - S7113337: Swing closed test tries to click in the area reserved for resize by Mac OS X
  - S7113349: Initial changset for Macosx port to jdk7u
  - S7113503: Bump the hs23 build number to 07
  - S7113740: hotspot_version file has wrong JDK_MINOR_VER
  - S7114095: G1: assert(obj == oopDesc::load_decode_heap_oop(p)) failed: p should still be pointing to obj
  - S7114106: C1: assert(goto_state->is_same(sux_state)) failed: states must match now
  - S7114303: G1: assert(_g1->mark_in_progress()) failed: shouldn't be here otherwise
  - S7114376: Make system dictionary hashtable bucket array size configurable
  - S7114611: (fs) DirectoryStream fails with SIGBUS on some embedded platforms, dirent alignment
  - S7115199: Add event tracing hooks and Java Flight Recorder infrastructure
  - S7115357: closed/javax/swing/JTable/6263446/bug6263446Table.java fails on MacOS
  - S7115524: Regression: keytool -printcert -sslserver failure
  - S7115586: (so) Suppress creation of SocketImpl in SocketAdaptor's constructor
  - S7116050: C2/ARM: memory stomping error with DivideMcTests
  - S7116081: USE_PRECOMPILED_HEADER=0 triggers a single threaded build of the JVM
  - S7116189: Export JVM_SetNativeThreadName from Hotspot
  - S7116216: StackOverflow GC crash
  - S7116384: backout the unallowed changes in the KeyboardFocusManager.java javadoc
  - S7116452: Add support for AVX instructions
  - S7116462: Bump the hs21.1 build number to 02
  - S7116481: Commercial features in Hotspot must be gated by a switch
  - S7116634: [macosx] closed/javax/swing/JTree/6263446/bug6263446Tree.java fails on MacOS
  - S7116730: Revert 7116481: Commercial features in Hotspot must be gated by a switch
  - S7116795: Tiered: enable by default for server
  - S7117052: instanceKlass::_init_state can be u1 type
  - S7117110: Remove target 1.5 from jaxp and jaxws repo builds for mac
  - S7117282: assert(base == NULL || t_adr->isa_rawptr() || !phase->type(base)
  - S7117303: VM uses non-monotonic time source and complains that it is non-monotonic
  - S7117389: Add a framework for vendor-specific command line switch extensions to Hotspot
  - S7117469: Warning cleanup for j.u.Currency and j.u.Locale related classes
  - S7117536: new hotspot build - hs23-b08
  - S7117748: SA_APPLE_BOOT_JAVA and ALWAYS_PASS_TEST_GAMMA settings should not be required on MacOS X
  - S7118094: Use of printf on Mac cannot accept format string starting with --
  - S7118095: Add macosx targets to make/jprt.properties file
  - S7118202: G1: eden size unnecessarily drops to a minimum
  - S7118280: The gbyc00102 JCK7 test causes an assert in JVM 7.0 fastdebug mode
  - S7118283: Better input parameter checking in zip file processing
  - S7118648: disable compressed oops by default on MacOS X until 7118647 is fixed
  - S7118773: Fix jdk/test/makefile so it works on the mac
  - S7118809: rcache deadlock
  - S7118863: Move sizeof(klassOopDesc) into the *Klass::*_offset_in_bytes() functions
  - S7119027: G1: use atomics to update RS length / predict time of inc CSet
  - S7119286: JSR292: SIGSEGV in JNIHandleBlock::release_block(JNIHandleBlock*, Thread*)+0x3c
  - S7119294: Two command line options cause JVM to crash
  - S7119584: UseParallelGC barrier task can be overwritten.
  - S7119730: Tiered: SIGSEGV in AdvancedThresholdPolicy::is_method_profiled(methodOop)
  - S7119760: [macosx] The OpenGL queue flusher thread is created in the wrong thread group
  - S7119908: G1: Cache CSet start region for each worker for subsequent reuse
  - S7120038: G1: ParallelGCThreads==0 is broken
  - S7120448: Fix FP values for compiled frames in frame::describe
  - S7120450: complete information dumped by frame_describe
  - S7120468: SPARC/x86: use frame::describe to enhance trace_method_handle
  - S7120511: Add diagnostic commands
  - S7120869: javax/swing/JScrollBar/4708809/bug4708809.java fails on Windows
  - S7120875: fix macos ipv6 issue and update multiple test scripts
  - S7121073: secondary_super_cache memory slice has incorrect bounds in flatten_alias_type
  - S7121110: JAXP 1.4.5 update 1 for 7u4
  - S7121111: -server -Xcomp -XX:+TieredCompilation does not invoke C2 compiler
  - S7121140: Allocation paths require explicit memory synchronization operations for RMO systems
  - S7121368: Remove jdbc-odbc bridge from macosx build
  - S7121373: Clean up CollectedHeap::is_in
  - S7121482: some sun/java2d and sun/awt tests failed with InvalidPipeException since 1.7.0_03b02, 6u31b02
  - S7121496: G1: do the per-region evacuation failure handling work in parallel
  - S7121547: G1: High number mispredicted branches while iterating over the marking bitmap
  - S7121600: Instrumentation.redefineClasses() leaks class bytes
  - S7121618: Change type of number of GC workers to unsigned int.
  - S7121623: G1: always be able to reliably calculate the length of a forwarded chunked array
  - S7121648: Use 3-operands SIMD instructions on x86 with AVX
  - S7121765: closed/javax/swing/JTextArea/4697612/bug4697612.java fails on MacOS on Aqua L&F
  - S7121961: javadoc is missing a resource property
  - S7122001: new hotspot build - hs23-b09
  - S7122054: (tz) Windows-only: tzmappings needs update for KB2633952
  - S7122138: IAE thrown because Introspector ignores synthetic methods
  - S7122149: [macosx] closed/javax/swing/UITest/UITest.java fails on MacOS
  - S7122173: [macosx] Several Regression tests fail on MacOS
  - S7122246: [macosx] JCK swing test CaretTests fails in b205
  - S7122250: [macosx] mouseMoved Events test do not respond in JCK-runtime-7 interactive
  - S7122253: Instrumentation.retransformClasses() leaks class bytes
  - S7122256: scrollbar thumb is not full height in SThumbTest0001
  - S7122780: (macosx) JVMTI Test DemoRun.java doesn't understand macosx .dylibs
  - S7122794: (macosx) DatagramSocket.disconnect() not working
  - S7122796: SunToolkit constructor should create the EventQueue for the Main AppContext
  - S7122880: Extend vendor-specific command interface to include manageable switches
  - S7122939: TraceBytecodes broken with UseCompressedOops
  - S7123022: Fixing some Mac sanity checks
  - S7123100: javac fails with java.lang.StackOverflowError
  - S7123107: [macosx] native ccache
  - S7123108: C1: assert(if_state != NULL) failed: states do not match up
  - S7123165: G1: output during parallel verification can get messed up
  - S7123170: JCK vm/jvmti/ResourceExhausted/resexh001/resexh00101/ tests fails since 7u4 b02
  - S7123229: (coll) EnumMap.containsValue(null) returns true
  - S7123253: C1: in store check code, usage of registers may be incorrect
  - S7123315: instanceKlass::_static_oop_field_count and instanceKlass::_java_fields_count should be u2 type.
  - S7123386: RFE: Preserve universal builds of HotSpot on Mac OS X
  - S7123392: (launcher) fix MacOSX launcher failures
  - S7123519: problems with certification path
  - S7123679: Update regression tests that use os.name to work on MacOSX
  - S7123810: new hotspot build - hs23-b10
  - S7123910: Some CTW tests crash VM: is_loaded() && that->is_loaded()
  - S7123954: Some CTW test crash with SIGSEGV
  - S7124089: (launcher) refactor the launcher code for macosx
  - S7124171: 7u4 l10n message update related to Mac OS X port
  - S7124219: [macosx] Unable to draw images to fullscreen
  - S7124223: [macosx] Regression test failure with new exception, when glyph is positioned explicitly
  - S7124224: [macosx] Port's controls are improperly ordered
  - S7124225: [macosx] Input lines support only current sample rate
  - S7124262: [macosx] Drag events go to a wrong child.
  - S7124272: [macosx] VK_DELETE does produce an extraneous character in a TextArea or TextField
  - S7124283: [macosx] Can't move focus out of a table with the keyboard.
  - S7124286: [macosx] Option modifier should work like AltGr as in Apple jdk 6
  - S7124289: [macosx] Modal behavior difference with and without Robot interaction
  - S7124303: [macosx] SwingSet2 - Control + Spacebar causes hang.
  - S7124306: [macosx] VoiceOver cursor not on currently focused object when app gets focus
  - S7124308: [macosx] JSlider thumb moves to the right direction when it's used as a JTable cell editor
  - S7124316: [macosx] Passive and Peered IMF Client does not cope with input methods
  - S7124321: [macosx] TrayIcon MouseListener is never triggered
  - S7124335: [macosx] Need a java.awt.EmbeddedFrame subclass
  - S7124337: [macosx] FileDialog fails to select multiple files
  - S7124354: [macosx] PopipMenuTest is not functional in JCK-runtime-7 interactive
  - S7124363: [macosx] ClassCastException: CFileDialog cannot be cast to LWWindowPeer
  - S7124364: [macosx] Robot screen capturing functionality doesn't work
  - S7124368: UnsupportedOperationException is thown on getLockingKeyState()
  - S7124373: [macosx] Setting frame icon images causes IllegalArgumentException
  - S7124382: [macosx] Property sun.awt.enableExtraMouseButtons is always 'false'
  - S7124387: [macosx] Application freezes on dispose window, created by JFileChooser
  - S7124393: [macosx] JCheckBox in JTable: checkbox doesn't alaways respond to the first mouse click
  - S7124399: [macosx] All Swing drag-n-drop tests faild
  - S7124428: [macosx] Frame.setExtendedState() doesn't work for undecorated windows
  - S7124430: [macosx] LWCToolkit.grab() and LWCToolkit.ungrab() events are not implemented yet
  - S7124511: [macosx] Strange NullPointerException (err message: 'CFMessagePort: bootstrap_register(): failed 110
  - S7124515: [macosx] Test fail like 6366126 (ArrayIndexOutOfBoundException pressing ENTER after removing items)
  - S7124523: [macosx] b216: Mising part of applet UI
  - S7124524: OutOfMemory exception after (or even before) some 2500 creations of LWWindowPeer
  - S7124528: [macosx] Selection is not cleared properly in text component.
  - S7124530: What is background color of AWT component? (And foreground, for that matter)
  - S7124537: [macosx] Menu shortcuts for all menu items should be disabled if a menu itself is disabled
  - S7124540: [macosx] the Color panel is a black for ColorTest0005
  - S7124543: [macosx] Horizontal scrolling doesn't work
  - S7124552: [macosx] NullPointerException in getBufferStrategy()
  - S7124553: [macosx] Need minimum size for titled Frames and JFrames
  - S7124554: [macosx] JWindow does ignore setAlwaysOnTop property
  - S7124562: [macosx] RobotTest0001 & RobotTest0002 are not functional in JCK-runtime-7 interactive
  - S7124627: Please sync up changes from workspace macosx-port into the jdk7u-osx
  - S7124829: NUMA: memory leak on Linux with large pages
  - S7124994: [macosx] GUI app is stuck in i18n testing (caused by reference cast)
  - S7125044: [macosx] Test failure because Component.transferFocus() works differently in applet and application
  - S7125136: SIGILL on linux amd64 in gc/ArrayJuggle/Juggle29
  - S7125267: TrayIcon removal test invariably crashes on System.exit after successful completion
  - S7125281: G1: heap expansion code is replicated
  - S7125442: jar application located in two bytes character named folder cannot be run with JRE 7 u1/u2
  - S7125456: [macosx] Programmatically selecting List item triggers an ItemEvent
  - S7125491: [macosx] Regression: A component can get unexpected keyTyped event.
  - S7125503: Compiling collectedHeap.cpp fails with -Werror=int-to-pointer-cast with g++ 4.6.1
  - S7125516: G1: ~ConcurrentMark() frees incorrectly
  - S7125594: C-heap growth issue in ThreadService::find_deadlocks_at_safepoint
  - S7125657: [macosx] SpreadSheet demo has the broken display when clicking outside of the table
  - S7125722: [macosx] 7u4 b200 crash i.e. in Tonga
  - S7125723: [macosx] painting artifacts after running SwingSet2 with jdk7u-osx build
  - S7125793: MAC: test_gamma should always work
  - S7125879: assert(proj != NULL) failed: must be found
  - S7125896: Eliminate nested locks
  - S7125934: Add a fast unordered timestamp capability to Hotspot on x86/x64
  - S7126041: jdk7u4 b05 and b06 crash with RubyMine 3.2.4, works well with b04
  - S7126185: Clean up lasterror handling, add os::get_last_error()
  - S7126480: Make JVM start time in milliseconds since the Java epoch available
  - S7126732: MAC: Require Mac OS X builds/tests for JPRT integrate jobs for HotSpot
  - S7126832: com.sun.tools.javac.api.ClientCodeWrapper$WrappedJavaFileManager cannot be cast
  - S7126889: Incorrect SSLEngine debug output
  - S7126960: Add property to limit number of request headers to the HTTP Server
  - S7126979: (props) JCK test java_lang/System/GetProperties.java failing [macosx]
  - S7126993: JCK test api/java_util/jar/Jarfile jarFile0129 failing [macosx]
  - S7127032: fix for 7122253 adds a JvmtiThreadState earlier than necessary
  - S7127104: Build issue with prtconf and zones, also using := to avoid extra execs
  - S7127199: [macosx] test/com/sun/jdi/ShellScaffold.sh needs to include Darwin as a recognized platform
  - S7127448: Regression test scripts for policytool need to recognize Mac OS X
  - S7127660: (macosx) *Socket Async close not working
  - S7127706: G1: re-enable survivors during the initial-mark pause
  - S7127771: (macosx)test/java/net/Socket/TrafficClass.java fails on Mac OS X
  - S7127874: Add handling of MacOSX env variables to ProcessBuilder regression test
  - S7127924: langtools regression tests sometimes fail en-masse on windows
  - S7128352: assert(obj_node == obj) failed
  - S7128355: assert(!nocreate) failed: Cannot build a phi for a block already parsed
  - S7128532: G1: Change default value of G1DefaultMaxNewGenPercent to 80
  - S7128597: [macosx] Program freeze when Swing is used with -XstartOnFirstThread
  - S7128648: HttpURLConnection.getHeaderFields should return an unmodifiable Map
  - S7129083: CookieManager does not store cookies if url is read before setting cookie manager
  - S7129125: TEST_BUG: java/lang/ProcessBuilder/Zombies.java failed on linux with "No such file"
  - S7129164: JNI Get/ReleasePrimitiveArrayCritical doesn't scale
  - S7129225: javac fails to run annotation processors when star import of package of gensrc
  - S7129240: backout fix for 7102776 until 7128770 is resolved
  - S7129271: G1: Interference from multiple threads in PrintGC/PrintGCDetails output
  - S7129284: +DoEscapeAnalysis regression w/ early build of 7u4 (HotSpot 23) on Linux
  - S7129308: Handle different format of OperatingSystemMXBean.getSystemLoadAverage() output on macosx
  - S7129420: [macosx] SplashScreen.getSplashScreen() returns null
  - S7129512: new hotspot build - hs23-b11
  - S7129514: time warp warnings after 7117303
  - S7129618: assert(obj_node->eqv_uncast(obj),"");
  - S7129732: [macosx] JCK failure: no focus transfer back to Window owner
  - S7129825: [macosx] Native activation is not changed when focusing other frame's owned window
  - S7129872: test/sun/security/pkcs11/KeyStore/SecretKeysBasic.sh failing on non-Solaris platforms on 7u4
  - S7129892: G1: explicit marking cycle initiation might fail to initiate a marking cycle
  - S7130241: [macosx] TransparentRuler demo can not run due to lacking of perpixel transparency support
  - S7130319: C2: running with -XX:+PrintOptoAssembly crashes the VM with assert(false) failed: bad tag in log
  - S7130334: G1: Change comments and error messages that refer to CMS in g1/concurrentMark.cpp/hpp
  - S7130335: Problem with timezone in a SimpleDateFormat
  - S7130360: [macosx] Packed JInternalFrame invisible on Aqua L&F
  - S7130398: ProblemList.txt updates (1/2012)
  - S7130404: [macosx] "os.arch" value should be "x86_64" for compatibility with Apple JDK6
  - S7130476: Remove use of #ifdef TRACE_DEFINE_KLASS_TRACE_ID from klass.hpp
  - S7130587: [macosx] Scrolling and painting issues with late invocation of setText
  - S7130676: Tiered: assert(bci == 0 || 0<= bci && bci<code_size()) during stack trace construction
  - S7130704: Few of the jtreg tests need to be ported for mac builds
  - S7130751: [macosx] EventTest0020 test fails in JCK-runtime-7 interactive
  - S7130935: [macosx] Still, JSpinner 4656590 regression
  - S7130948: Kerberos and JGSS JCK tests failing [macosx]
  - S7130993: nsk/jdi/ReferenceType/instances/instances004 fails with JFR: assert(ServiceUtil::visible_oop(obj))
  - S7131006: java/lang/management/ThreadMXBean/ThreadLists.java
  - S7131028: Switch statement takes wrong path
  - S7131038: [macosx] Document usage of -XstartOnFirstThread and -Xdock:*
  - S7131050: fix for "7071311 Decoder enhancement" does not build on MacOS X
  - S7131084: XMLDSig XPathFilter2Transform regression involving intersect filter
  - S7131196: [macosx] Cmd-Q does not quit a graphical Java app
  - S7131259: compile_method and CompilationPolicy::event shouldn't be declared TRAPS
  - S7131288: COMPILE SKIPPED: deopt handler overflow (retry at different tier)
  - S7131302: connode.cpp:205 Error: ShouldNotReachHere()
  - S7131346: Parsing of boolean arguments to diagnostic commands is broken
  - S7131367: [macosx] reg test test/java/awt/Window/TranslucentJAppletTest fails
  - S7131399: Poll system call appears to be broken on Mac OS [macosx]
  - S7131697: (se) Need AsynchronousChannelProvider implementation for Mac OS X
  - S7131752: [macosx] Multiselect List doesn't display scrollbar after consecutive additions
  - S7131791: G1: Asserts in nightly testing due to 6976060
  - S7131793: [macosx] some cleanup in OGL pipeline code
  - S7131979: new hotspot build - hs23-b12
  - S7132029: G1: mixed GC phase lasts for longer than it should
  - S7132180: JSR 292: C1 JVM crash with ClassValue/MethodHandle
  - S7132199: sun/management/jmxremote/bootstrap/JvmstatCountersTest.java failing on all platforms
  - S7132204: Default testset in JPRT should not run all tests
  - S7132311: G1: assert((s == klass->oop_size(this)) || (Universe::heap()->is_gc_active() && ((is_typeArray()...
  - S7132367: [macosx] ChoiceMouseWheelTest should be adapted for mac toolkit
  - S7132386: makefile support for tracing/Java Flight Recorder framework phase I
  - S7132398: G1: java.lang.IllegalArgumentException: Invalid threshold: 9223372036854775807 > max (1073741824)
  - S7132515: Add dcmd to manage UnlockingCommercialFeature flag
  - S7132631: The help-doc.html generates an invalid link to constant-values.html
  - S7132637: (dc) DatagramChannel multicast tests failing on MacOSX
  - S7132679: (dc) DatagramChannel.send fails with ECONNREFUSED when not connected (Mac OSX)
  - S7132690: InstanceKlass:_reference_type should be u1 type
  - S7132692: [macosx] Class com.apple.eawt not functioning
  - S7132699: [macosx] Proxy using for connection to localhost
  - S7132779: build-infra merge: Enable ccache to work for most developer builds.
  - S7132793: [macosx] setWheelScrollEnabled action reversed
  - S7132809: [macosx] MAXIMIZED_BOTH set before setVisible(true) hides Frame
  - S7132936: guarantee(t != NULL) failed: must be con
  - S7132945: Tiered: adjust OSR threshold of level 3
  - S7133038: G1: Some small profile based optimizations
  - S7133112: [macosx] org.ietf.jgss.GSSException while sun.security.jgss.GSSManagerImpl.createName
  - S7133124: Remove redundant packages from JAR command line
  - S7133220: Additional patches to JAXP 1.4.5 update 1 for 7u4
  - S7133476: (fs) Files.readAttributes throws NPE on MacOSX
  - S7133488: (cs) java/nio/charset/Charset/NIOCharsetAvailabilityTest.java fails on MacOSX
  - S7133495: [macosx] KeyChain KeyStore implementation retrieves only one private key entry
  - S7133577: [macosx] closed/javax/swing/JTree/4314199/bug4314199.java fails on MacOS
  - S7134655: Crash in reference processing when doing single-threaded remarking
  - S7134690: remove legacy jnilib support from ClassLoader and System [macosx]
  - S7134701: [macosx] Support legacy native library names
  - S7134730: Create Ant task for generating Mac OS X app bundles
  - S7134826: [macosx] KeyEvent difference between Apple 1.6 and openjdk
  - S7135385: new hotspot build - hs23-b13
  - S7138665: JOptionPane.getValue() unexpected change between JRE 1.6 and JRE 1.7
  - S7139770: MacOS JCK failures in DatagramSocket and MulticastSocket
  - S7140866: assert(covered) failed: Card for end of new region not committed
  - S7140909: Visual Studio project builds broken: need to define INCLUDE_TRACE
  - S7140924: SIGSEGV in compiled code for sun.awt.X11.XDecoratedPeer.updateMinSizeHints
  - S7140985: HSDIS does not handle caller options correctly
  - S7140989: [MacOSX] Test Pack200Test fails on Mac
  - S7141059: 7116795 broke pure c2 builds
  - S7141071: TEST_BUG: update shell scripts in java/nio/charset to detect Mac OS as a valid platform
  - S7141200: log some interesting information in ring buffers for crashes
  - S7141242: build-infra merge: Rename CPP->CXX and LINK->LD
  - S7141259: Native stack is missing in hs_err
  - S7141281: [macosx] GridBagLayout baseline issue
  - S7141296: [macosx] Mouse Wheel Turn closes combobox popup
  - S7141329: Strange values of stack_size in -XX:+TraceMethodHandles output
  - S7141413: [macosx] Regression test java/rmi/registry/readTest/readTest.sh failing on Mac OS X
  - S7141462: ProblemList.txt updates to exclude tests that cause test runs to hang [macosx]
  - S7141465: macosx] com/sun/jdi/PrivateTransportTest.sh fails on Mac OS X
  - S7141637: JSR 292: MH spread invoker crashes with NULL argument on x86_32
  - S7141675: Fix jcheck issues in .m sources
  - S7141739: [osx] Local attach fails if java.io.tmpdir is set
  - S7141910: Incorrect copyright dates on new test cases.
  - S7142086: performance problem in Check.checkOverrideClashes(...)
  - S7142113: Add Ivy Bridge to the known Intel x86 cpu families
  - S7142120: [macosx] Some JCK tests for SplashScreen fail on Mac OS X due to incorrect positioning of the splash
  - S7142123: test/java/net/ProxySelector/B6737819.java failing on all platforms since Mac OS integration
  - S7142167: MAC: _get_previous_fp broken on bsd with llvm-gcc
  - S7142172: Custom TrustManagers that return null for getAcceptedIssuers will NPE
  - S7142393: new hotspot build - hs23-b14
  - S7142509: Cipher.doFinal(ByteBuffer,ByteBuffer) fails to process when in.remaining() == 0
  - S7142516: [macosx] sun/security/ssl/com/sun/net/ssl/internal/ssl/EngineArgs/DebugReportsOneExtraByte.sh fails
  - S7142565: [macosx] Many special keys processed twice in text fields
  - S7142586: Cannot build on Solaris 11 due to use of ia_nice
  - S7142616: MAC: Honor ALT_EXPORT_PATH overrides from JDK control builds
  - S7142617: De-optimize fdlibm compilation [macosx]
  - S7142641: -Xshared:on fails on ARM
  - S7142667: Problems with the value passed to the 'classes' param of JavaCompiler.CompilationTask.getTask(...)
  - S7142680: default GC affected by jvm path
  - S7142780: [macosx] Font2DTest demo throws NPE
  - S7142852: MAC: Comment out JPRT jbb tests on Mac OS X until 7142850 is resolved
  - S7142950: jdk7u cannot bootstrap Mac OS build [macosx]
  - S7143038: SIGSEGV in assert_equal / LinearScan::assign_reg_num
  - S7143061: nsk/stress/stack/b4525850 crash VM
  - S7143070: test/java/awt/print/PaintSetEnabledDeadlock/PaintSetEnabledDeadlock.java freezes on exit
  - S7143122: new hotspot build - hs23-b15
  - S7143491: G1 C2 CTW: assert(p2x->outcnt() == 2) failed: expects 2 users: Xor and URShift nodes
  - S7143711: Feature added by 7053556 should not override what's set by the constructor in secure mode
  - S7143760: Memory leak in GarbageCollectionNotifications
  - S7143766: add ALT_JDK_IMAGE_DIR and improve test_jdk
  - S7143768: [macosx] Unexpected NullPointerException and java.io.IOException during DnD
  - S7143857: Memory leak in javax.swing.plaf.synth.SynthTreeUI
  - S7144063: [macosx] Swing JMenu mnemonic doesn't work; hint misleading; cross symbol typed
  - S7144064: [macosx] "Could not find class" error in JTree's ctor when called in headless mode
  - S7144268: [macosx] ProblemList.txt updates to exclude networking tests failing on macos
  - S7144274: [macosx] Default IPv6 multicast interface is not being set when calling MulticastSocket.joinGroup()
  - S7144296: PS: Optimize nmethods processing
  - S7144318: GCLocker assert failure: assert(_needs_gc || SafepointSynchronize::is_at_safepoint(
  - S7144322: new hotspot build - hs23-b16
  - S7144328: Improper commandlines for -XX:+-UnlockCommercialFeatures require proper warning/error messages
  - S7144405: JumbleGC002 assert(m->offset() == pc_offset) failed: oopmap not found
  - S7144781: incorrect URLs in JSSE java doc
  - S7144979: incorrect path separator in make/build.xml for Windows when running jtreg tests
  - S7145024: Crashes in ucrypto related to C2
  - S7145243: Need additional specializations for argument parsing framework
  - S7145345: Code cache sweeper must cooperate with safepoints
  - S7145346: VerifyStackAtCalls is broken
  - S7145375: 7u4 l10n message update related to langtools
  - S7145537: minor tweaks to LogEvents
  - S7145587: Stack overflows in Java code cause 64-bit JVMs to exit due to SIGSEGV (sparc version)
  - S7145589: First JSDT provider creation fails
  - S7145768: [macosx] Regression: failure in b11 of ModalDialogInFocusEventTest
  - S7145798: System.loadLibrary does not search current working directory
  - S7145827: [macosx] JCK failure in b11: FocusableWindow3
  - S7145925: Removing remote access to diagnostic commands in the HotSpotDiagnosticMBean
  - S7145980: Dispose method of window.java takes long
  - S7146099: NLS: [de,es,it,ko,pt_BR]launcher_**.properties, double backslash issue.
  - S7146131: [macosx] When click the show optionpane button,it display partly of dialog and hung until timeout
  - S7146343: PS invoke methods should indicate the type of gc done
  - S7146354: Re-enable Compressed OOPs after 7118647 is resolved
  - S7146431: java.security files out-of-sync
  - S7146442: assert(false) failed: bad AD file
  - S7146729: nightly failure after 7141200: tty is sometimes null during shutdown of main thread
  - S7147064: assert(allocates2(pc)) failed: not in CodeBuffer memory: 0xffffffff778d9d60 <= 0xffffffff778da69c
  - S7147066: [macosx] FileDialog.getDirectory() returns incorrect directory
  - S7147078: [macosx] Echo char set in TextField doesn't prevent word jumping
  - S7147666: High lock time for com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory.getInstance()
  - S7147724: G1: hang in SurrogateLockerThread::manipulatePLL
  - S7148275: [macosx] setIconImages() not working correctly (distorted icon when minimized)
  - S7148281: [macosx] JTabbedPane tabs with HTML text do not render correctly
  - S7148663: new hotspot build - hs23-b17
  - S7149005: [macosx] Java Control Panel's UI controls are distorted when draging scroll bar.
  - S7149005: [macosx] Orphaned Choice popup window
  - S7149085: [macosx] Quit with QuitStrategy CLOSE_ALL_WINDOWS does terminate application
  - S7149785: Minor corrections to ScriptEngineManager javadoc
  - S7149913: [macosx] Deadlock in LWTextComponentPeer
  - S7150051: incorrect oopmap in critical native
  - S7150089: [macosx] Default for a custom cursor created from non-existent image is not transparent
  - S7150326: new hotspot build - hs23-b18
  - S7150390: JFR test crashed on assert(_jni_lock_count == count) failed: must be equal
  - S7150392: Linux build breaks with GCC 4.7 due to unrecognized option
  - S7150454: add release jdk7u4 to jprt.properties
  - S7150516: [macosx] appletviewer shouldn't link against libX11 on the Mac
  - S7150637: No newline emitted after XML decl in XSLT output
  - S7152608: [macosx] Crash in liblwawt.dylib in AccelGlyphCache_RemoveCellInfo
  - S7152784: new hotspot build - hs23-b19
  - S7152952: [macosx] List rows overlap with enlarged font
  - S7152954: G1: Native memory leak during full GCs
  - S7153735: [macosx] Text with diacritics is pasted with broken encoding
  - S7153977: Generate English man pages for JDK 7u4
  - S7154047: [macosx] When we choose print one page in the print dialog,it still prints all the pages.
  - S7154072: [macosx] swallowing key events
  - S7154177: [macosx] An invisible owner frame becomes visible upon clicking a child window
  - S7154333: JVM fails to start if -XX:+AggressiveHeap is set
  - S7154480: [macosx] Not all popup menu items are visible
  - S7154505: [macosx] NetBeans sometimes starts with no text rendered
  - S7154516: [macosx] Popup menus have no visible borders
  - S7154677: new hotspot build - hs23-b20
  - S7154724: jdk7u4 test properties missing from jprt.properties
  - S7154758: NLS: 7u4 message drop 20
  - S7154770: NLS: 7u4 man page update
  - S7155419: Remove reference to JRockit and commercial features from java man page
  - S7155757: make jdk7u4 the default jprt release for hs23
  - S7156000: Change makefile to reflect refactored classes
  - S7156831: The jcmd man page is not included in generated bundles
  - S7156960: Incorrect copyright headers in parts of the Serviceability agent
  - S7158135: new hotspot build - hs23-b21
  - S7158483: (tz) Support tzdata2012c
  - S7159266: [macosx] ApplicationDelegate should not be set in the headless mode
  - S7159766: Tiered compilation causes performance regressions
  - S7162440: Fix typo in BUNDLE_ID variable so it can be overridden

New in release 2.1 (2012-02-14):

* Security fixes
  - S7082299, CVE-2011-3571: Fix in AtomicReferenceArray
  - S7088367, CVE-2011-3563: Fix issues in java sound
  - S7110683, CVE-2012-0502: Issues with some KeyboardFocusManager method
  - S7110687, CVE-2012-0503: Issues with TimeZone class
  - S7110700, CVE-2012-0505: Enhance exception throwing mechanism in ObjectStreamClass
  - S7110704, CVE-2012-0506: Issues with some method in corba
  - S7112642, CVE-2012-0497: Incorrect checking for graphics rendering object
  - S7118283, CVE-2012-0501: Better input parameter checking in zip file processing
  - S7126960, CVE-2011-5035: Add property to limit number of request headers to the HTTP Server
* Bug fixes
  - S4909150: WindowsTreeUI can cause NullPointerException occasionally
  - S4965777: GC changes to support use of discovered field for pending references
  - S6476261: (reflect) GenericSignatureFormatError When signature includes nested inner classes
  - S6478991: C1 NullCheckEliminator yields incorrect exceptions
  - S6484982: G1: process references during evacuation pauses
  - S6591247: C2 cleans up the merge point too early during SplitIf
  - S6670868: StackOverFlow with authenticated Proxy tunnels
  - S6735320: StringIndexOutOfBoundsException for empty @serialField tag
  - S6791672: enable 1G and larger pages on solaris
  - S6810861: G1: support -XX:+{PrintClassHistogram,HeapDump}{Before,After}FullGC
  - S6814390: G1: remove the concept of non-generational G1
  - S6898310: (cs) Charset cache lookups should be synchronized
  - S6916968: CMS: freeList.cpp:304 assert(_allocation_stats.prevSweep() + ..., "Conservation Principle")
  - S6918185: Remove unused code for lost card-marking optimization in BacktraceBuilder
  - S6929868: G1: introduce min / max young gen size bounds
  - S6941169: XML parsing cannot be trusted
  - S6941923: RFE: Handling large log files produced by long running Java Applications
  - S6951623: 3/3 possible performance problems in FollowReferences() and GetObjectsWithTags()
  - S6956668: misbehavior of XOR operator (^) with int
  - S6963006: Javacard exception when trying to access card during read operation
  - S6990015: Incorrect Icache line size is used for 64 bit x86
  - S6990212: JSR 292 JVMTI MethodEnter hook is not called for JSR 292 bootstrap and target methods
  - S6994322: Remove the is_tlab and is_noref / is_large_noref parameters from the CollectedHeap
  - S7004681: G1: Extend marking verification to Full GCs
  - S7012081: JSR 292: SA-JDI can't read MH/MT/Indy ConstantPool entries
  - S7012206: ~20 tools tests failing due to -XX:-UsePerfData default in Java SE Embedded
  - S7012364: test/java/util/Locale/LocaleCategory.sh fails on Cygwin
  - S7012783: JFileChooser fails to resolve DFS links on Windows Vista SP2
  - S7016112: CMS: crash during promotion testing
  - S7016797: Hotspot: securely/restrictive load dlls and new API for loading system dlls
  - S7016881: JSR 292: JDI: sun.jvm.hotspot.utilities.AssertionFailure: index out of bounds
  - S7019773: Problem with java/classes_awt
  - S7019963: The goto parent directory button doesn't operate in JFileChooser
  - S7020373: JSR rewriting can overflow memory address size variables
  - S7022113: Security icon can be moved behind the window using the com.sun.SecurityWarning.setPosition() method
  - S7024697: SessionRef.dispose() should determine if the token referred to by the token object is still valid
  - S7029903: Splash screen is not shown in 64-bit Linux with 16-bit color depth
  - S7030332: Default borders in tables looks incorrect JEditorPane
  - S7031830: bad_record_mac failure on TLSv1.2 enabled connection with SSLEngine
  - S7032531: G1: enhance GC logging to include more accurate eden / survivor size transitions
  - S7033141: assert(has_cp_cache(i)) failed: oob
  - S7035946: Up to 15% regression on JDK 7 b136 vs b135 on specjvm2008.crypto.rsa on x64
  - S7039182: PPC: NIO: java.io.IOException: Invalid argument in sun.nio.ch.FileDispatcherImpl.read0
  - S7039627: G1: avoid BOT updates for survivor allocations and dirty survivor regions incrementally
  - S7039731: arraycopy could use prefetch on SPARC
  - S7041125: LDAP API does not catch malformed filters that contain two operands for the ! operator
  - S7041800: URI.equals may incorrectly return true with escaped octets
  - S7042148: closed/java/awt/font/TextLayout/CheckLayoutLTR.java failed
  - S7042740: CMS: assert(n> q) failed: Looping at: ... blockOffsetTable.cpp:557
  - S7043737: klist does not detect non-existing keytab
  - S7043847: NTML impl of SaslServer throws UnsupportedOperationException from (un)wrap method
  - S7043987: 3/3 JVMTI FollowReferences is slow
  - S7044486: open jdk repos have files with incorrect copyright headers, which can end up in src bundles
  - S7044738: Loop unroll optimization causes incorrect result
  - S7045232: G1: pool names are inconsistent with other collectors (don't have 'Space')
  - S7045330: G1: Simplify/fix the HeapRegionSeq class
  - S7045514: SPARC assembly code for JSR 292 ricochet frames
  - S7045662: G1: OopsInHeapRegionClosure::set_region() should not be virtual
  - S7045697: JDK7 THIRD PARTY README update
  - S7045751: G1: +ExplicitGCInvokesConcurrent causes excessive single region evacuation pauses
  - S7046182: G1: remove unnecessary iterations over the collection set
  - S7046490: Preallocated OOME objects should obey Throwable stack trace protocol
  - S7046558: G1: concurrent marking optimizations
  - S7046778: Project Coin: problem with diamond and member inner classes
  - S7047069: Array can dynamically change size when assigned to an object field
  - S7047325: Internal API to improve management of direct buffers
  - S7047491: C1: registers saved incorrectly when calling checkcast_arraycopy stub
  - S7047697: MethodHandle.invokeExact call for wrong method causes VM failure if run with -Xcomp
  - S7047954: VM crashes with assert(is_Mem()) failed
  - S7047961: JSR 292 MethodHandleWalk swap args doesn't handle T_LONG and T_DOUBLE properly
  - S7048009: Update .jcheck/conf files for JDK 8
  - S7048332: Cadd_cmpLTMask doesn't handle 64-bit tmp register properly
  - S7048342: CMS: eob == _limit || fc->isFree() failed: Only a free chunk should allow us to cross over the limit
  - S7048782: CMS: assert(last_chunk_index_to_check<= last_chunk_index) failed: parCardTableModRefBS.cpp:359
  - S7049079: NTSYSTEM CLASS IS LEAKING WINDOWS TOKENS
  - S7049339: AnyBlit is broken with non-rectangular clips.
  - S7049410: JSR 292 old method name MethodHandle.invokeGeneric should not be accepted by the JVM
  - S7049415: Failure of resolution of sym.reference to the c.s.s. should be wrapped in BootstrapMethodError
  - S7049774: UID construction appears to hang if time changed backwards
  - S7049928: VM crashes with "assert(_adapter != NULL) failed: must have" at methodOop.cpp:63
  - S7049963: DISTINGUISHED NAMES FOR CERT ARE ESCAPED IN JROCKIT 1.6(NOT COMPATIBLE WITH JROC
  - S7049999: G1: Make the G1PrintHeapRegions output consistent and complete
  - S7050280: assert(u->as_Unlock()->is_eliminated()) failed: sanity
  - S7050392: G1: Introduce flag to generate a log of the G1 ergonomic decisions
  - S7050554: JSR 292 - need optimization for selectAlternative
  - S7050826: Hebrew characters are not rendered on OEL 5.6
  - S7050935: closed/java/awt/Choice/WheelEventsConsumed/WheelEventsConsumed.html fails on win32
  - S7051430: CMS: ongoing CMS cycle should terminate abruptly to allow prompt JVM termination at exit
  - S7051516: ThreadLocalRandom seed is never initialized so all instances generate the same sequence
  - S7051798: SA-JDI: NPE in Frame.addressOfStackSlot(Frame.java:244)
  - S7052219: JSR 292: Crash in ~BufferBlob::MethodHandles adapters
  - S7052494: Eclipse test fails on JDK 7 b142
  - S7052988: JPRT embedded builds don't set MINIMIZE_RAM_USAGE
  - S7053189: remove some unnecessary platform-dependent includes
  - S7053520: JSR292: crash in invokedynamic with C1 using tiered and compressed oops
  - S7054211: No loop unrolling done in jdk7b144 for a test update() while loop
  - S7054637: Enable PKCS11 to use raw encoding for the EC point in an Elliptic Curve public key
  - S7055073: G1: code cleanup in the concurrentMark.* files
  - S7055247: Ignore test of # 7020373
  - S7055355: JSR 292: crash while throwing WrongMethodTypeException
  - S7056328: JSR 292 invocation sometimes fails in adapters for types not on boot class path
  - S7056380: VM crashes with SIGSEGV in compiled code
  - S7057046: Add embedded license to THIRD PARTY README
  - S7057120: Tiered: Allow C1 to inline methods with loops
  - S7057297: Project Coin: diamond erroneously accepts in array initializer expressions
  - S7057459: Regression:  Performance degradation with java.beans.XMLEncoder
  - S7057705: can't generate api docs for JDK7 updates
  - S7057857, CVE-2011-3554: insufficient pack200 JAR files uncompress error checks
  - S7057857: SIGSEGV [libunpack.so] store_Utf8_char(signed char*, unsigned short) in java.util.jar.pack200
  - S7057978: improve robustness of c1 ARM back-end wrt non encodable constants
  - S7058036: FieldsAllocationStyle=2 does not work in 32-bit VM
  - S7058510: multinewarray with 6 dimensions uncommon traps in server compiler
  - S7058689: Tiered: Reprofiling doesn't happen in presence of level 4 OSR methods
  - S7058828: test/java/util/concurrent/Phaser/Arrive.java fails intermittently
  - S7059019: G1: add G1 support to the SA
  - S7059034: Use movxtod/movdtox on T4
  - S7059037: Use BIS for zeroing on T4
  - S7059259: (process) ProcessBuilder.start permission check should be improved when redirecting output to append
  - S7059905: (javadoc) promote method visibility for netbeans usage
  - S7060619: C1 should respect inline and dontinline directives from CompilerOracle
  - S7060642: (javadoc) improve performance on accessing inlinedTags
  - S7060836: RHEL 5.5 and 5.6 should support UseNUMA
  - S7060842: UseNUMA crash with UseHugreTLBFS running SPECjvm2008
  - S7060926: Attr.PostAttrAnalyzer misses a case
  - S7061101: adlc should complain about mixing block and expression forms of ins_encode
  - S7061125: Proposed javac argument processing performance improvement
  - S7061187: need some includes for arm/ppc
  - S7061192: option handling adjustments for oracle and embedded builds
  - S7061197: ThreadLocalStorage sp map table should be optional
  - S7061204: clean the chunk table synchronously in embedded builds
  - S7061212: use o/s low memory notification in embedded builds
  - S7061225: os::print_cpu_info() should support os-specific data
  - S7061379: [Kerberos] Cross-realm authentication fails, due to nameType problem
  - S7061691: Fork HS21 to HS22 - renumber Minor and build numbers of JVM
  - S7061768: Backout fix # 6941169
  - S7062745: Regression: difference in overload resolution when two methods are maximally specific
  - S7062856: Disassembler needs to be smarter about finding hsdis after 1.7 launcher changes
  - S7062969: java -help still shows http://java.sun.com/javase/reference
  - S7063628: Use cbcond on T4
  - S7063629: use cbcond in C2 generated code on T4
  - S7064279: Introspector.getBeanInfo() should release some resources in timely manner
  - S7064544: (javadoc) miscellaneous fixes requested by netbeans
  - S7065535: Mistyped function name that disabled UseLargePages on Windows
  - S7065972: Some race condition may happen in SSLSocketImpl class
  - S7066143: JSR 292: Zero support after regressions from 7009923 and 7009309
  - S7066203: Update currency data to the latest ISO 4217 standard
  - S7066339: Tiered: policy should make consistent decisions about osr levels
  - S7066490: @since 1.7 tag is missing for java.util.regex.Matcher.group(java.lang.String)
  - S7066713: Separate demos from the bundles on Solaris and Linux
  - S7066841: remove MacroAssembler::br_on_reg_cond() on sparc
  - S7067288: compiler regression test Test7052494 timeouts with client VM
  - S7067784: TEST: move testcase for # 7023640 from open to close in 7u1
  - S7067811: Update demo/sample code to state it should not be used for production
  - S7067922: (launcher) java -jar throws NPE if JAR file does not contain Main-Class attribute
  - S7067974: multiple ETYPE-INFO-ENTRY with same etype and different salt
  - S7068047: DnDMerlinQLTestsuite_DnDJTextArea test fails with an java.awt.dnd.InvalidDnDOperationException
  - S7068051: SIGSEGV in PhaseIdealLoop::build_loop_late_post
  - S7068215: G1: Print reference processing time during remark
  - S7068240: G1: Long "parallel other time" and "ext root scanning" when running specific benchmark
  - S7068328: BufferPoolMXBean and PlatformLoggingMXBean getObjectName may return null
  - S7068416: Lightweight HTTP Server should support TCP_NODELAY
  - S7068437: Regression: Filer.getResource(SOURCE_OUTPUT, ...) no longer works in JDK 7 w/o -s
  - S7068451: Regression: javac compiles fixed sources against previous, not current, version of generated sources
  - S7068902: (javac) allow enabling or disabling of String folding
  - S7069176: Update the JDK version numbers in Hotspot for JDK 8
  - S7069452: Cleanup NodeFlags
  - S7069863: G1: SIGSEGV running SPECjbb2011 and -UseBiasedLocking
  - S7070061: Adjust Hotspot make/jprt.properties for new JDK8 settings
  - S7070134: Hotspot crashes with sigsegv from PorterStemmer
  - S7071166: LayoutStyle.getPreferredGap()  - IAE is expected but not thrown
  - S7071246: Enclosing string literal in parenthesis in switch-case crashes javac
  - S7071248: IME composition window does not disappear when file dialog is closed : Japanese WinXP
  - S7071307: MethodHandle bimorphic inlining should consider the frequency
  - S7071427: AdapterFingerPrint can hold 8 entries per int
  - S7071609: javax/swing/JPopupMenu/6694823/bug6694823.java failed on solaris10
  - S7071653: JSR 292: call site change notification should be pushed not pulled
  - S7071709: JSR 292: switchpoint invalidation should be pushed not pulled
  - S7071823: Zero: zero/shark doesn't build after b147-fcs
  - S7071904: 4/4 HotSpot: Full Debug Symbols
  - S7072527: CMS: JMM GC counters overcount in some cases
  - S7072645: Toolkit.addPropertyChangeListener(name, pcl) throws NPE for null name
  - S7073337: Crash after playing Java game on Pogo
  - S7073491: -Dsun.net.maxDatagramSockets=1 does not work correctly with system.gc()
  - S7073508: Regression: NullPointerException at com.sun.tools.javac.code.Lint$AugmentVisitor.augment
  - S7073631: (javac) javac parser improvements for error position reporting
  - S7073913: The fix for 7017193 causes segfaults
  - S7074017: Introduce MemBarAcquireLock/MemBarReleaseLock nodes for monitor enter/exit code paths
  - S7074189: some javac tests fail with latest jtreg 4.1 b03
  - S7074386: fallback to fontconfig.<major_version>.bfc/properties if fontconfig.<major_version>.<minor_version>.
  - S7074416: Regression: JSR199: javac doesn't unwrap clientcodewrapper objects
  - S7074579: G1: JVM crash with JDK7 running ATG CRMDemo Fusion App
  - S7075098: Remove unused fdlibm files
  - S7075105: WIN: Provide a way to format HTML on drop
  - S7075559: JPRT windows_x64 build failure
  - S7075623: 6990212 broke raiseException in 64 bit
  - S7075646: G1: fix inconsistencies in the monitoring data
  - S7076831: TEST_BUG: compiler/5091921/Test7005594.java fails on LOW MEM SYSTEMS
  - S7077439: Possible reference through NULL in loopPredicate.cpp:726
  - S7077769: (zipfs) ZipFileSystem.writeCEN() writes wrong "data size" for ZIP64 extended information extra field
  - S7077806: ARM: java.lang.InternalError: bound subword value does not fit into the subword type
  - S7078382: JSR 292: don't count method handle adapters against inlining budgets
  - S7079317: Incorrect branch's destination block in PrintoOptoAssembly output
  - S7079329: Adjust allocation prefetching for T4
  - S7079626: x64 emits unnecessary REX prefix
  - S7079673: JSR 292: C1 should inline bytecoded method handle adapters
  - S7079769: JSR 292: incorrect size() for CallStaticJavaHandle on sparc
  - S7080038: (ann) Serializable types in sun.reflect.annotation do not declare serialVersionUIDs
  - S7080289: java/awt/AWTKeyStroke/AlienClass/Test2.java failed on jdk1.5.0_32b02 but passed on previous build
  - S7080389: G1: refactor marking code in evacuation pause copy closures
  - S7080431: VM asserts if specified size(x) in .ad is larger than emitted size
  - S7081012: REGRESSION:Component.transferFocusBackward invokes clearGlobalFocusOwner()
  - S7081064: G1: remove develop params G1FixedSurvivorSpaceSize, G1FixedTenuringThreshold, and G1FixedEdenSize
  - S7081251: bump the hs22 build number to 02
  - S7081926: assert(VM_Version::supports_sse2()) failed: must support
  - S7082220: Visual Studio projects broken after change 7016797: Hotspot: securely/restrictive load dlls and new
  - S7082263: Reflection::resolve_field/field_get/field_set are broken
  - S7082631: JSR 292: need profiling support in GWTs
  - S7082645: Hotspot doesn't compile on old linuxes after 7060836
  - S7082689: allow duplicate bug ids in jdk7u repos
  - S7082769: FileInputStream/FileOutputStream/RandomAccessFile allow file descriptor be closed when still in use
  - S7082949: JSR 292: missing ResourceMark in methodOopDesc::make_invoke_method
  - S7082969: NUMA interleaving
  - S7083184: JSR 292: don't store context class argument with call site dependencies
  - S7083786: dead various dead chunks of code
  - S7083916: Bump the hs22 build number to 03
  - S7084509: G1: fix inconsistencies and mistakes in the young list target length calculations
  - S7085012: ARM: com/sun/jdi/PopSynchronousTest.java still fails
  - S7085137: -XX:+VerifyOops is broken
  - S7085279: C1 overflows code buffer with VerifyOops and CompressedOops
  - S7085404: JSR 292: VolatileCallSites should have push notification too
  - S7085860: JSR 292: implement CallSite.setTargetNormal and setTargetVolatile as native methods
  - S7085906: Replace the permgen allocated sentinelRef with a self-looped end
  - S7085944: FDS: gdb does not find debug symbols for libjsig link
  - S7086226: UseNUMA fails on old versions of windows
  - S7086261: javac doesn't report error as expected, it only reports ClientCodeWrapper$DiagnosticSourceUnwrapper
  - S7086394: c2/arm: enable UseFPUForSpilling
  - S7086533: G1: assert(!_g1->is_obj_dead(obj)): We should not be preserving dead objs: g1CollectedHeap.cpp:3835
  - S7086560: 7085404 changes broke VM with -XX:-EnableInvokeDynamic
  - S7086585: make Java field injection more flexible
  - S7086589: bump the hs22 build number to 04
  - S7087445: Improve platform independence of JSR292 shared code
  - S7087453: PhaseChaitin::yank_if_dead() should handle MachTemp inputs
  - S7087583: Hotspot fails to allocate heap with mmap(MAP_HUGETLB)
  - S7087717: G1: make the G1PrintRegionLivenessInfo parameter diagnostic
  - S7087947: Add regression test for 7068051
  - S7087956: add libattach.so to embedded JRE to enable additional troubleshooting support
  - S7088020: SEGV in JNIHandleBlock::release_block
  - S7088287: libpng need to be updated.
  - S7088955: add C2 IR support to the SA
  - S7088991: Bump ths hs22 build number to 05
  - S7089625: G1: policy for how many old regions to add to the CSet (when young gen is fixed) is broken
  - S7089632: assert(machtmp->outcnt() == 1) failed: expected for a MachTemp
  - S7089709: type "jushort" not found
  - S7090069: Java launcher hangs in infinite loop on windows when UseNUMA[Interleaving] is specified
  - S7090259: Fix hotspot sources to build with old compilers
  - S7090654: nightly failures after 7086585
  - S7090843: (tz) Support tzdata2011j
  - S7090844: Support a timezone whose offset is changed more than once in the future
  - S7091032: G1: assert failure when NewRatio is used
  - S7091141: JAXP 1.4.5 update 1 for 7u2
  - S7091255: Bump the hs22 build number to 06
  - S7091294: disable quicksort tests
  - S7091369: DatagramSocket/Limit.java failing on 8 and 7u2
  - S7091528: javadoc attempts to parse .class files
  - S7092186: adjust package access in rmiregistry
  - S7092236: java/util/EnumSet/EnumSetBash.java fails
  - S7092238: G1: Uninitialized field gc_efficiency in G1PrintRegionLivenessInfo output
  - S7092245: G1: Wrong format specifier in G1PrintRegionLivenessInfo header output
  - S7092278: "jmap -finalizerinfo" throws "sun.jvm.hotspot.utilities.AssertionFailure: invalid cp index 0 137"
  - S7092412: G1: Some roots not marked during an initial mark that gets an evacuation failure
  - S7092679: (tz) Java getting wrong timezone/DST info on Solaris 11
  - S7093108: Bump the hs22 build number to 07
  - S7095698: jdk7u2 does not work as a bootstrap after 7091141
  - S7096366: PPC: corruption of floating-point values with DeoptimizeALot
  - S7097048: G1: extend the G1 SA changes to print per-heap space information
  - S7097053: G1: assert(da ? referent->is_oop() : referent->is_oop_or_null()) failed: referenceProcessor.cpp:1054
  - S7098719: -Dsun.net.maxDatagramSockets and Socket constructor does not work correctly with System.gc()
  - S7099017: jdk7u2-dev does not build
  - S7099228: Use a PKCS11 config attribute to control encoding of an EC point
  - S7099399: cannot deal with CRL file larger than 16MB
  - S7099488: TwoStacksPlainSocketImpl should invoke super.create(stream), typo in fix for 7098719
  - S7100165: JSR 292: leftover printing code in methodHandleWalk.cpp
  - S7100757: The BitSet.nextSetBit() produces incorrect result in 32bit VM on Sparc
  - S7101102: Bump the hs22 build number to 08
  - S7101658: Backout 7082769 changes
  - S7102337: Third Party License Readme updates for 7u2
  - S7102369: remove java.rmi.server.codebase property parsing from registyimpl
  - S7102515: javac running very very long and not returning
  - S7103108: (tz) Support tzdata2011l
  - S7103224: collision between __LEAF define in interfaceSupport.hpp and /usr/include/sys/cdefs.h with gcc
  - S7103405: Correct display names for Pacific/Apia timezone
  - S7103610: _NET_WM_PID and WM_CLIENT_MACHINE are not set
  - S7104126: Insert openjdk copyright header back into TZdata files
  - S7108550: Bump the hs22 build number to 09
  - S7108598: Pogo Table Games freeze with JDK 7
  - S7110428: Crash during HeapDump operation
  - S7110586: C2 generates incorrect results
  - S7110590: DnDMerlinQLTestsuite_DnDJTextArea test fails with an java.awt.dnd.InvalidDnDOperationException
  - S7112766: Bump the hs22 build number to 10
  - S7140882: Don't return booleans from methods returning pointers
  - Don't force -Werror on in com/sun/java/pack
* JamVM
  - Implement classlibCheckIfOnLoad().
  - Make thread states JVMTI compatible.
  - Add OpenBSD/sparc to list of recognised hosts.
  - Handle 'g' when specifying memory + extra checks.

New in release 2.0.1 (2012-02-14):

* Security fixes
  - S7082299, CVE-2011-3571: Fix in AtomicReferenceArray
  - S7088367, CVE-2011-3563: Fix issues in java sound
  - S7110683, CVE-2012-0502: Issues with some KeyboardFocusManager method
  - S7110687, CVE-2012-0503: Issues with TimeZone class
  - S7110700, CVE-2012-0505: Enhance exception throwing mechanism in ObjectStreamClass
  - S7110704, CVE-2012-0506: Issues with some method in corba
  - S7112642, CVE-2012-0497: Incorrect checking for graphics rendering object
  - S7118283, CVE-2012-0501: Better input parameter checking in zip file processing
  - S7126960, CVE-2011-5035: Add property to limit number of request headers to the HTTP Server
* Bug fixes
  - S7103610: _NET_WM_PID and WM_CLIENT_MACHINE are not set

New in release 2.0 (2011-10-19):

* Security fixes
  - S7000600, CVE-2011-3547: InputStream skip() information leak
  - S7019773, CVE-2011-3548: mutable static AWTKeyStroke.ctor
  - S7023640, CVE-2011-3551: Java2D TransformHelper integer overflow
  - S7032417, CVE-2011-3552: excessive default UDP socket limit under SecurityManager
  - S7046794, CVE-2011-3553: JAX-WS stack-traces information leak
  - S7046823, CVE-2011-3544: missing SecurityManager checks in scripting engine
  - S7055902, CVE-2011-3521: IIOP deserialization code execution
  - S7057857, CVE-2011-3554: insufficient pack200 JAR files uncompress error checks
  - S7064341, CVE-2011-3389: HTTPS: block-wise chosen-plaintext attack against SSL/TLS (BEAST)
  - S7070134, CVE-2011-3558: HotSpot crashes with sigsegv from PorterStemmer
  - S7077466, CVE-2011-3556: RMI DGC server remote code execution
  - S7083012, CVE-2011-3557: RMI registry privileged code execution
  - S7096936, CVE-2011-3560: missing checkSetFactory calls in HttpsURLConnection
* Bug fixes
  - Allow the compiler used to be overridden by setting BUILD_GCC/BUILD_CPP.
  - Fixed regression test runtime/7020373.
  - Convert to optional system library usage via USE_SYSTEM_ZLIB/JPEG/PNG/GIF.
  - PR586: Add missing sources to src.zip.
  - PR717: All non-bootstrap non-conditional patches in IcedTea7 should be in the forest or dropped.
  - PR767: Annotation Processing Filer.getResource() always throws FileNotFoundException
  - PR790: Re-include JAXP and JAXWS in the source tree
  - G356743: Support building against libpng 1.5.
  - S7070134: Hotspot crashes with sigsegv from PorterStemmer
  - S7044738: Loop unroll optimization causes incorrect result
  - S7068051: SIGSEGV in PhaseIdealLoop::build_loop_late_post
  - S7073913: Avoid random segfaults.
  - PR751: IcedTea7 should bootstrap with IcedTea7
* Zero/Shark
  - PR757, S7066143: 7009309 regression: x86 stubRoutines
  - PR753, S7066143: 7009923 regression
  - PR770: Zero 7033954 regression: missing mapfile
  - methodHandles_zero missing.
  - sharkContext typo in assert
  - sharedRuntime needs rework after indy reorg
  - Add missing describe_pd method for Zero.
* CACAO
  - CA149: Used wrong class loader.
  - CA159: Exception handler blocks / register mixup.
  - src/vm/javaobjects.cpp (java_lang_reflect_Method::invoke): [OPENJDK] stack index of caller was off by one, causing many apt (Annotation Processing Tool) failures.
  - Set thread to RUNNABLE during Thread.start.
  - Removed state-setting function call that would be done by the thread itself, creating a nasty race.
* JamVM
  - JamVM is self-hosting.
  - PR772: jtreg LocalOnlyTest sends SIGQUIT to all processes on exit.
  - LP827463: Fix OpenJDK enclosingMethodInfo().
  - Add support for armhf.
  - Skip Java-reflection-related DelegatingClassLoaders, enables JamVM to run NetBeans.
  - Generic JNI stubs for common JNI method signatures.
  - Fix memory heap arguments in terms of gigabytes.
  - armhf: ensure stack is 8 byte aligned.
  - "Fix" handling of CLI bootclasspath options.
  - Fix for StackTraceElement checkin.
  - Fix typo in definition of ACC_MIRANDA.
  - Intern strings when creating a StackTraceElement.
  - Ignore assertions and verify options.
  - Remove empty clobber.
  - Use dots instead of slashes in classname for exception.
  - Correct thrown exception by bootstrap loader.
  - Put parsing of -cp and -classpath options back in.
  - Fix threading of references list during compaction.
  - Further fix to freeClassData for native methods.
  - Fix class GC with classes containing Miranda methods.
  - Propogate initialisation errors to top-level.
  - Make classlib init functions consistent + warnings.
  - Correctly implement sun.misc.Unsafe freeMemory().
  - Move lazy-loading to init function.
  - Fix various warnings with -Wall.
  - PrintThreadsDump needs "self" as argument.
  - CopyMemory, etc. handle negative or truncation in length.
  - Extra sun.misc.Unsafe functions.
  - Ignore options for jtreg tests.
  - Enable shutdownVM to be called with OpenJDK classlib.
  - Initial implementation of JVM_FindClassFromBootLoader.
  - Fix callJNIMethod on i386 with -fomit-frame-pointer.
  - Fix backwards cache conflict resolution code.
  - Unify command line options parsing.
  - Remove debug printf.
  - Fix leak of native thread structure.
  - Consistent naming for classlib functions.
  - Add extra includes to get rid off compiler warning.
  - Rework OpenJDK storage of native thread structure.
  - Implement remaining OpenJDK Array reflection interface.

New in release 1.14 (2011-05-25):

* NetX and the plugin moved to the IcedTea-Web project with a separate
  release cycle.
* Builds using system LCMS by default.
* Added out-of-the-box JamVM support using --enable-jamvm
* Allow building of JamVM beside the default VM by using --with-additional-vms=jamvm
* Allow the location of the JamVM source zip to be specified using --with-jamvm-src-zip
* JamVM builds can bootstrap and are self-hosting.
* Bug fixes
  - PR616, PR99: Don't statically link libstdc++
  - PR640: JamVM fails to build - Unrecognised option: -XX:ThreadStackSize.
  - PR714: Forwardport replace-hotspot support from IcedTea6.
  - PR103: Usage of native2ascii during bootstrap
  - PR543: zero fails to build on icedtea7 trunk 20100907
  - PR715: Port updated macros from IcedTea6 to 7
  - PR732: Use xsltproc for bootstrap xslt in place of Xerces/Xalan
* JamVM
  - Ignore all unknown options.
  - Handle overflow in getPhysicalMemory().
  - Base default min and max heap size on physical memory.
  - Fix reflective array access.
  - Handle O_DELETE in JVM_Open.
  - Minor performance improvement on ARM.
  - First set of changes to support JamVM/OpenJDK on MacOS X.
  - Minor memory leak (missing free).
  - Handle integer overflow on i386/amd64.
  - On ARM, force interpreter to be built in ARM mode.
  - MIPS: 64-bit and interpreter inlining by default.
  - Trivial implementation of stubs for MIPS.
* CACAO
  - Threadlist & threadobject improvements.
  - Ignore all unknown options, but report them.
  - Fixes build for newer gcc (at least 4.4) on PPC64, breaks older gcc.
  - CA123: LD_LIBRARY_PATH and java.library.path.
  - CA143: don't hang with invalid locale.
  - CA144: aligned patchers on x86_64.
  - CA148: support for LCMP bytecode.
  - CA152: Calling Policy.setPolicy with a new Policy object has no effect on the DefaultSecurityManager.
  - CA156: uncaughtExceptionHandler doesn't work with OpenJDK 6 b21.
  - CA157: ARM SMP Assertion thinlock failed.
* Zero/Shark
  - Match Shark in icedtea6, makes OSR work by removing vestigal check.
  - LLVM 2.7 non-product fixes.
  - Correct suffix for the llvm.atomic.cmp.swap intrinsic.

New in release 1.13 (2010-07-29)

* Updated to OpenJDK7 milestone 7/b89.
* Removed VisualVM support; now hosted at https://icedtea.classpath.org/hg/visualvm.
* Removed old plugin.
* Bumped to CACAO 1.1.0 pre-release snapshot.
* libjpeg7 & libpng 1.4 supported.
* Latest security updates and hardening patches:
  - (CVE-2010-0837): JAR "unpack200" must verify input parameters (6902299)
  - (CVE-2010-0845): No ClassCastException for HashAttributeSet constructors if run with -Xcomp (6894807)
  - (CVE-2010-0838): CMM readMabCurveData Buffer Overflow Vulnerability (6899653)
  - (CVE-2010-0082): Loader-constraint table allows arrays instead of only the base-classes (6626217)
  - (CVE-2010-0095): Subclasses of InetAddress may incorrectly interpret network addresses (6893954)
  - (CVE-2010-0085): File TOCTOU deserialization vulnerability (6736390)
  - (CVE-2010-0091): Unsigned applet can retrieve the dragged information before drop action occurs (6887703)
  - (CVE-2010-0088): Inflater/Deflater clone issues (6745393)
  - (CVE-2010-0084): Policy/PolicyFile leak dynamic ProtectionDomains. (6633872)
  - (CVE-2010-0092): AtomicReferenceArray causes SIGSEGV -> SEGV_MAPERR error (6888149)
  - (CVE-2010-0094): Deserialization of RMIConnectionImpl objects should enforce stricter checks (6893947)
  - (CVE-2010-0093): System.arraycopy unable to reference elements beyond Integer.MAX_VALUE bytes (6892265)
  - (CVE-2010-0840): Applet Trusted Methods Chaining Privilege Escalation Vulnerability (6904691)
  - (CVE-2010-0848): AWT Library Invalid Index Vulnerability (6914823)
  - (CVE-2010-0847): ImagingLib arbitrary code execution vulnerability (6914866)
  - (CVE-2009-3555): TLS: MITM attacks via session renegotiation
  - 6639665: ThreadGroup finalizer allows creation of false root ThreadGroups
  - 6898622: ObjectIdentifer.equals is not capable of detecting incorrectly encoded CommonName OIDs
  - 6910590: Application can modify command array in ProcessBuilder
  - 6909597: JPEGImageReader stepX Integer Overflow Vulnerability
  - 6932480: Crash in CompilerThread/Parser. Unloaded array klass?
  - (CVE-2010-2783, RH616895): IcedTea 'Extended JNLP Services' arbitrary file access
  - (CVE-2010-2548, RH616893): IcedTea Incomplete property access check for unsigned applications
* Bug fixes
  - PR179: Rhino bootclasspath issue
  - PR512: Extract jaxws getdtdtype patch to boot tree instead of main tree.
  - PR521: Don't hardlink the copy of generated.
  - S6963870: NPE in CompoundBorder.getInsets()
  - S6967533: Epoch bug: ExceptionInInitializerError on systems with uninitialized clock
  - S6944361: Missing CKR_ values in PKCS11Exception
* SystemTap
  - Added JNI call tracing using systemtap version 1.0+ when
    configuring with --enable-systemtap. See tapset/hotspot_jni.stp.
  - Add support for Zero build on Hitachi SH.
  - Removed the old plugin, replaced by the NPPlugin.
  - PR476: Enable building SystemTap support on GCC 4.5.
  - Fix hotspot tapset object_alloc size variable.
  - Workaround RH613824: Missing and wrong hotspot.* probepoint arguments
* Zero/Shark
  - Formatting changes and other fixes to match upstream
  - PR428: Shark on ARM precompiled header incls
  - Update Shark for LLVM r95390 API change.
  - S6927165: Zero S/390 fixes (from upstream)
  - Implemented Shark host CPU feature autotuner using LLVM 2.7 APIs.
  - Add s390 support to TCK setup helper script
  - Strip stupid options that llvm-config supplies
  - Update Shark for LLVM r94686 API change.
  - S6914622, S6909153, S6913869 upstream Zero fixes.
  - Fixed Shark sharkCompiler mattr memory corruption bug when using llvm 2.7.
  - PR525: Shark made not entrant deopt sigsegv regression after bump to b20 and hs17.
  - PR shark/483: Fix miscompilation of sun.misc.Unsafe::getByte.
  - PR icedtea/324, icedtea/481: Fix Shark VM crash.
  - Update Shark for LLVM 2.8 API change r100304
  - Shark calling static jni methods jclass argument fix.
  - PR484: Shark jit code block "0xcdcdcdcd" zombie wipeout Sigsegv crash
  - Backport new frame anchor and stack overflow code for Zero and Shark
  - Fix stack leak in Shark
  - PR494: Shark fails to catch Exception using catch (Throwable e)
* NPPlugin fixes
  - PR446: Use JDK_UPDATE_VERSION to set the jpi version.
  - Re-designed frame embedding code so that the applet is dynamically
    packed into given handle. This increases stability and breaks
    reliance on the assumption that the browser will always provide a
    handle in a certain sequence.
    - Encode new lines, carriage returns, and other special characters
    before sending them to Java side (de-coding code is already in
    effect on Java side).
    - Centralised and increased timeouts to give slow-loading applets
    enough time to load.
    - Fix security permissions related to get/set property, based on
    specifications.
  - Added support for JSObject.finalize()
  - Liveconnect message processing design changes.
  - Message protocol overhaul to fix race conditions
  - PR166: Create FIFO pies in temp dir instead of ~/.icedteaplugin
  - Profiled memory usage and implemented proper cleanup for C++ side.
  - Update debug output string and function/structure names to
    change 'GCJ' references to ITNP/IcedTea NP Plugin
  - PR461: plugin working for NSS enabled builds with firefox including a private NSS copy
  - Removed unncessary debug and trace output
  - PR474: Patch from Paulo Cesar Pereira de Andrade, incrementing malloc size to account for NULL terminator.
  - RH524387: javax.net.ssl.SSLKeyException: RSA premaster secret error
  - Set context classloader for all threads in an applet's threadgroup
  - PR436: Close all applet threads on exit
  - PR480: NPPlugin with NoScript extension.
  - PR488: Question mark changing into underscore in URL.
  - RH592553: Fix bug causing 100% CPU usage.
  - Don't generate a random pointer from a pthread_t in the debug output.
  - Add ForbiddenTargetException for legacy support.
  - Use variadic macro for plugin debug message printing.
  - Don't link the plugin with libxul libraries.
  - Fix race conditions in plugin initialization code that were causing hangs.
  - RH506730: BankID (Norwegian common online banking authentication system) applet fails to load.
  - PR491: pass java_{code,codebase,archive} parameters to Java.
  - Adds javawebstart.version property and give user permission to read that property.
* NetX:
  - Make path sanitization consistent; use a blacklisting approach.
  - Make the SingleInstanceServer thread a daemon thread.
  - Handle JNLP files which use native libraries but do not indicate it
  - Allow JNLP classloaders to share native libraries
  - Added encoding support
  - Do not use Look and Feel related methods for setting up security dialogs
  - Error out when unsigned jnlp applications request permissions
* PulseAudio:
  - Add missing .c file to PulseAudio build
  - Eliminate spurious exception throwing.

New in release 1.12 (2009-11-17)

- Updated to OpenJDK7 milestone 5; includes:
  - From Project Coin:
    - 6860965: Support for binary literals (e.g. 2 can be written 0b10)
    - 6860965: Support for underscored literals (e.g. 123456 can be
      written 123_456)
    - 6827009: Support for strings in switch statements (e.g. case "a")
    - 6840638: Improved inferencing with generics, e.g.
      Map<String,Integer> map = new HashMap<>();
  - jsr166y from http://gee.cs.oswego.edu/dl/concurrency-interest/:
    - 6865571: Add a lightweight task framework known as ForkJoin
    - 6445158: Phaser - an improved CyclicBarrier
    - 6865579: Add TransferQueue/LinkedTransferQueue
  - The Zero assembler port
  - JIBX is no longer required to build Nimbus.
  - Many bug fixes
- Latest security updates:
  - (CVE-2009-3728) ICC_Profile file existence detection information leak (6631533)
  - (CVE-2009-3885) BMP parsing DoS with UNC ICC links (6632445)
  - (CVE-2009-3881) resurrected classloaders can still have children (6636650) 
  - (CVE-2009-3882) Numerous static security flaws in Swing (findbugs) (6657026)
  - (CVE-2009-3883) Mutable statics in Windows PL&F (findbugs) (6657138)
  - (CVE-2009-3880) UI logging information leakage (6664512)
  - (CVE-2009-3879) GraphicsConfiguration information leak (6822057)
  - (CVE-2009-3884) zoneinfo file existence information leak (6824265)
  - (CVE-2009-2409) deprecate MD2 in SSL cert validation (Kaminsky) (6861062)
  - (CVE-2009-3873) JPEG Image Writer quantization problem (6862968)
  - (CVE-2009-3875) MessageDigest.isEqual introduces timing attack vulnerabilities (6863503)
  - (CVE-2009-3876, CVE-2009-3877) OpenJDK ASN.1/DER input stream parser denial of service (6864911)
  - (CVE-2009-3869) JRE AWT setDifflCM stack overflow (6872357)
  - (CVE-2009-3874) ImageI/O JPEG heap overflow (6874643
  - (CVE-2009-3871) JRE AWT setBytePixels heap overflow (6872358)
- The NSS crypto. provider may be turned on with --enable-nss if
  the NSS libraries and headers are available via pkg-config.
- Makefile reorganisation:
  * icedtea-ecj is now icedtea-boot and patches/ecj is now
    patches/boot.
  * The icedtea-against-icedtea target is now icedtea-stage2.
    The icedtea-against-ecj target is now icedtea-stage1.
  * The Java code for the plugin is now built by the
    liveconnect.stamp and liveconnect-dist.stamp targets
    rather than hijacking the OpenJDK build.
- Upgraded to VisualVM 1.2.1

New in release 1.11 (2009-08-06)

- Updated to OpenJDK7 b66 (Milestone 4), including
  JSR 308: Annotations on Java types.
- Updates/bug fixes for netx, Shark and the web plugin.
- Zero is now provided in the upstream forest rather than in-tree.
- The options
  - --with-openjdk
  - --with-icedtea
  - --with-openjdk-home
  - --with-icedtea-home
  - --with-gcj-jdk
  have been removed.  The JDK is now specified by --with-jdk-home
  and whether or not do a full bootstrap or not is now decided
  by --disable-bootstrap (the default is yes).  This is in preparation
  for making the two stages independent of the JDK used, but some
  artefacts still remain in this release; the supported behaviour
  is still the use of gcj jdk for a full bootstrap and icedtea
  for a quick build.
- Added java method tracing using systemtap version 0.9.9+.
- Added latest security fixes.

New in release 1.10 (2009-05-29)

- Updated to OpenJDK7 b59 build via IcedTea forest.  Now includes
  SCTP and Nimbus Swing look and feel.
- Static trace support through systemtap.
  When given the configure option --enable-systemtap IcedTea will build
  hotspot with the dtrace static markers enabled and install an hotspot
  tapset that can be used to dynamically trace execution of java
  applications at runtime. See the tapset/hotspot.stp file for
  documentation of the various trace points and arguments available.
- Allow building of other virtual machines besides the default VM. Additional
  virtual machines on architectures where hotspot is available are cacao
  and zero (or shark), and cacao, where zero (or shark) is available. It's
  not possible to build cacao as the default VM, and zero as additional VM.
- New options --enable-nimbus and --enable-nimbus-generation.  The default
  is that the first is on but the second is off, so Nimbus is built but
  without needing to generate the files using JIBX (http://jibx.sourceforge.net/).
- VisualVM updated to 1.1.1.
- Many build fixes, notably to make netx/the plugin work.  IcedTea7 now
  avoids the binary plug mechanism in favour of using the same method as
  CORBA, JAXP, JAXWS and langtools to import the plugin/netx code.
- Several web browser plugin and javaws support fixes:
  - Fixed security handling to prevent access denials when there is a site
  specific exception in the policy file
  - Allow extensions (chrome) to run Java code with full permissions
  - Added non-trusted SSL support to WebStart (javaws)
  - Added proxy support
  - Other improvements that were breaking specific sites (tag parser fix,
    nested jar support, etc.)
  - Added JVM Console (used by https://chrispederick.com/work/web-developer/)
  - Experimental new plugin enabled by --enable-npplugin.
  - Original plugin is now enabled by --enable-plugin, not --enable-liveconnect.
- LCMS security fixes.
- Many build improvements.
- Many zero/shark jtreg fixes.
- Other bug fixes.

New in release 1.9 (2009-03-20)

- Security fixes for:
  CVE-2008-5360 - Temporary files have guessable file names.
  CVE-2008-5350 - Allows to list files within the user home directory.
  CVE-2008-5348 - Denial-Of-Service in kerberos authentication.
  CVE-2008-5359 - Buffer overflow in image processing.
  CVE-2008-5351 - UTF-8 decoder accepts non-shortest form sequences.
  CVE-2008-5356 - Font processing vulnerability.
  CVE-2008-5353 - Calendar object deserialization allows privilege escalation.
  CVE-2008-5354 - Privilege escalation in command line applications.
  CVE-2008-5357 - Truetype Font processing vulnerability.
  CVE-2008-5352 - Jar200 Decompression buffer overflow.
  CVE-2008-5358 - Buffer Overflow in GIF image processing.
- Updated to OpenJDK7 b50 build.
- XRender pipeline support: Java2D are noticably faster and running over a 
  remote X connection feels like it is all local. Build by default
  (disable with --disable-xrender). Runtime enabled by running java
  -Dsun.java2d.xrender=True (default is to use the old X renderer for now).
- IcedTeaPlugin now supports HTTPS sites and adds a user prompt for
  untrusted https certificates.
- Use the ALSA 'default' device. Makes Java play nicer with PulseAudio.
- VisualVM integration updated to 1.1.1
- Gervill soft synthesizer integration updated to latest CVS version.
- Integrated jtreg upgraded to 4_0-src-b02-15_oct_2008.
- make check runs much faster now. jtreg -samevm support has been
  integrated into the langtools and jdk subsystems. Please package the
  test/jtreg-summary.log file with your distribution package so end users
  can compare the test results.
- Shark (--enable-shark) now builds on 64 bit platforms, but is a
  pre-alpha technology preview and not recommended for use.
- Better support for bootstrapping with different jar programs
  (supporting -J options).
- If --with-pkgversion isn't given the short mercurial rev node version
  will be used.  Package distributors are encouraged to build packages with
  --with-pkgversion to uniquely identify their distribution version number
  when java -version is run to help distribution specific bug reporting.
- Various freetype font, pisces renderer and awt X window size fixes
  to fix visual anomalies.
- Build fixes for gcc 4.3 and 4.4-pre-release.
- Added support for building against a specific openjdk src dir
  or hg revision (--with-openjdk-src-dir or --with-hg-revision).
- Many other Plugin, Zero, Shark and PulseAudio bug fixes.
- Build clean up.
- Updated to CACAO 0.99.4.

New in release 1.8 (2008-11-20)

  IcedTea is based on the hard work of a lot of people that contributed to
  IcedTea6 and OpenJDK. The following noteworthy changes were added in
  this release:

- Updated to b39 build.
- Support for external projects (closures, caciocavallo, cvmi, bsd, nio2).
  Note that these are based on Mercurial repositories so may require local
  changes for a working build due to noticeable differences between the
  repository and the reference OpenJDK b39 build.  At the time of release,
  NIO2 was buildable out of the box.
- Fixed to use new sound service, Gervill.
- Many Netx fixes and now built by default.
- LiveConnect support replaces gcjwebplugin.
- Implemented JavaScript->Java security.
- PulseAudio integrated (--enable-pulse-java)
- VisualVM tool integrated (--enable-visualvm).
- Added out-of-the-box CACAO support (--with-cacao).
- Added the experimental Shark JIT for Zero.
- Cleaned up crypto support, all algorithms and key sizes are fully
  supported now without any (regional) restrictions. No more need for
  separate crypto policy jars.
- Integration of Mozilla Rhino javascript support for javax.script.
  (See https://icedtea.classpath.org/bugzilla/show_bug.cgi?id=179 when
   you want to enable non-system-installed versions of Rhino).
- Add support for Zero builds on alpha, arm, mips, mipsel, m68k, s390.
- Various build fixes.
- Several bug and security fixes.
- Plugin including LiveConnect support built as default.
- Various bugs fixed: renderer patch, version string updated, 
chinese fonts filename fix for Fedora etc.
- More progress on Shark and Cacao.
- Several plugin bug fixes.
- Several build fixes.

New in release 1.7 (2008-06-02)

  IcedTea is based on the hard work of a lot of people that contributed to
  IcedTea6 and OpenJDK. The following noteworthy changes were added in
  this release:

  - Paul Hohensee published a GNU/Linux hotspot Sparc port and Matthias
   Klose integrated it into IcedTea.
  - Keith Seiths and Andrew Haley made fixes to the awt color package so
   that it now provides the lcms library with PYCC and LINEAR_RGB ICC
   profiles, fixing several applications that did complex color
   transformations.
  - Karl Helgason wrote a midi software synthesizer called Gervill that
   is now integrated in IcedTea so that javax.sound.midi support works
   now. Mark Wielaard integrated it and made some fixes so that it works
   better with javax.sound.sampled.
  - Jonathan Gibbons released a free version of jtreg, which was imported
   into IcedTea by Mark Wielaard so that a make check now runs all the
   functional unit tests integrated into OpenJDK.
  - Joshua Sumali made lots of fixes to the javaws/netx support. Including
   improved security, namely catching Socket permissions during runtime,
   implementing the remaining JNLP services api (PrintService and
   JNLPRandomAccessFile), and applet focusing bug fixes, so now netx
   plays nice with gcjwebplugin.
  - Kelly O'Hair resolved the license issues with the (j)hat tool which is
   now integrated.
  - Lillian Angel and Tom Fitzsimmons added several .desktop files for
   the various tools included for better GNU/Linux desktop integration.
  - Thomas Fitzsimmons rewrote the cacert support to resolve issues with
   applications like Glashfish and Eclipse which access the keystore
   directly.
  - Lillian Angel made lots of bug fixes to the packaging and integration
   support, include improving the font support.
  - IcedTea6 1.2 and IcedTea[7] 1.7 are completely synced up again thanks
   to Andrew John Hughes.
  - Andrew also did all the work to make sure IcedTea[7] is now based on
   OpenJDK7 b26 as released by Xiomara Jayasena.
  - Thomas Fitzsimmons rewrote the certificate keystore support.
  - Christian Thalinger made various cacao integration fixes.

New in release 1.6 (2008-02-13)

- Zero-assembler implemented.
- Netx support added. Still a work-in-progress.
- Updated to build with gcc 4.3.
- Many bug fixes.

New in release 1.5 (2008-01-03)

- ppc/ppc64 support.
- ecj bootstrapping re-implemented.
- Updated to OpenJDK b24 build (now uses mercurial).
- System libraries (libpng, libjpeg, zlib, giflib) are used 
instead of OpenJDK's implementations.
- Several bug fixes.

New in release 1.4 (2007-10-12)

* Updated to OpenJDK b21 build (README and INSTALL updated accordingly).
* Now using SSL/Crypto support included in b21, OpenSSL certs
still read directly.
* TZdata fix: uses System's timezone data.
* Memory issue fix: maximum PermGen space set to 128M and MaxHeap
to 512M.
* Xinerama fix: uses system installed library instead.
* DebugInfo fix: generates full debuginfo, regardless of
optimization.
* Fixed JConsole crash.
* Several other bug fixes.

New in release 1.3 (2007-08-29)

* Updated to OpenJDK b18 build.
* Web browser plugin support using gcjwebplugin.
* Now using Font supported included in b18.
* Graphics fixes.
* SSL/Crypto fixes.
* Refactored build process.

New in release 1.2 (2007-08-01)

* Updated to OpenJDK b16 build.
* Freetype font support fully replacing the encumbered libt2k.
* Path widening imported from GNU Classpath.
* Window decorations on x86_64 fixed.
* Bug fixes in various graphics classes.
* Anti-aliasing support explicitly disabled (instead of crashing).
* OpenSSL certs read directly
* Various crypto bug fixes.

New in release 1.1 (2007-07-12)

* Color management and raster fixes for compatibility with LittleCMS.
* Debuginfo is always generated.
* Initial work to satisfy libt2k requirement with Freetype.
* The GNU Crypto security providers have been imported from GNU
  Classpath.
* IcedTls security provider.
